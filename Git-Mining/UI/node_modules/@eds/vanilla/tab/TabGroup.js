/**
 * @file Module to create Tab Group component.
 * @requires Tab
 */

import { Tab } from './Tab';

/**
 * Class representing a tab group.
 */
export class TabGroup {

  /**
   * Setup tab group properties.
   * @param {HTMLElement} element - The DOM element of the page.
   */
  constructor(element) {
    this.dom = {
      tabGroup: element,
      titles: element.querySelectorAll('.titles > .title'),
      contents: element.querySelectorAll('.contents > .content'),
    };
    this.tabs = [];
    this.listeners = {
      tabs: [],
    };
  }

  /**
   * Initialize tab group.
   * @public
   */
  init() {
    this._initTabs();
    this._addEventListeners();
  }

  /**
   * Destroy tab group and associated events.
   * @public
   */
  destroy() {
    this._removeEventListeners();
  }

  /**
   * Add event listeners.
   * @private
   */
  _addEventListeners() {
    Array.from(this.tabs).forEach((tab, index) => {
      const listener = () => {
        this._hideAll();
        tab.showContent();
      };
      this.listeners.tabs[index] = listener;
      tab.dom.title.addEventListener('click', listener);
      tab.dom.title.addEventListener('keyup', (evt) => {
        if (evt.key === 'Enter'){
          listener.call();
        }
      });
    });
  }

  /**
   * Remove event listeners.
   * @private
   */
  _removeEventListeners() {
    Array.from(this.tabs).forEach((tab, index) => {
      tab.dom.title.removeEventListener('click', this.listeners.tabs[index]);
      tab.dom.title.removeEventListener('keyup', this.listeners.tabs[index]);
    });
    this.listeners.tabs = [];
  }

  /**
   * Hide all tabs.
   * @private
   */
  _hideAll() {
    Array.from(this.tabs).forEach(tab => tab.hideContent());
  }

  /**
   * Initialize tabs.
   * @private
   */
  _initTabs() {
    for (let i = 0; i < this.dom.titles.length; i += 1) {
      const title = this.dom.titles[i];
      const content = this.dom.contents[i];
      const t = new Tab({title, content});
      if(title.classList.contains('selected')){
        t.showContent();
      }
      this.tabs.push(t);
    }
  }
}
