export declare class TimePicker {
  private dom: {
    element: HTMLElement;
  };

  private settings: {
    type: string;
    format: number;
    min: string;
    max: string;
    step: number;
    classes: Object;
  };

  private value: string;

  constructor(element: HTMLElement);

  init(): void;

  destroy(): void;

  private _addEventListeners(): void;

  private _removeEventListeners(): void;

  private render(): void;

  private checkDisabledState(): void;

  private getInterval(number: number): void;

  private printTimeOptions(arr: Array<string>, min: number, max: number, step: number, tInt: number): void;

  private toggleSelectOpt(select: HTMLElement): void;

  private optionsListPosition(select: HTMLElement): void;

  private hideSelectOpt(select: HTMLElement): void;

  private labelAction(): void;

  private validateInputValue(input: HTMLElement): void;

  private arrowKeyActions(event: Event, select: HTMLElement): void;

  private highlightOption(select: HTMLElement, hlindex: number): void;

  private highlightRemove(select: HTMLElement): void;

  private setSelectValue(select: HTMLElement, target: HTMLElement): void;

  private setComponentValue(): void;

  private leadingZeroFormat(val: string, size: number): void;

  private filterOptions(select: HTMLElement): void;

  private isInViewport(option: HTMLElement, optionsList: HTMLElement): void;

  private createElement(type: string, obj: Object): void;

  private ifClickedOutside(callback: Function, type: string, select: HTMLElement): void;
}
