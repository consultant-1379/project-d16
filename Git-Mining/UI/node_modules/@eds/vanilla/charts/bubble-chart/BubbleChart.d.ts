interface DataPoint {
  name: string;
  x: number;
  y: number;
}

interface Data {
  series: {
    name: string;
    values: DataPoint[]
  }[];
}

interface X {
  unit?: string;
  label?: string;
  startFromZero?: boolean;
  isLogarithmic?: boolean;
  tickFormat?: string;
}

interface Y {
  unit?: string;
  label?: string;
  startFromZero?: boolean;
  isLogarithmic?: boolean;
  tickFormat?: string;
}

interface R {
  unit?: string;
  label?: string;
  tickFormat?: string;
}

interface Margin {
  left?: number;
  right?: number;
  top?: number;
  bottom?: number;
}

interface Props {
  data: Data;
  element: HTMLElement;
  x?: X;
  y?: Y;
  r?: R;
  height?: number;
  margin?: Margin;
  diameter?: {
    min?: number;
    max?: number;
  };
  trendline?: {
    show: boolean;
    type?: string;
  };
}

export declare class BubbleChart {
  constructor(props: Props);

  init(): void;
  draw(data?: Data): void;
  destroy(): void;
  private _createX(): void;
  private _createY(): void;
  private _createSizeLegend(): void;
  private _drawTooltip(): void;
  private _getValues(): void;
  private _drawDots(): void;
  private _drawTrendlines(): void;
  private _drawCrosshair(): void;
  private _onMousemove(): void;
  private _highlight(): void;
}
