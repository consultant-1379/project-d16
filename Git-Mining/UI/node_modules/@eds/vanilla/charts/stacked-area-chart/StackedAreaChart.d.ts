// import { Format } from "../common/Format";

interface Data {
  series: {
    name: string;
    values: number[];
  }[];
  common: number[] | string[];
}

interface Margin {
  left?: number;
  right?: number;
  top?: number;
  bottom?: number;
}

interface Thresholds {
  color: string;
  moreThan?: number;
  lessThan?: number;
}

interface Format {
  input?: string;
}

interface Tooltip {
  format?: {
    title?: string;
    value?: string;
  };
  isHidden?: boolean;
}

interface Props {
  data: Data;
  element: HTMLElement;
  height?: number;
  margin?: Margin;
  thresholds?: Thresholds[];
  y?: {
    startFromZero?: boolean;
    isLogarithmic?: boolean;
    isPercentage?: boolean;
    unit?: string;
    tickFormat?: string;
  };
  x?: {
    isTime?: boolean;
    unit?: string;
    tickFormat?: string;
  }
  format?: Format;
  tooltip?: Tooltip;
  hasLiveData?: boolean;
}

export declare class StackedAreaChart {
  constructor(props: Props);

  init(): void;
  destroy(): void;
  draw(data?: Data): void;
  private _sortCommonData(commonData: Array<string>, isDate: Boolean): void;
  private _highlight(key: String): void;
}
