/**
 * @file Module to create Accordion component.
 */

/**
 * Class representing an accordion.
 */
export class Accordion {

  /**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */
  constructor(element) {
    this.dom = {
      accordion: element,
      titles: []
    };
    this.listeners = {
      click: (evt) => this.toggleAccordion(evt),
      elementKeyPress: (evt) => {
        if (evt.code === 'Space' && evt.target.nodeName === 'LI'){
          evt.preventDefault();
          this.toggleAccordion(evt);
        }
      },
    };
    this.autoclose = this.dom.accordion.classList.contains('autoclose');
  }

  /**
   * Create component.
   * @public
   */
  init() {
    this._processElement();
    this._addEventListeners();
  }

  /**
   * Destroy component.
   * @public
   */
  destroy() {
    this._removeEventListeners();
  }

  /**
   * Add event listeners.
   * @private
   */
  _addEventListeners() {
    for (const title of this.dom.titles) {
      title.addEventListener('click', this.listeners.click);
    }
    this.dom.accordion.addEventListener('keydown', this.listeners.elementKeyPress);
  }

  /**
   * Remove event listeners.
   * @private
   */
  _removeEventListeners() {
    for (const title of this.dom.titles) {
      title.removeEventListener('click', this.listeners.click);
    }
    this.dom.accordion.removeEventListener('keyup', this.listeners.elementKeyPress);
  }

  /**
   * Add required classes, fill in this.dom.titles.
   * @private
   */
  _processElement() {
    const ul = this.dom.accordion.querySelector('ul');
    ul.classList.add('accordion-list');

    Array.from(ul.children).forEach((li) => {
      li.classList.add('accordion-item');
      this.dom.titles.push(li.querySelector('.title'));
    });
  }

  /**
   * Toggle accordion list item.
   * @public
   * @param {Event} evt - Click event.
   * @param {HTMLElement} evt.target - Clicked title element.
   */
  toggleAccordion({target}) {

    const selectedLi = target.closest('.accordion-item');
    if (this.autoclose) {
      Array.from(this.dom.accordion.querySelectorAll('.accordion-item')).forEach((li) => {
        if (li !== selectedLi) {
          li.classList.remove('opened');
        }
      });
    }
    selectedLi.classList.toggle('opened');
  }

  // TODO Add public methods collapseAll, expandAll
}
