// Polyfill for creating CustomEvents on IE9/10/11

// code pulled from:
// https://github.com/d4tocchini/customevent-polyfill
// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill

(function() {
  if (typeof window === 'undefined') {
    return;
  }

  try {
    var ce = new window.CustomEvent('test', { cancelable: true });
    ce.preventDefault();
    if (ce.defaultPrevented !== true) {
      // IE has problems with .preventDefault() on custom events
      // http://stackoverflow.com/questions/23349191
      throw new Error('Could not prevent default');
    }
  } catch (e) {
    var CustomEvent = function(event, params) {
      var evt, origPrevent;
      params = params || {
        bubbles: false,
        cancelable: false,
        detail: undefined
      };

      evt = document.createEvent('CustomEvent');
      evt.initCustomEvent(
        event,
        params.bubbles,
        params.cancelable,
        params.detail
      );
      origPrevent = evt.preventDefault;
      evt.preventDefault = function() {
        origPrevent.call(this);
        try {
          Object.defineProperty(this, 'defaultPrevented', {
            get: function() {
              return true;
            }
          });
        } catch (e) {
          this.defaultPrevented = true;
        }
      };
      return evt;
    };

    CustomEvent.prototype = window.Event.prototype;
    window.CustomEvent = CustomEvent; // expose definition to window
  }
})();
'use strict';require("core-js/modules/es6.regexp.constructor");require("core-js/modules/es6.array.reduce");require("core-js/modules/es6.regexp.replace");require("core-js/modules/es6.array.find-index");require("core-js/modules/es6.array.find");require("core-js/modules/es6.array.is-array");require("core-js/modules/es7.array.includes");require("core-js/modules/es6.string.includes");require("core-js/modules/es6.string.trim");require("core-js/modules/es6.date.now");require("core-js/modules/es6.regexp.flags");require("core-js/modules/es6.array.sort");require("core-js/modules/es6.function.bind");require("core-js/modules/es6.function.name");require("core-js/modules/es6.array.filter");require("core-js/modules/es6.array.iterator");require("core-js/modules/es6.object.keys");require("core-js/modules/es6.array.some");require("core-js/modules/es6.regexp.to-string");require("core-js/modules/es6.date.to-string");require("core-js/modules/es6.date.to-iso-string");require("core-js/modules/es6.regexp.match");require("core-js/modules/es6.number.constructor");require("core-js/modules/es6.array.map");require("core-js/modules/es6.regexp.split");require("core-js/modules/es6.array.index-of");require("core-js/modules/es6.string.iterator");require("core-js/modules/es6.array.from");require("core-js/modules/es6.array.for-each");require("core-js/modules/es7.symbol.async-iterator");require("core-js/modules/es6.symbol");require("core-js/modules/web.dom.iterable");require("core-js/modules/es6.object.define-property");function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance");}function _iterableToArrayLimit(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"]!=null)_i["return"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}Object.defineProperty(exports,'__esModule',{value:true});function _interopDefault(ex){return ex&&_typeof(ex)==='object'&&'default'in ex?ex['default']:ex;}var dragula=_interopDefault(require('dragula/dist/dragula.min'));var d3=require('d3');var mapboxgl=_interopDefault(require('mapbox-gl'));/**
 * @file Module to create Accordion component.
 */ /**
 * Class representing an accordion.
 */var Accordion=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Accordion(element){var _this2=this;_classCallCheck(this,Accordion);this.dom={accordion:element,titles:[]};this.listeners={click:function click(evt){return _this2.toggleAccordion(evt);},elementKeyPress:function elementKeyPress(evt){if(evt.code==='Space'&&evt.target.nodeName==='LI'){evt.preventDefault();_this2.toggleAccordion(evt);}}};this.autoclose=this.dom.accordion.classList.contains('autoclose');}/**
   * Create component.
   * @public
   */_createClass(Accordion,[{key:"init",value:function init(){this._processElement();this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.dom.titles[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var title=_step.value;title.addEventListener('click',this.listeners.click);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}this.dom.accordion.addEventListener('keydown',this.listeners.elementKeyPress);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=this.dom.titles[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var title=_step2.value;title.removeEventListener('click',this.listeners.click);}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}this.dom.accordion.removeEventListener('keyup',this.listeners.elementKeyPress);}/**
   * Add required classes, fill in this.dom.titles.
   * @private
   */},{key:"_processElement",value:function _processElement(){var _this3=this;var ul=this.dom.accordion.querySelector('ul');ul.classList.add('accordion-list');Array.from(ul.children).forEach(function(li){li.classList.add('accordion-item');_this3.dom.titles.push(li.querySelector('.title'));});}/**
   * Toggle accordion list item.
   * @public
   * @param {Event} evt - Click event.
   * @param {HTMLElement} evt.target - Clicked title element.
   */},{key:"toggleAccordion",value:function toggleAccordion(_ref){var target=_ref.target;var selectedLi=target.closest('.accordion-item');if(this.autoclose){Array.from(this.dom.accordion.querySelectorAll('.accordion-item')).forEach(function(li){if(li!==selectedLi){li.classList.remove('opened');}});}selectedLi.classList.toggle('opened');}// TODO Add public methods collapseAll, expandAll
}]);return Accordion;}();/**
 * @file Module to create Application bar.
 */ /**
 * Class representing an appbar.
 */var Appbar=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Appbar(element){var _this4=this;_classCallCheck(this,Appbar);this.dom={appbar:element,navItem:element.querySelector('.actions-left .item'),navToggle:element.querySelector('.actions-left .item .navigation-toggle'),menuAnchor:element.querySelector('.actions-left .menu-anchor'),title:element.querySelector('.actions-left .title')};this.events={toggleNavigation:new CustomEvent('toggleNavigation'),showNavigation:new CustomEvent('showNavigation'),hideNavigation:new CustomEvent('hideNavigation')};this.listeners={toggleNavigation:function toggleNavigation(){return _this4._toggle();},hideNavigation:function hideNavigation(){return _this4._hide();},showNavigation:function showNavigation(){return _this4._show();}};}/**
   * Create component.
   * @public
   */_createClass(Appbar,[{key:"init",value:function init(){this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.navItem.addEventListener('click',this.listeners.toggleNavigation);this.dom.menuAnchor.addEventListener('click',this.listeners.toggleNavigation);document.addEventListener('hideNavigation',this.listeners.hideNavigation);document.addEventListener('showNavigation',this.listeners.showNavigation);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.navItem.removeEventListener('click',this.listeners.toggleNavigation);this.dom.menuAnchor.removeEventListener('click',this.listeners.toggleNavigation);document.removeEventListener('hideNavigation',this.listeners.hideNavigation);document.removeEventListener('showNavigation',this.listeners.showNavigation);}/**
   * Toggle application bar and dispatch event to toggle application navigation.
   * @private
   */},{key:"_toggle",value:function _toggle(){if(this.dom.title.classList.contains('open-menu')){this._hide();}else{this._show();}document.dispatchEvent(this.events.toggleNavigation);}/**
   * Hide application bar.
   * @private
   */},{key:"_hide",value:function _hide(){this.dom.title.classList.remove('open-menu');this.dom.menuAnchor.classList.remove('open-menu');this.dom.navToggle.classList.remove('closed');}/**
   * Show application bar.
   * @private.
   */},{key:"_show",value:function _show(){this.dom.title.classList.add('open-menu');this.dom.menuAnchor.classList.add('open-menu');this.dom.navToggle.classList.add('closed');}}]);return Appbar;}();/**
 * @file Module to create Application navigation.
 */ /**
 * Class representing an appnav.
 */var Appnav=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Appnav(element){var _this5=this;_classCallCheck(this,Appnav);this.dom={appnav:element};this.listeners={toggleNavigation:function toggleNavigation(){return _this5._toggle();},showNavigation:function showNavigation(){return _this5._show();},hideNavigation:function hideNavigation(){return _this5._hide();}};}/**
   * Create component.
   * @public
   */_createClass(Appnav,[{key:"init",value:function init(){this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){document.addEventListener('toggleNavigation',this.listeners.toggleNavigation);document.addEventListener('showNavigation',this.listeners.showNavigation);document.addEventListener('hideNavigation',this.listeners.hideNavigation);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){document.removeEventListener('toggleNavigation',this.listeners.toggleNavigation);document.removeEventListener('showNavigation',this.listeners.showNavigation);document.removeEventListener('hideNavigation',this.listeners.hideNavigation);}/**
   * Toggle application navigation.
   * @private
   */},{key:"_toggle",value:function _toggle(){if(this.dom.appnav.classList.contains('hidden')){this._show();window.localStorage.setItem('navClosed',false);}else{this._hide();window.localStorage.setItem('navClosed',true);}}/**
   * Show application navigation.
   * @private
   */},{key:"_show",value:function _show(){window.localStorage.setItem('navClosed',false);this.dom.appnav.classList.remove('hidden');}/**
   * Hide application navigation.
   * @private
   */},{key:"_hide",value:function _hide(){window.localStorage.setItem('navClosed',true);this.dom.appnav.classList.add('hidden');}}]);return Appnav;}();var Breadcrumb=/*#__PURE__*/function(){function Breadcrumb(element){var _this6=this;_classCallCheck(this,Breadcrumb);this.dom={breadcrumb:element,links:[],separators:[],more:{element:null,icon:null,menu:null,items:[]}};this.state={breadcrumb:[]};this.listeners={iconClick:function iconClick(){if(!_this6.dom.more.menu.classList.contains('visible')){_this6.dom.more.menu.classList.add('visible');}else{_this6.dom.more.menu.classList.remove('visible');}},windowClick:function windowClick(event){var target=event.target?event.target:event.srcElement;if(target!==_this6.dom.more.icon&&!_this6.dom.more.icon.contains(target)){_this6.dom.more.menu.classList.remove('visible');}}};}_createClass(Breadcrumb,[{key:"init",value:function init(breadcrumb){this.state.breadcrumb=breadcrumb;this._buildBreadcrumb();this._addEventListeners();}},{key:"destroy",value:function destroy(){this._removeEventListeners();this.dom.breadcrumb.innerHTML='';}},{key:"_buildBreadcrumb",value:function _buildBreadcrumb(){var numberOfBreadcrumbs=this.state.breadcrumb.length;if(numberOfBreadcrumbs<=3){this._buildShortBreadcrumb();}else{this._buildLongBreadcrumb();}}},{key:"_buildShortBreadcrumb",value:function _buildShortBreadcrumb(){var _this7=this;this.dom.breadcrumb.classList.add('short');this.dom.breadcrumb.classList.remove('long');var numberOfBreadcrumbs=this.state.breadcrumb.length;if(numberOfBreadcrumbs>1){var moreItems=this.state.breadcrumb.slice(0,this.state.breadcrumb.length-1);var moreElement=this._createMoreElement(moreItems);this.dom.breadcrumb.appendChild(moreElement);var separatorElement=this._createSeparatorElement();this.dom.breadcrumb.appendChild(separatorElement);}this.state.breadcrumb.forEach(function(item,index){if(numberOfBreadcrumbs-1!==index){var linkElement=_this7._createLinkElement(item,false);_this7.dom.breadcrumb.appendChild(linkElement);}else{var _linkElement=_this7._createLinkElement(item,true);_this7.dom.breadcrumb.appendChild(_linkElement);}if(numberOfBreadcrumbs-1!==index){var _separatorElement=_this7._createSeparatorElement();_this7.dom.breadcrumb.appendChild(_separatorElement);}});}},{key:"_buildLongBreadcrumb",value:function _buildLongBreadcrumb(){var _this8=this;this.dom.breadcrumb.classList.remove('short');this.dom.breadcrumb.classList.add('long');var numberOfBreadcrumbs=this.state.breadcrumb.length;var firstLink=this.state.breadcrumb[0];var moreLinks=this.state.breadcrumb.slice(0,numberOfBreadcrumbs-1);var lastLinks=this.state.breadcrumb.slice(numberOfBreadcrumbs-2,numberOfBreadcrumbs);var firstLinkElement=this._createLinkElement(firstLink,false);var firstSeparatorElement=this._createSeparatorElement();this.dom.breadcrumb.appendChild(firstLinkElement);this.dom.breadcrumb.appendChild(firstSeparatorElement);var moreElement=this._createMoreElement(moreLinks);this.dom.breadcrumb.appendChild(moreElement);lastLinks.forEach(function(item,index){var separatorElement=_this8._createSeparatorElement();var linkElement;if(index===1){linkElement=_this8._createLinkElement(item,true);}else{linkElement=_this8._createLinkElement(item,false);}_this8.dom.breadcrumb.appendChild(separatorElement);_this8.dom.breadcrumb.appendChild(linkElement);});}},{key:"_createLinkElement",value:function _createLinkElement(item,isLastItem){var linkElement=document.createElement('span');linkElement.classList.add('link');linkElement.innerHTML=item.title;if(!isLastItem&&item.action){linkElement.addEventListener('click',function(){item.action();});}this.dom.links.push(linkElement);return linkElement;}},{key:"_createSeparatorElement",value:function _createSeparatorElement(){var separatorElement=document.createElement('span');separatorElement.classList.add('separator');this.dom.separators.push(separatorElement);return separatorElement;}},{key:"_createMoreElement",value:function _createMoreElement(items){var moreElement=document.createElement('span');var iconElement=document.createElement('i');var menuElement=document.createElement('div');moreElement.classList.add('more');iconElement.classList.add('icon');menuElement.classList.add('menu');moreElement.appendChild(iconElement);moreElement.appendChild(menuElement);items.forEach(function(item){var itemDOM=document.createElement('div');itemDOM.classList.add('item');itemDOM.innerHTML=item.title;if(item.action){itemDOM.addEventListener('click',function(){item.action();});}menuElement.appendChild(itemDOM);});this.dom.more.element=moreElement;this.dom.more.icon=iconElement;this.dom.more.menu=menuElement;return moreElement;}},{key:"_addEventListeners",value:function _addEventListeners(){if(this.dom.more.element){window.addEventListener('click',this.listeners.windowClick);}if(this.dom.more.icon){this.dom.more.icon.addEventListener('click',this.listeners.iconClick);}}},{key:"_removeEventListeners",value:function _removeEventListeners(){if(this.dom.more.element){window.removeEventListener('click',this.listeners.windowClick);}if(this.dom.more.icon){this.dom.more.icon.removeEventListener('click',this.listeners.iconClick);}}}]);return Breadcrumb;}();/**
 * @file Module to create Calendar component.
 */ /**
 * Class representing an accordion.
 */var Calendar=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Calendar(element){var _this9=this;_classCallCheck(this,Calendar);this.dom={calendar:element,year:element.querySelector('.year'),month:element.querySelector('.month'),days:[],prevYear:element.querySelector('.head i:nth-child(4)'),prevMonth:element.querySelector('.head i:nth-child(1)'),nextMonth:element.querySelector('.head i:nth-child(3)'),nextYear:element.querySelector('.head i:nth-child(6)'),body:element.querySelector('table.body')};this.eng={months:['January','February','March','April','May','June','July','August','September','October','November','December'],days:['Mo','Tu','We','Th','Fr','Sa','Su']};this.listeners={clickPrevYear:function clickPrevYear(){return _this9._setPrevYear();},clickPrevMonth:function clickPrevMonth(){return _this9._setPrevMonth();},clickNextMonth:function clickNextMonth(){return _this9._setNextMonth();},clickNextYear:function clickNextYear(){return _this9._setNextYear();}};this.calendar={year:'',month:'',days:[]};}/**
   * Create component.
   * @public
   */_createClass(Calendar,[{key:"init",value:function init(){this._createCalendarBody();this.setDataCalendar(new Date());this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.prevYear.addEventListener('click',this.listeners.clickPrevYear,false);this.dom.prevMonth.addEventListener('click',this.listeners.clickPrevMonth,false);this.dom.nextMonth.addEventListener('click',this.listeners.clickNextMonth,false);this.dom.nextYear.addEventListener('click',this.listeners.clickNextYear,false);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.prevYear.removeEventListener('click',this.listeners.clickPrevYear,false);this.dom.prevMonth.removeEventListener('click',this.listeners.clickPrevMonth,false);this.dom.nextMonth.removeEventListener('click',this.listeners.clickNextMonth,false);this.dom.nextYear.removeEventListener('click',this.listeners.clickNextYear,false);}/**
   * Modify year property and call method to update calendar element.
   * @private
   */},{key:"_setPrevYear",value:function _setPrevYear(){var year=parseInt(this.calendar.year,10)-1;var monthNum=this.eng.months.indexOf(this.calendar.month);this.setDataCalendar(new Date(year,monthNum,'1'));this.removeAllSelectedDays();this.disableUnselectableDays();}/**
   * Modify month property and call method to update calendar element.
   * @private
   */},{key:"_setPrevMonth",value:function _setPrevMonth(){var year=this.calendar.year;var monthNum=this.eng.months.indexOf(this.calendar.month);// decrement month
if(monthNum===0){monthNum=11;year=parseInt(this.calendar.year,10)-1;}else{monthNum-=1;}this.setDataCalendar(new Date(year,monthNum,'1'));this.removeAllSelectedDays();this.disableUnselectableDays();}/**
   * Modify month property and call method to update calendar element.
   * @private
   */},{key:"_setNextMonth",value:function _setNextMonth(){var year=this.calendar.year;var monthNum=this.eng.months.indexOf(this.calendar.month);// increment month
if(monthNum===11){monthNum=0;year=parseInt(this.calendar.year,10)+1;}else{monthNum+=1;}this.setDataCalendar(new Date(year,monthNum,'1'));this.removeAllSelectedDays();this.disableUnselectableDays();}/**
   * Modify year property and call method to update calendar element.
   * @private
   */},{key:"_setNextYear",value:function _setNextYear(){var year=parseInt(this.calendar.year,10)+1;var monthNum=this.eng.months.indexOf(this.calendar.month);this.setDataCalendar(new Date(year,monthNum,'1'));this.removeAllSelectedDays();this.disableUnselectableDays();}/**
   * Creates the necessary table elements.
   * @private
   */},{key:"_createCalendarBody",value:function _createCalendarBody(){// table head
var thead=document.createElement('thead');var trHead=document.createElement('tr');for(var d=0;d<7;d+=1){var th=document.createElement('th');th.innerHTML=this.eng.days[d];trHead.appendChild(th);}thead.appendChild(trHead);this.dom.body.appendChild(thead);// table body
var tbody=document.createElement('tbody');var numTD=7;// 7 days / week
var numTR=6;// 6 weeks / month
var j=0;for(;j<numTR;j+=1){var tr=document.createElement('tr');for(var i=0;i<numTD;i+=1){var td=document.createElement('td');tr.appendChild(td);}tbody.appendChild(tr);}this.dom.body.appendChild(tbody);// update the constructor value 'days'
this.dom.days=this.dom.calendar.querySelectorAll('td');}/**
   * Fills in the DOM content with this.calendar information.
   * @private
   */},{key:"_setDOMCalendar",value:function _setDOMCalendar(){var _this10=this;var today=this.formatJsDate(new Date()).split('-');this.dom.month.innerText=this.calendar.month;this.dom.year.innerText=this.calendar.year;Array.from(this.dom.days).forEach(function(dayDOM,i){var dayValue=_this10.calendar.days[i];if(dayValue!==0){dayDOM.innerText=dayValue;dayDOM.classList.remove('dummy');if(+today[0]===+_this10.calendar.year&&+today[1]===_this10.eng.months.indexOf(_this10.calendar.month)+1&&+today[2]===_this10.calendar.days[i]){dayDOM.innerHTML='<span class="today">'+dayValue+'</span>';}}else{dayDOM.innerText='';dayDOM.classList.add('dummy');}});}/**
   * Fills in this.calendar information and calls a method to update DOM element.
   * @public
   * @param {Date} date
   */},{key:"setDataCalendar",value:function setDataCalendar(date){var dArray=this.formatJsDate(date).split('-');var jsDate=new Date(dArray[0],dArray[1]-1,1);var lastDayMonth=new Date(dArray[0],dArray[1],0);var daysInMonthNum=lastDayMonth.getDate();var dayOfWeekNum=jsDate.getDay();// const lastDayOfWeekNum = lastDayMonth.getUTCDay();
this.calendar.year=dArray[0];this.calendar.month=this.eng.months[dArray[1]-1];// create 0's at the head
var headZeroes=Array.apply(null,{length:(dayOfWeekNum+6)%7}).map(Number.prototype.valueOf,0);// create day numbers != 0
var numbersInRow=Array.apply(null,{length:daysInMonthNum+1}).map(Number.call,Number);numbersInRow.shift();// create 0's at the tail
var numZeroes=42-(headZeroes.length+numbersInRow.length);var tailZeroes=Array.apply(null,Array(numZeroes)).map(Number.prototype.valueOf,0);// concat all the days and add to calendar
this.calendar.days=headZeroes.concat(numbersInRow,tailZeroes);// Updates the values of the DOM with the current calendar data
this._setDOMCalendar();}/**
   * Given a JS Date Object return a string in YYYY-MM-DD format.
   * Previously yyyymmdd()
   * @public
   * @param {Date} jsDate - JS Date Object (created with constructor new Date()).
   * @return {string} - Date in format YYYY-MM-DD.
   */},{key:"formatJsDate",value:function formatJsDate(jsDate){var mm=jsDate.getMonth()+1;var dd=jsDate.getDate();return[jsDate.getFullYear(),(mm>9?'':'0')+mm,(dd>9?'':'0')+dd].join('-');}/**
   * Given an Object return a string in YYYY-MM-DD format.
   * @public
   * @param {Object} date
   * @param {string} date.year
   * @param {string} date.month
   * @param {string} date.day
   * @return {string} - Date in format YYYY-MM-DD.
   */},{key:"formatDate",value:function formatDate(date){return date.year+'-'+this._getMonthNum(date.month)+'-'+this._getDayNum(date.day);}/**
   * Returns month number with leading zero.
   * @private
   * @param {string} month
   * @return {string}
   */},{key:"_getMonthNum",value:function _getMonthNum(month){var n=this.eng.months.indexOf(month)+1;return n<10?'0'+n:n;}/**
   * Returns day of month number with leading zero.
   * @private
   * @param {string} day
   * @return {string}
   */},{key:"_getDayNum",value:function _getDayNum(day){return day<10?'0'+day:day;}/**
   * Unselect all days.
   * @public
   */},{key:"removeAllSelectedDays",value:function removeAllSelectedDays(){Array.from(this.dom.days).forEach(function(day){day.classList.remove('selected');});}/**
   * Unselect all days.
   * @public
   * @param {String} maxDate - Maximum date in format YYYY-MM-DD
   */},{key:"setMaximumDate",value:function setMaximumDate(maxDate){var max=maxDate.split('-');this.max={day:+max[2],month:+max[1],year:+max[0]};}/**
   * Unselect all days.
   * @public
   * @param {String} minDate - Minimum date in format YYYY-MM-DD
   */},{key:"setMinimumDate",value:function setMinimumDate(minDate){var min=minDate.split('-');this.min={day:+min[2],month:+min[1],year:+min[0]};}},{key:"_disableMaximumUnselectableDays",value:function _disableMaximumUnselectableDays(){var _this11=this;if(!this.max){return;}Array.from(this.dom.days).forEach(function(day){if(+_this11.calendar.year>_this11.max.year||+_this11.calendar.year===_this11.max.year&&+_this11._getMonthNum(_this11.calendar.month)>_this11.max.month||+_this11.calendar.year===_this11.max.year&&+_this11._getMonthNum(_this11.calendar.month)===_this11.max.month&&+day.innerText>_this11.max.day){day.classList.add('disabled');}});}},{key:"_disableMinimumUnselectableDays",value:function _disableMinimumUnselectableDays(){var _this12=this;if(!this.min){return;}Array.from(this.dom.days).forEach(function(day){if(+_this12.calendar.year<_this12.min.year||+_this12.calendar.year===_this12.min.year&&+_this12._getMonthNum(_this12.calendar.month)<_this12.min.month||+_this12.calendar.year===_this12.min.year&&+_this12._getMonthNum(_this12.calendar.month)===_this12.min.month&&+day.innerText<_this12.min.day){day.classList.add('disabled');}});}},{key:"_clearRestrictionDates",value:function _clearRestrictionDates(){Array.from(this.dom.days).forEach(function(day){day.classList.remove('disabled');});}},{key:"disableUnselectableDays",value:function disableUnselectableDays(){if(this.dom.days){this._clearRestrictionDates();this._disableMaximumUnselectableDays();this._disableMinimumUnselectableDays();}}}]);return Calendar;}();/**
 * @file Module to create Card component.
 */ /**
 * Class representing a card.
 */var Card=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Card(element){var _this13=this;_classCallCheck(this,Card);this.dom={card:element};this.listeners={selectCard:function selectCard(){return _this13.selectCard();}};}/**
   * Create component.
   * @public
   */_createClass(Card,[{key:"init",value:function init(){this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.card.addEventListener('click',this.listeners.selectCard);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.card.removeEventListener('click',this.listeners.selectCard);}/**
   * Toggle selected card.
   * @public
   */},{key:"selectCard",value:function selectCard(){this.dom.card.classList.toggle('selected');// TODO Dispatch event with selected card
}}]);return Card;}();/**
 * @file Module to create Datepicker component.
 * @requires Calendar
 */ /**
 * Class representing an datepicker.
 */var Datepicker=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Datepicker(element){var _this14=this;_classCallCheck(this,Datepicker);this.dom={datepicker:element,calendar:element.querySelector('.calendar'),button:element.querySelector('.btn, .suffix'),input:element.querySelector('input[type="text"]'),days:null,hiddenInput:element.querySelector('input[type="hidden"]')};this.listeners={clickOutside:function clickOutside(evt){return _this14._hideIfClickedOutside(evt);},clickDay:function clickDay(evt){return _this14._selectDay(evt);},clickButton:function clickButton(){return _this14._toggleCalendar();},clickInput:function clickInput(){return _this14._showCalendar();},onFocus:function onFocus(){return _this14._showCalendar();},changeInput:function changeInput(){return _this14._onInputChange();},keyupInput:function keyupInput(evt){return _this14._onInputKeyup(evt);}};this.calendar=null;this.selectedDate=null;}/**
   * Create component.
   * @public
   */_createClass(Datepicker,[{key:"init",value:function init(){this.calendar=new Calendar(this.dom.calendar);this.calendar.init();this.dom.days=this.dom.calendar.querySelectorAll('td');// set minimum date limit
if(this.dom.input.min){this.setMinimumDate(this.dom.input.min);}// set maximum date limit
if(this.dom.input.max){this.setMaximumDate(this.dom.input.max);}// in case of predefined date, validate it
if(this.dom.input.value&&this._isValidDate(this.dom.input.value)&&this._isInRange(this.dom.input.value)){this._setSelectedDate();}else{this.dom.input.value='';}this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this15=this;this.dom.button.addEventListener('click',this.listeners.clickButton,false);Array.from(this.dom.days).forEach(function(day){day.addEventListener('click',_this15.listeners.clickDay,false);});this.dom.input.addEventListener('click',this.listeners.clickInput,false);this.dom.input.addEventListener('change',this.listeners.changeInput);this.dom.input.addEventListener('keyup',this.listeners.keyupInput);this.dom.input.addEventListener('focus',this.listeners.onFocus,false);document.addEventListener('click',this.listeners.clickOutside,false);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this16=this;this.dom.button.removeEventListener('click',this.listeners.clickButton,false);Array.from(this.dom.days).forEach(function(day){day.removeEventListener('click',_this16.listeners.clickDay,false);});this.dom.input.removeEventListener('change',this.listeners.changeInput);this.dom.input.removeEventListener('keyup',this.listeners.keyupInput);document.removeEventListener('click',this.listeners.clickOutside,false);}/**
   * Check if date is valid.
   * @private
   * @param {string} dateString
   * @return {boolean} - True if date is valid.
   */},{key:"_isValidDate",value:function _isValidDate(dateString){var regEx=/^\d{4}-\d{2}-\d{2}$/;// Invalid format
if(!dateString.match(regEx)){return false;}var d=new Date(dateString);// Invalid date (or this could be epoch), https://stackoverflow.com/a/1353711/4634380
if(isNaN(d.getTime())){return false;}return d.toISOString().slice(0,10)===dateString;}/**
   * Check if date is in min - max limit.
   * @private
   * @param {string} dateString
   * @return {boolean} - True if date is within range.
   */},{key:"_isInRange",value:function _isInRange(dateString){var result=true;if(this.calendar.min&&new Date(dateString)<new Date(this.dom.input.min)){result=false;}if(this.calendar.max&&new Date(dateString)>new Date(this.dom.input.max)){result=false;}return result;}/**
   * Check input date
   * if valid date, update calendar and highlight with CSS;
   * if invalid date, correct date format.
   * @private
   */},{key:"_handleDateChange",value:function _handleDateChange(){var typedInput=this.dom.input.value;if(typedInput.length===10){if(this._isValidDate(typedInput)){this.calendar.setDataCalendar(new Date(typedInput));var dateArray=typedInput.split('-');this.selectedDate={year:dateArray[0],month:dateArray[1],day:dateArray[2]};this._setSelectedDateCSS();}else{this._correctDateFormat();}}}/**
   * Handle input change event (works on blur)
   * if valid date, update calendar and highlight with CSS;
   * if invalid date, correct date format.
   * @private
   */},{key:"_onInputChange",value:function _onInputChange(){var inputValue=this.dom.input.value;// If clear input, remove selected date and styles
if(!inputValue){this._clearSelectedDate();return;}// If date in input is valid and in the range, set new selected date and styles
if(this._isValidDate(this.dom.input.value)&&this._isInRange(this.dom.input.value)){this._setSelectedDate();}else{// Otherwise, change to existing selected date
this.dom.input.value=this.selectedDate?"".concat(this.selectedDate.year,"-").concat(this.selectedDate.month,"-").concat(this.selectedDate.day):'';}}/**
   * Handle keyup event
   * @private
   */},{key:"_onInputKeyup",value:function _onInputKeyup(evt){if(evt.key==='Escape'){this._hideCalendar();}else if(this.dom.input.value.length===10){/*
       * Entered 10 characters -> validate input,
       * if correct change it, otherwise do nothing
       * because it will be set to proper state on blur (onInputChange will work)
       */if(this._isValidDate(this.dom.input.value)&&this._isInRange(this.dom.input.value)){this._setSelectedDate();}}else if(this.dom.input.value.length===0){/*
       * To reproduce this case
       * 1. open empty input
       * 2. type in valid date (becomes selected)
       * 3. remove date by hitting backspace button
       * This is not caught by change event because value doesnt change (empty -> empty),
       * but we need to reset selected date on step 2.
       */this._clearSelectedDate();}}/**
   * Set selected date
   * @private
   */},{key:"_setSelectedDate",value:function _setSelectedDate(){this.calendar.setDataCalendar(new Date(this.dom.input.value));var dateArray=this.dom.input.value.split('-');this.selectedDate={year:dateArray[0],month:dateArray[1],day:dateArray[2]};this._setSelectedDateCSS();}/**
   * Clear selected date
   * @private
   */},{key:"_clearSelectedDate",value:function _clearSelectedDate(){this.selectedDate=null;this.calendar.removeAllSelectedDays();}/**
   * Set date to today when detecting an invalid date format.
   * @private
   */},{key:"_correctDateFormat",value:function _correctDateFormat(){var today=new Date();var todayYYYYMMDD=this.calendar.formatJsDate(today).split('-');this.dom.input.value=todayYYYYMMDD.join('-');this.selectedDate={year:todayYYYYMMDD[0],month:todayYYYYMMDD[1],day:todayYYYYMMDD[2]};this.calendar.setDataCalendar(new Date(today));this.calendar.removeAllSelectedDays();this._setSelectedDateCSS();}/**
   * Highlight selected date with CSS.
   * @private
   */},{key:"_setSelectedDateCSS",value:function _setSelectedDateCSS(){this.calendar.removeAllSelectedDays();// convert to number to remove leading zero if exists
var selectedDay=this.selectedDate?+this.selectedDate.day:new Date(this.dom.input.value).getDate();// convert to string for equality check
selectedDay=selectedDay.toString();Array.from(this.dom.days).some(function(day){if(day.innerText===selectedDay){day.classList.add('selected');return true;}});}/**
   * Select clicked day in calendar.
   * @private
   * @param {Event} evt - Click event
   */},{key:"_selectDay",value:function _selectDay(evt){if(!evt.target.classList.contains('dummy')){this.calendar.removeAllSelectedDays();this.selectedDate={year:this.calendar.calendar.year,month:this.calendar.calendar.month,day:evt.target.innerText};var formattedDate=this.calendar.formatDate(this.selectedDate);this.dom.input.value=this.dom.hiddenInput.value=formattedDate;if(evt.target.tagName==='TD'){evt.target.classList.add('selected');}else{evt.target.parentNode.classList.add('selected');}this.dom.input.dispatchEvent(new Event('change'));this._hideCalendar();}}/**
   * Hide calendar.
   * @private
   */},{key:"_hideCalendar",value:function _hideCalendar(){this.dom.calendar.classList.add('closed');}/**
   * Show calendar.
   * @private
   */},{key:"_showCalendar",value:function _showCalendar(){this.calendar.disableUnselectableDays();this.dom.calendar.classList.remove('closed');}/**
   * Toggle calendar visibility and validate selected date.
   * @private
   */},{key:"_toggleCalendar",value:function _toggleCalendar(){if(this.dom.calendar.classList.contains('closed')){this._showCalendar();}else{this._hideCalendar();}var inputValue=this.dom.input.value;// not empty input
if(inputValue){if(this._isValidDate(inputValue)&&this._isInRange(inputValue)){this.calendar.setDataCalendar(new Date(inputValue));this._setSelectedDateCSS();}}}/**
   * Hide calendar when click outside datepicker.
   * @private
   * @param {Event} evt - Click event.
   * @param {HTMLElement} evt.target - Clicked element.
   */},{key:"_hideIfClickedOutside",value:function _hideIfClickedOutside(_ref2){var target=_ref2.target;if(!this.dom.datepicker.contains(target)){this._hideCalendar();}}},{key:"setMaximumDate",value:function setMaximumDate(maxDate){this.calendar.setMaximumDate(maxDate);}},{key:"setMinimumDate",value:function setMinimumDate(minDate){this.calendar.setMinimumDate(minDate);}}]);return Datepicker;}();/**
 * @file Module to create Dialog component.
 */ /**
 * Class representing a dialog.
 */var Dialog=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Dialog(element){var _this17=this;_classCallCheck(this,Dialog);this.dom={dialog:element,content:element.querySelector('.content'),id:element.id,closeButtons:[]};this.type=element.dataset.type;this.trigger=element.dataset.trigger;this.events={closeDialogEvent:new CustomEvent('DialogClose',{detail:{id:this.dom.id}}),showDialogEvent:new CustomEvent('DialogShow',{detail:{id:this.dom.id}})};this.listeners={show:function show(){return _this17.show();},hide:function hide(){return _this17.hide();},triggerDialog:function triggerDialog(evt){return _this17._triggerDialog(evt);}};}/**
   * Create component.
   * @public
   */_createClass(Dialog,[{key:"init",value:function init(){this._getCloseButtons();this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this18=this;if(this.trigger){var button=document.querySelector(this.trigger);button.addEventListener('click',this.listeners.show);}else{this.dom.dialog.addEventListener('triggerDialog',this.listeners.triggerDialog);}this.dom.closeButtons.forEach(function(button){button.addEventListener('click',_this18.listeners.hide);});}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this19=this;if(this.trigger){var button=document.querySelector(this.trigger);button.removeEventListener('click',this.listeners.show);}else{this.dom.dialog.removeEventListener('triggerDialog',this.listeners.triggerDialog);}this.dom.closeButtons.forEach(function(button){button.removeEventListener('click',_this19.listeners.hide);});}/**
   * Show dialog.
   * @public
   */},{key:"show",value:function show(){this.dom.dialog.classList.add('show');this.dom.dialog.dispatchEvent(this.events.showDialogEvent);}/**
   * Hide dialog.
   * @public
   */},{key:"hide",value:function hide(){this.dom.dialog.classList.remove('show');this.dom.dialog.dispatchEvent(this.events.closeDialogEvent);}/**
   * Find elements to close the dialog (button or icon) and save them for future usage.
   * @private
   */},{key:"_getCloseButtons",value:function _getCloseButtons(){var buttons=this.dom.dialog.querySelectorAll('[data-close]');var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=buttons[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var button=_step3.value;this.dom.closeButtons.push(button);}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return!=null){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}}/**
   * Trigger dialog.
   * @private
   * @param {CustomEvent} evt - Event.
   */},{key:"_triggerDialog",value:function _triggerDialog(evt){if(evt.detail.id===this.dom.id){this.show();}}}]);return Dialog;}();var Drag=/*#__PURE__*/function(){function Drag(){_classCallCheck(this,Drag);}_createClass(Drag,null,[{key:"setContainers",value:function setContainers(args){dragula(args);// TODO: Open issue: https://github.com/bevacqua/dragula/issues/487
for(var i=0;i<args.length;i+=1){args[i].addEventListener('touchmove',function(e){return e.preventDefault();});}}}]);return Drag;}();var DropAreas=/*#__PURE__*/function(){function DropAreas(elements){_classCallCheck(this,DropAreas);this.dom={dropAreas:elements};}_createClass(DropAreas,[{key:"init",value:function init(){this.initEmptyStates();this.dragBehavior();this.fixForTouchScreen();}},{key:"initEmptyStates",value:function initEmptyStates(){for(var i=0;i<this.dom.dropAreas.length;i+=1){var da=this.dom.dropAreas[i];if(this.cardsIn(da)===0){this.showEmptyState(da);}}}},{key:"dragBehavior",value:function dragBehavior(){var _this20=this;var prevContainer;dragula(this.dom.dropAreas).on('over',function(el,container){if(!prevContainer){prevContainer=container;}if(prevContainer!==container){_this20.showDropOver(container);_this20.hideDropOver(prevContainer);if(_this20.cardsIn(container)===0){_this20.hideEmptyState(container);}if(_this20.cardsIn(prevContainer)===1){_this20.showEmptyState(prevContainer);}prevContainer=container;}}).on('drop',function(el,container){_this20.hideDropOver(container);prevContainer=null;}).on('cancel',function(el,container){_this20.hideDropOver(container);prevContainer=null;});}},{key:"cardsIn",value:function cardsIn(dropArea){return Array.from(dropArea.querySelectorAll('.card')).length;}},{key:"showEmptyState",value:function showEmptyState(element){try{element.querySelector('.empty-state').classList.add('visible');}catch(err){this.emptyStateNotFound();}}},{key:"hideEmptyState",value:function hideEmptyState(element){try{element.querySelector('.empty-state').classList.remove('visible');}catch(err){this.emptyStateNotFound();}}},{key:"emptyStateNotFound",value:function emptyStateNotFound(){// eslint-disable-next-line max-len
console.error('No empty-state element found! You have to add one to your drop-area. Check EDS documentation for more info.');}},{key:"showDropOver",value:function showDropOver(element){element.classList.add('drop-over');}},{key:"hideDropOver",value:function hideDropOver(element){element.classList.remove('drop-over');}// TODO: Open issue: https://github.com/bevacqua/dragula/issues/487
},{key:"fixForTouchScreen",value:function fixForTouchScreen(){for(var i=0;i<this.dom.dropAreas.length;i+=1){this.dom.dropAreas[i].addEventListener('touchmove',function(e){return e.preventDefault();});}}}]);return DropAreas;}();/**
 * @file Module to create Menu component.
 */ /**
 * Class representing a menu.
 */var Menu=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Menu(element){_classCallCheck(this,Menu);this.dom={menu:element,items:element.querySelectorAll('.item')};}/**
   * Create component.
   * @public
   */_createClass(Menu,[{key:"init",value:function init(){}/**
   * Toggle menu.
   * @public
   */},{key:"toggle",value:function toggle(){if(this.dom.menu.classList.contains('visible')){this.hide();}else{this.show();}}/**
   * Show menu.
   * @public
   */},{key:"show",value:function show(){var parentClass=this.dom.menu.parentElement.classList;if(parentClass.contains('dropdown')){parentClass.add('open');}this.dom.menu.classList.add('visible');}/**
   * Hide menu.
   * @public
   */},{key:"hide",value:function hide(){var parentClass=this.dom.menu.parentElement.classList;if(parentClass.contains('dropdown')){parentClass.remove('open');}this.dom.menu.classList.remove('visible');}}]);return Menu;}();/**
 * @file Module to create Dropdown component.
 * @requires Menu
 */ /**
 * Class representing a dropdown.
 */var Dropdown=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Dropdown(element){var _this21=this;_classCallCheck(this,Dropdown);this.dom={dropdown:element,button:element.querySelector('.btn, .clickable'),extraButton:element.querySelector('.extra'),menu:element.querySelector('.menu'),items:element.querySelectorAll('.item')};this.listeners={dropdownKeydown:function dropdownKeydown(evt){if(evt.key==='ArrowUp'||evt.key==='ArrowDown'||evt.key==='Enter'||evt.key===' '){evt.preventDefault();}if(evt.key===' '){if(_this21.dom.dropdown.classList.contains('open')&&_this21.dom.menu.querySelector('.highlight')){evt.preventDefault();}}_this21._arrowKeyActions(evt);},toggleMenu:function toggleMenu(){return _this21.menu.toggle();},hideMenu:function hideMenu(){_this21.menu.hide();_this21._removeOptionsHighlight();},clickOutside:function clickOutside(evt){return _this21._hideIfClickedOutside(evt);}};this.highlightIndex=-1;this.type=element.getAttribute('data-type')||'click';this.isDisabled=this.dom.dropdown.getAttribute('disabled')!==null;}/**
   * Create component.
   * @public
   */_createClass(Dropdown,[{key:"init",value:function init(){if(this.dom.menu){this.menu=new Menu(this.dom.menu);this.menu.init();}if(this.isDisabled){this._setDisabled();}this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){switch(this.type){case'click':this.dom.button.addEventListener('click',this.listeners.toggleMenu);this.dom.menu.addEventListener('click',this.listeners.hideMenu);this.dom.dropdown.addEventListener('keydown',this.listeners.dropdownKeydown);break;case'divided':this.dom.extraButton.addEventListener('click',this.listeners.toggleMenu);this.dom.menu.addEventListener('click',this.listeners.hideMenu);this.dom.button.addEventListener('click',this.listeners.hideMenu);this.dom.extraButton.addEventListener('keydown',this.listeners.dropdownKeydown);break;}document.addEventListener('click',this.listeners.clickOutside);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){switch(this.type){case'click':this.dom.button.removeEventListener('click',this.listeners.toggleMenu);this.dom.menu.removeEventListener('click',this.listeners.hideMenu);this.dom.dropdown.removeEventListener('keydown',this.listeners.dropdownKeydown);break;case'divided':this.dom.extraButton.removeEventListener('click',this.listeners.toggleMenu);this.dom.menu.removeEventListener('click',this.listeners.hideMenu);this.dom.button.removeEventListener('click',this.listeners.hideMenu);this.dom.extraButton.removeEventListener('keydown',this.listeners.dropdownKeydown);break;}document.removeEventListener('click',this.listeners.clickOutside);}/**
   * Disable dropdown.
   * @private
   */},{key:"_setDisabled",value:function _setDisabled(){if(this.dom.button){this.dom.button.setAttribute('disabled','disabled');}if(this.dom.extraButton){this.dom.extraButton.setAttribute('disabled','disabled');}}/**
   * Hide menu when click outside dropdown.
   * @private
   * @param {Event} evt - Click event.
   * @param {HTMLElement} evt.target - Clicked element.
   */},{key:"_hideIfClickedOutside",value:function _hideIfClickedOutside(_ref3){var target=_ref3.target;if(!this.dom.dropdown.contains(target)){this.menu.hide();}}/**
   * Keyboard accessibility.
   * @private
   * @param {Event} evt - press key.
   */},{key:"_arrowKeyActions",value:function _arrowKeyActions(evt){var options=this.dom.items.length-1;switch(evt.key){case'Escape':this.menu.hide();this._removeOptionsHighlight();break;case'ArrowDown':if(this.highlightIndex>=options){this.highlightIndex=0;}else{this.highlightIndex+=1;}break;case'ArrowUp':if(this.highlightIndex<=0){this.highlightIndex=options;}else{this.highlightIndex-=1;}break;case'Enter':if(this.dom.dropdown.classList.contains('open')&&this.dom.menu.querySelector('.highlight')){this.dom.menu.querySelector('.highlight').click();}else if(!this.dom.button.classList.contains('disabled')){this.menu.toggle();}this._removeOptionsHighlight();break;case' ':if(this.dom.dropdown.classList.contains('open')&&this.dom.menu.querySelector('.highlight')){this.dom.menu.querySelector('.highlight').click();}else if(!this.dom.button.classList.contains('disabled')){this.menu.toggle();}this._removeOptionsHighlight();break;}this._highlightOptions();}/**
   * Highlight option when using keyboard.
   * @private
   */},{key:"_highlightOptions",value:function _highlightOptions(){var options=this.dom.items;for(var i=0;i<options.length;i+=1){options[i].classList.remove('highlight');if(i===this.highlightIndex){options[i].classList.add('highlight');}}}/**
   * Remove option's highlight.
   * @private
   */},{key:"_removeOptionsHighlight",value:function _removeOptionsHighlight(){this.highlightIndex=-1;var options=this.dom.items.length;for(var i=0;i<options;i+=1){this.dom.items[i].classList.remove('highlight');}// reset option list's scroll position
this.dom.menu.scrollTop=0;}}]);return Dropdown;}();/**
 * @file Module to create Gauge chart.
 */ /**
 * Class representing a gauge chart.
 */var Gauge=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the chart.
   */function Gauge(element){_classCallCheck(this,Gauge);this.dom={gauge:element,settings:element.dataset.settings,valueArc:undefined,valueLabel:undefined};this.data=null;}/**
   * Initialize the chart.
   * @public
   */_createClass(Gauge,[{key:"init",value:function init(){this.data=this._parseData();this._setDataDefaults();this._drawChart();this._injectTexture();// this.setRandomData();
}/**
   * Create chart canvas.
   * @private
   * @param {HTMLElement} element - Element to create svg.
   * @param {number} scale - Scale (size of chart).
   * @return {Object} - d3 Selection
   */},{key:"_setCanvas",value:function _setCanvas(element,scale){return d3.select(element).append('svg').attr('width',250*scale).attr('height',250*scale).append('g').attr('transform','translate('+125*scale+', '+125*scale+')');}/**
   * Add texture to arch.
   * @private
   */},{key:"_injectTexture",value:function _injectTexture(){var dTexture=window.document.querySelector('#diagonalTexture');if(dTexture===undefined){d3.select('body').append('svg').append('defs').append('pattern').attr('id','diagonalTexture').attr('width',5).attr('height',5).attr('patternUnits','userSpaceOnUse').append('path').attr('fill','white').attr('stroke','#767676').attr('stroke-width','1').attr('d','M0 5L5 0ZM6 4L4 6ZM-1 1L1 -1Z');}}/**
   * Return numeric value for size of chart.
   * @private
   * @param {string} size - Chart size, 'small', 'medium' or 'large'.
   * @return {number} - Chart scale.
   */},{key:"_getScale",value:function _getScale(size){switch(size){case'small':return .5;case'medium':return .75;case'large':return 1;default:return .75;}}/**
   * Return function to create d3 arc.
   * @private
   * @param {Object} options
   * @param {number} options.scale
   * @param {number} options.radius.inner
   * @param {number} options.radius.outer
   * @param {number} options.angle.start
   * @param {number} options.angle.end
   * @return {Function}
   */},{key:"_createArc",value:function _createArc(options){var s=options.scale||.75;return d3.arc().innerRadius(options.radius.inner*s).outerRadius(options.radius.outer*s).startAngle(options.angle.start*(Math.PI/180)).endAngle(options.angle.end*(Math.PI/180));}/**
   * Draw arc.
   * @private
   * @param {Object} canvas - Element to append the arc (d3 Selection)
   * @param {Object} options - Arc options.
   * @param {number} options.arc.radius.inner
   * @param {number} options.arc.radius.outer
   * @param {number} options.arc.angle.start
   * @param {number} options.arc.angle.end
   * @param {number} options.arc.scale
   * @param {string} options.props.class - CSS class.
   * @return {Object} - Arc element (d3 Selection).
   */},{key:"_drawArc",value:function _drawArc(canvas,options){var createArc=this._createArc;return canvas.append('path').attr('class',options.props.class||'arc').attr('d',createArc(options.arc)).attr('fill',options.props.color).attr('opacity',options.props.opacity||1);}/**
   * Draw label.
   * @private
   * @param {Object} canvas - Element to append the label (d3 Selection).
   * @param {Object} options - Label options.
   * @param {string} options.message - Label text.
   * @param {string} options.class - CSS class.
   * @param {number} options.x - x position.
   * @param {number} options.y - y position.
   * @param {number} options.fontSize - Font size.
   * @param {number} options.scale
   * @return {Object} - Label element (d3 Selection).
   */},{key:"_drawLabel",value:function _drawLabel(canvas,options){return canvas.append('g').attr('transform','translate('+(options.x*options.scale||0)+','+(options.y*options.scale||0)+')').append('text').text(options.message).style('font-size',options.fontSize*options.scale+'px').attr('class',options.class||'text');}/**
   * Converts chart settings from string format to Object.
   * @private
   * @return {Object} - Converted settings.
   */},{key:"_parseData",value:function _parseData(){return JSON.parse(this.dom.settings);}/**
   * Sets default chart data.
   * @private
   */},{key:"_setDataDefaults",value:function _setDataDefaults(){this.data.value=this.data.value||0;this.data.min=this.data.min||0;this.data.max=this.data.max||100;this.data.units=this.data.units||'%';this.data.scale=this._getScale(this.data.size)||.75;}/**
   * Update chart value.
   * @public
   * @param {number | string} value - New value.
   */},{key:"setValue",value:function setValue(value){var _parentThis=this;var valueArc=this.dom.valueArc;var prevAngle=this._valueToAngle(this.data.value);var newAngle=this._valueToAngle(value);valueArc.transition().duration(750).attrTween('d',this._arcTween(newAngle,prevAngle,_parentThis));this.data.value=this._angleToValue(newAngle);}/**
   * @deprecated
   */},{key:"setRandomData",value:function setRandomData(){var _parentThis=this;d3.interval(function(){var randomAngle=Math.random()*270-135;var randomValue=_parentThis._angleToValue(randomAngle,_parentThis);_parentThis.setValue(randomValue);},1500);}/**
   * Convert value of units to angle.
   * @private
   * @param {number} value
   * @return {number}
   */},{key:"_valueToAngle",value:function _valueToAngle(value){var scale=d3.scaleLinear().domain([this.data.min,this.data.max]).range([-135,135]);return scale(value);}/**
   * Convert angle to value of units.
   * @private
   * @param {number} angle
   * @param {Gauge} _parentThis
   * @return {number}
   */},{key:"_angleToValue",value:function _angleToValue(angle,_parentThis){var _this=_parentThis!==undefined?_parentThis:this;var scale=d3.scaleLinear().domain([-135,135]).range([_this.data.min,_this.data.max]);return scale(angle);}/**
   * Animate changing of value text.
   * @private
   * @param {number} angle
   * @param {Gauge} _parentThis
   */},{key:"_setLabelAngle",value:function _setLabelAngle(angle,_parentThis){var valueLabel=_parentThis.dom.valueLabel;var decimals=_parentThis._parseData().decimals;valueLabel.text(function(){return _parentThis._angleToValue(angle,_parentThis).toFixed(decimals);});}/**
   * Custom tween function used by the attrTween method to draw the intermediary steps.
   * @private
   * @param {number} newAngle
   * @param {number} oldAngle
   * @param {Gauge} _parentThis
   * @return {Function}
   */},{key:"_arcTween",value:function _arcTween(newAngle,oldAngle,_parentThis){var _this22=this;var setArcColor=_parentThis._setArcColor,setLabelAngle=_parentThis._setLabelAngle,angleToValue=_parentThis._angleToValue,data=_parentThis.data;return function(){var interpolate=d3.interpolate(oldAngle,newAngle);return function(t){oldAngle=interpolate(t);var arc=_this22._createArc({angle:{start:-135,end:oldAngle},radius:{inner:95,outer:102},scale:data.scale});setLabelAngle(oldAngle,_parentThis);var decimals=data.decimals||0;var val=angleToValue(oldAngle,_parentThis);setArcColor(parseFloat(val).toFixed(decimals),data.limits,_parentThis);return arc(t);};};}/**
   * Set arc color depending on limits.
   * @private
   * @param {number | string} value
   * @param {Object} limits
   * @param {number} limits.from
   * @param {number} limits.to
   * @param {string} limits.color
   * @param {string} limits.label
   * @param {Gauge} _parentThis
   */},{key:"_setArcColor",value:function _setArcColor(value,limits,_parentThis){var d=_parentThis!==undefined?_parentThis.dom:this.dom;d.valueArc.attr('class','valueArc');if(limits){Array.from(limits).forEach(function(limit){if(value>=limit.from&&value<=limit.to){if(limit.color!=='transparent'&&limit.color!=='unknown'&&limit.color!=='gray'){d.valueArc.attr('class',limit.color);}}});}}/**
   * Draw the chart based on data.
   * @private
   */},{key:"_drawChart",value:function _drawChart(){var _this23=this;// variables
var gScale=this.data.scale;//  set canvas
var svg=this._setCanvas(this.dom.gauge,gScale);// foreground arc
this._drawArc(svg,{arc:{radius:{inner:95,outer:102},angle:{start:-135,end:135},scale:gScale},props:{class:'foregroundArc'}});// value arc
this.dom.valueArc=this._drawArc(svg,{arc:{radius:{inner:95,outer:102},angle:{start:-135,end:this._valueToAngle(this.data.value)},scale:gScale},props:{class:'valueArc'}});// set value arc color
this._setArcColor(this.data.value,this.data.limits);// negative arcs
var frequency=275/37;var length=5;for(var i=-140;i<135;i=i+frequency){this._drawArc(svg,{arc:{radius:{inner:94,outer:103},angle:{start:i,end:i+length},scale:gScale},props:{class:'negativeArc'}});}// draw limits
if(this.data.limits){Array.from(this.data.limits).forEach(function(limit){var limitArc=_this23._drawArc(svg,{arc:{radius:{inner:82,outer:87},angle:{start:_this23._valueToAngle(limit.from)+1,end:_this23._valueToAngle(limit.to)-1},scale:gScale},props:{class:limit.color,opacity:0.3}});// limit hover arc
var limitHoverArc=_this23._drawArc(svg,{arc:{radius:{inner:72,outer:117},angle:{start:_this23._valueToAngle(limit.from)+1,end:_this23._valueToAngle(limit.to)-1},scale:gScale},props:{class:'transparent'}});// tooltip
var tooltip=d3.select(_this23.dom.gauge).append('div').attr('class','tooltip hidden').style('left','0px').style('top','0px').html(limit.label);// animation
limitHoverArc.on('mouseenter',function(){tooltip.node().classList.remove('hidden');limitArc.style('opacity',1);});limitHoverArc.on('mousemove',function(){tooltip.style('left',d3.event.clientX+'px').style('top',d3.event.clientY-40+'px');});limitHoverArc.on('mouseleave',function(){tooltip.node().classList.add('hidden');limitArc.style('opacity',0.3);});});}// labels
this._drawLabel(svg,{message:this.data.units,class:'units',x:0,y:40,fontSize:28,scale:gScale});this._drawLabel(svg,{message:this.data.min,class:'label left',x:-65,y:110,fontSize:24,scale:gScale});this._drawLabel(svg,{message:this.data.max,class:'label right',x:65,y:110,fontSize:24,scale:gScale});this.dom.valueLabel=this._drawLabel(svg,{message:this.data.value,class:'total',fontSize:60,scale:gScale});}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){}}]);return Gauge;}();var Stage=/*#__PURE__*/function(){/**
   * Common stage component for charts
   * @param {Object} props - The properties to initialize the stage
   * @param {HTMLElement} props.element - The DOM element to append the stage
   * @param {number} props.height - The height of the stage
   * @param {Object} props.margin - The top, right, bottom and left margins
   * @param {number} props.margin.top - The top margin
   * @param {number} props.margin.right - The right margin
   * @param {number} props.margin.bottom - The bottom margin
   * @param {number} props.margin.left - The left margin
   */function Stage(props){_classCallCheck(this,Stage);this.element=props.element;this.margin=props.margin;this.height=props.height;this.width=props.width||this.getCanvasWidth();this.listeners=[];}/**
   * Creates the SVG and Canvas elements
   */_createClass(Stage,[{key:"init",value:function init(){if(!this.element.querySelector('svg')){d3.select(this.element).append('svg').attr('width',this.width+this.margin.left+this.margin.right).attr('height',this.height+this.margin.top+this.margin.bottom).classed('chart',true).append('g').attr('transform',"translate(".concat(this.margin.left,", ").concat(this.margin.top,")")).classed('canvas',true);}}/**
   * Get the canvas DOM element
   * @return {HTMLElement} The canvas element
   */},{key:"getCanvas",value:function getCanvas(){return d3.select(this.element).selectAll('.canvas');}/**
   * Get the width of the stage without margins
   * @return {number} The width value
   */},{key:"getCanvasWidth",value:function getCanvasWidth(){return this.element.offsetWidth-this.margin.right-this.margin.left;}/**
   * Get the width of the canvas
   * @return {number} The width value
   */},{key:"getWidth",value:function getWidth(){return this.element.offsetWidth;}/**
   * Set the window resize event to redraw the chart
   * @param {requestCallback} callback - The callback that gets triggered on window resize
   */},{key:"onResize",value:function onResize(callback){var _this24=this;var delay=function delay(){setTimeout(function(){d3.select(_this24.element).select('svg').attr('width',_this24.getWidth());callback();},300);};// TODO: Add event of menu opening/closing, not updating chart atm
window.addEventListener('resize',delay);document.addEventListener('toggleNavigation',delay);this.listeners.push(delay);}},{key:"destroy",value:function destroy(){this.listeners.forEach(function(listener){window.removeEventListener('resize',listener);document.removeEventListener('toggleNavigation',listener);});this.listeners=[];}}]);return Stage;}();/**
 * @file Module to create Pill component.
 */ /**
 * Class representing a pill.
 */var Pill=/*#__PURE__*/function(){/**
   * Setup pill properties.
   * @param {HTMLElement} element - The DOM element of the pill.
   * @param {Function} [action] - The action to trigger on click.
   */function Pill(element,action){var _this25=this;_classCallCheck(this,Pill);this.dom={pill:element};this.listeners={click:function click(){return _this25._clickAction();},onKeyDown:function onKeyDown(evt){if(evt.key===' '){evt.preventDefault();_this25._clickAction();}}};this.action=action;this.data={};}/**
   * Initialize the pill.
   * @public
   */_createClass(Pill,[{key:"init",value:function init(){this.update();this._addEventListeners();}/**
   * Destroy the pill and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();if(this.dom.pill&&this.dom.pill.parentNode){this.dom.pill.parentNode.removeChild(this.dom.pill);}}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.pill.addEventListener('click',this.listeners.click);this.dom.pill.addEventListener('keydown',this.listeners.onKeyDown);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.pill.removeEventListener('click',this.listeners.click);this.dom.pill.removeEventListener('keydown',this.listeners.onKeyDown);}/**
   * What happens on the click event.
   * @private
   */},{key:"_clickAction",value:function _clickAction(){this.toggle();this.remove();if(this.action)this.action();}/**
   * Toggle the pill.
   * @public
   */},{key:"toggle",value:function toggle(){if(!this.isSelected()){this.select();}else{this.unselect();}}/**
   * Select the pill.
   * @public
   */},{key:"select",value:function select(){this.dom.pill.classList.remove('unselected');}/**
   * Unselect the pill.
   * @public
   */},{key:"unselect",value:function unselect(){this.dom.pill.classList.add('unselected');}/**
   * Remove the pill.
   * @public
   */},{key:"remove",value:function remove(){if(this.dom.pill.classList.contains('removable')){this.destroy();}}/**
   * Returns true or false if the pill is selected/unselected
   * @public
   * @returns {boolean} - result of check.
   */},{key:"isSelected",value:function isSelected(){return!this.dom.pill.classList.contains('unselected');}/**
   * Set the appropriate metadata to the pill.
   * @public
   * @param {Object} dataInput - new data.
   */},{key:"setData",value:function setData(dataInput){this.data=dataInput;}/**
   * Update pill tabindex
   * @public
   */},{key:"update",value:function update(){var pill=this.dom.pill;if(pill.classList.contains('removable')||pill.classList.contains('toggle')){if(pill.classList.contains('disabled')){pill.tabIndex=-1;}else{pill.tabIndex=0;}}}}]);return Pill;}();var ColorScale=/*#__PURE__*/function(){/**
   * Setup color scale properties
   * @param {Object} props - The properties to initialize the color scale
   * @param {Array} props.colors - The array of colors
   */function ColorScale(props){_classCallCheck(this,ColorScale);props=_objectSpread({},props);this.length=props.length||15;this.colors=props.colors||this._generateColorMatrix(this.length);}/**
   * Initialize the color scale
   */_createClass(ColorScale,[{key:"init",value:function init(){this.colorScale=d3.scaleOrdinal().range(this.colors);}/**
   * Get the color scale
   * @returns {Function}
   */},{key:"get",value:function get(){return this.colorScale;}/**
   * Set the color scale
   * @param {Function} scale - d3 function for color scale
   */},{key:"set",value:function set(scale){this.colorScale=scale;}/**
   * Get the colors array
   * @returns {Array}
   */},{key:"getColors",value:function getColors(){return this.colors;}/**
   * Set the colors
   * @param {Array} colors - Array of colors
   */},{key:"setColors",value:function setColors(colors){this.colors=colors;}/**
   * Generate color matrix
   * @param {number} n – Number of colors to return
   */},{key:"_generateColorMatrix",value:function _generateColorMatrix(n){var array=[];for(var i=0;i<n;i+=1){array.push("color-data-".concat(i%20+1));}return array;}/**
   * Generates a palette class from the specified string.
   * @param {string} palette – Identifier to convert to a palette class
   */}],[{key:"getRangePaletteClass",value:function getRangePaletteClass(palette){if(!palette)return'sequential-4';var paletteClass=palette.toLowerCase().split(' ').join('-');var paletteMap={'sequential-1':true,'sequential-2':true,'sequential-3':true,'sequential-4':true,'sequential-5':true,'sequential-6':true,'sequential-7':true,'sequential-8':true,'sequential-9':true,'sequential-10':true,'diverging-1':true,'diverging-2':true,'diverging-3':true,'diverging-4':true,'diverging-5':true,'diverging-6':true};if(paletteMap[paletteClass]!==true){paletteClass='sequential-1';}return paletteClass;}}]);return ColorScale;}();var Legend=/*#__PURE__*/function(){/**
   * Common legend component for charts
   * @param {Object} props - The properties to initialize the legend
   * @param {HTMLElement} props.element - The DOM element to append the legend
   * @param {Object} props.data - The data necessary to populate the legend
   * @param {Function} props.draw - The chart draw function to update
   * @param {Object} [props.margin] - The top, right, bottom and left margins of the chart
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   */function Legend(props){_classCallCheck(this,Legend);this.element=props.element;this.data=props.data;this.draw=props.draw;this.highlight=props.highlight||function(){};this.margin=props.margin;this.columns=this.data.length>0?Object.keys(this.data[0]):this.data;this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.pills=[];}/**
   * Initialize the legend
   */_createClass(Legend,[{key:"init",value:function init(){var _this26=this;var initPills=function initPills(selection){selection.nodes().forEach(function(node){var p=new Pill(node,function(){var dataCopy=JSON.parse(JSON.stringify(_this26.data));var allPillsUnselected=true;_this26.pills.forEach(function(pill){if(!pill.instance.isSelected()){dataCopy.series=dataCopy.series.filter(function(serie){return serie.name!==pill.key;});}else{allPillsUnselected=false;}});if(allPillsUnselected)dataCopy={common:[],series:[]};_this26.draw(dataCopy);_this26.highlight();});p.init();_this26.pills.push({instance:p,key:d3.select(node).data()[0]});});};this.legend=d3.select(this.element).select('.chart-legend').empty()?d3.select(this.element).append('div').classed('chart-legend',true)// .style('margin-left', this.margin.left + 'px')
.lower():d3.select(this.element).select('.chart-legend');var pill=this.legend.selectAll('.pill').data(this.data.series.map(function(d){return d.name;})).enter().append('span').classed('pill',true).classed('toggle',true).call(initPills).on('mouseenter',function(d){var activePill=_this26.pills.filter(function(p){return p.key===d;})[0];if(activePill.instance.isSelected()){_this26.highlight(d);}else{_this26.highlight();}}).on('mouseleave',function(){_this26.highlight();});pill.append('i').attr('class',function(d){return'icon icon-alarm-level6 '+_this26.colorScale.get()(d);});pill.append('span').text(function(d){return d;});}/**
   * Filter the data according to the pills.
   */},{key:"filter",value:function filter(data){var _this27=this;var ret={};var dataCopy=JSON.parse(JSON.stringify(data));ret.series=dataCopy.series.filter(function(serie){var active=false;_this27.pills.forEach(function(pill){if(pill.key===serie.name&&pill.instance.isSelected()){active=true;}});return active;});if(ret.series.length===0){ret.common=[];}else{ret.common=dataCopy.common;}return ret;}}]);return Legend;}();/**
 * @file Component to create Donut chart.
 */var Donut=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {boolean} [props.showAbsoluteValue] - Show absolute values instead of percentages
   * @param {boolean} [props.showValue] - Show absolute value when no interaction
   * @param {boolean} [props.isStatic] - Show initial value and no interactions
   * @param {string} [props.unit] - The label unit
   */function Donut(props){_classCallCheck(this,Donut);// private properties
this.firstDrawFlag=true;this.height=150;this.width=150;this.data=props.data;this.element=props.element;this.margin=_objectSpread({top:this.height,bottom:0,right:0,left:this.width},props.margin);this.showAbsoluteValue=props.showAbsoluteValue||false;this.showValue=props.showValue||false;this.isStatic=props.isStatic||false;this.unit=props.unit;this.format=props.format;}/**
   * Initialize the chart
   */_createClass(Donut,[{key:"init",value:function init(){var _this28=this;this.stage=new Stage({element:this.element,margin:this.margin,height:this.height,width:this.width});this.stage.init();this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:this.margin});this.legend.init();this.getOuterRadius=function(arc){return _this28.radius-_this28._determineArcSize(arc);};this.getInnerRadius=function(arc){return _this28.radius+_this28._determineArcSize(arc);};this.draw();}/**
   * Draw the chart based on data
   * @param {Object} newData - The data necessary to draw the chart
   * @param {Object[]} newData.series
   * @param {string} newData.series.name
   * @param {number[]} newData.series.values
   */},{key:"draw",value:function draw(newData){var _this29=this;this.width=this.stage.getCanvasWidth();this.canvas.classed('donut',true);// variables
var size=180;var halfSize=size/2;// some margin needed:
this.radius=halfSize;this.arcs=d3.arc().outerRadius(this.getOuterRadius).innerRadius(this.getInnerRadius);this.thinArcs=d3.arc().outerRadius(this.radius+10).innerRadius(this.radius-10);this.thickArcs=d3.arc().outerRadius(this.radius+4).innerRadius(this.radius-4);this.hoverArcs=d3.arc().outerRadius(function(){return _this29.radius+10;}).innerRadius(function(){return 0;});this.pie=d3.pie().sort(null).value(function(d){return d.values[0];});if(newData!==undefined){this.data=newData;this.data=this.legend.filter(this.data);}if(this.firstDrawFlag){this.labelGroup=this.canvas.append('g').attr('class','labels');this.activeGroup=this.canvas.append('g').attr('class','active-arc');this.hoverGroup=this.canvas.append('g').attr('class','hover-arc');this.activeGroup.datum(this.data.series).selectAll('path').data(this.pie).enter().append('path').attr('class',function(d){var colorClass=_this29.colorScale.get()(d.data.name);d.data.colorID=colorClass.substring(colorClass.length,colorClass.length-1);return colorClass;}).attr('name',function(d){return d.data.name;}).attr('d',this.arcs).each(function(d){this._current=d;});this.hoverGroup.datum(this.data.series).selectAll('path').data(this.pie).enter().append('path').attr('class','transparent').attr('name',function(d){return d.data.name;}).attr('d',this.hoverArcs).each(function(d){this._current=d;});this._drawLabels({unit:this.unit,total:this._getTotal()},false);this.firstDrawFlag=false;}this.activeGroup.datum(this.data.series).selectAll('path').data(this.pie).enter().append('path').attr('class',function(d){return"color-data-".concat(d.data.colorID);}).attr('name',function(d){return d.data.name;}).attr('d',this.arcs).each(function(d){this._current=d;});// remove data not being used
this.activeGroup.datum(this.data.series).selectAll('path').data(this.pie).exit().remove();this.hoverGroup.datum(this.data.series).selectAll('path').data(this.pie).exit().remove();if(this.isStatic){this._highlight(this.data.series[0].name);}else{this.hoverGroup.selectAll('*').remove();this.hoverGroup.datum(this.data.series).selectAll('path').data(this.pie).enter().append('path').attr('class','transparent').attr('name',function(d){return d.data.name;}).on('mouseenter',function(d){return _this29._highlight(d.data.name);}).on('mouseleave',function(){return _this29._highlight(undefined);}).attr('d',this.hoverArcs).each(function(d){this._current=d;});}}/**
   * Draws the chart labels in the canvas
   * @param {*} props - General Donut class properties
   * @param {boolean} isShown - If true shows the text value
   */},{key:"_drawLabels",value:function _drawLabels(props,isShown){var labelGroup=this.canvas.select('.labels');var isEmpty=this.canvas.select('.labels').node().innerHTML==='';if(isEmpty){// value
labelGroup.append('text').classed('value',true).attr('transform',"translate(".concat(0,", ",0,")")).text(isShown?props.value:'');// unit
labelGroup.append('text').classed('unit',true).attr('transform',"translate(".concat(0,", ",28,")")).text(isShown?props.unit:'');// label
labelGroup.append('text').classed('label',true).attr('transform',"translate(".concat(0,", ",this.height-28,")")).text(isShown?props.label:'');}else{// value
labelGroup.select('.value').text(isShown?props.value:'');// unit
labelGroup.select('.unit').text(isShown?props.unit:'');// label
labelGroup.select('.label').text(isShown?props.label:'');}if(this.showValue){// value
labelGroup.select('.value').text(isShown?props.value:props.total);// unit
labelGroup.select('.unit').text(props.unit);// label
labelGroup.select('.label').text(isShown?props.label:'');}}/**
   * Returns the percentage a value represents within it's whole
   * @param {number} value - Number to get it's percentage equivalent
   * @return {string}
   */},{key:"_getPercentage",value:function _getPercentage(value){var total=0;this.data.series.forEach(function(item){total+=item.values[0];});return(value/total*100).toFixed(1);}/**
   * Returns the sum (total) value of all data series
   * @return {number}
   */},{key:"_getTotal",value:function _getTotal(){var total=0;this.data.series.forEach(function(item){total+=item.values[0];});return this._format(total);}/**
   * Returns the correct arc size
   * @param {Object} arc - Arc object containing data
   * @return {number}
   */},{key:"_determineArcSize",value:function _determineArcSize(arc){// active arcs and placeholders (spaces) should be expanded:
if(arc.data.placeholder||arc.data.active){return 10;}// if some arc is active, the others should be collapsed:
return this.data.series.some(function(v){return v.active;})?3:10;}/**
   * Highlight one common element in all series
   * @param {string} key - The key matching the common element
   */},{key:"_highlight",value:function _highlight(key){var _this30=this;if(this.isStatic){key=this.data.series[0].name;}if(key){this.activeGroup.selectAll('path').attr('class',function(d){return"color-data-".concat(d.data.colorID);}).transition().duration(300).attr('opacity',function(d){return d.data.name===key?1:.2;}).attr('d',function(d){if(d.data.name===key){var percentage=_this30._getPercentage(d.data.values[0]);_this30._drawLabels({value:_this30.showAbsoluteValue?_this30._format(d.data.values[0]):percentage,unit:_this30.showAbsoluteValue?_this30.unit:'%',label:d.data.name},true);return _this30.thinArcs(d);}else{return _this30.thickArcs(d);}});}else{this.activeGroup.selectAll('path').attr('class',function(d){return"color-data-".concat(d.data.colorID);}).transition().duration(200).attr('opacity',1).attr('d',function(d){_this30._drawLabels({unit:_this30.unit,total:_this30._getTotal()},false);return _this30.thinArcs(d);});}}/**
   * Format value
   * @private
   */},{key:"_format",value:function _format(d){return this.format?d3.format(this.format)(d):d;}/**
   * Destroy method
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}}]);return Donut;}();var App=/*#__PURE__*/function(){function App(element){_classCallCheck(this,App);this.dom={app:element,appbar:element.querySelector('.appbar'),appnav:element.querySelector('.appnav')};this.appbar=new Appbar(this.dom.appbar);this.appnav=new Appnav(this.dom.appnav);this.listeners={toggle:this.toggle.bind(this)};}_createClass(App,[{key:"init",value:function init(){this.appbar.init();this.appnav.init();this.addEventListeners();}},{key:"destroy",value:function destroy(){this.removeEventListeners();this.appbar.destroy();this.appnav.destroy();}},{key:"addEventListeners",value:function addEventListeners(){window.addEventListener('SyspanelOpenEvent',this.listeners.toggle);window.addEventListener('SyspanelCloseEvent',this.listeners.toggle);}},{key:"removeEventListeners",value:function removeEventListeners(){window.removeEventListener('SyspanelOpenEvent',this.listeners.toggle);window.removeEventListener('SyspanelCloseEvent',this.listeners.toggle);}},{key:"toggle",value:function toggle(){if(this.dom.app.classList.contains('slide-left')){this.slideRight();}else{this.slideLeft();}}},{key:"slideLeft",value:function slideLeft(){this.dom.app.classList.add('slide-left');this.dom.app.classList.remove('slide-right');}},{key:"slideRight",value:function slideRight(){this.dom.app.classList.add('slide-right');this.dom.app.classList.remove('slide-left');}}]);return App;}();var Syspanel=/*#__PURE__*/function(){function Syspanel(element){_classCallCheck(this,Syspanel);this.dom={syspanel:element,syspanelCloseIcons:element.querySelectorAll('.syspanel-close'),items:element.children};this.listeners={toggleSyspanel:this.toggle.bind(this),pageClick:this.pageClickHandler.bind(this),closeIconClickHandler:this.close.bind(this)};this.events={SyspanelOpenEvent:new CustomEvent('SyspanelOpenEvent'),SyspanelCloseEvent:new CustomEvent('SyspanelCloseEvent'),SyspanelTabEvent:new CustomEvent('SyspanelTabEvent')};}_createClass(Syspanel,[{key:"init",value:function init(){this.addEventListeners();}},{key:"destroy",value:function destroy(){this.removeEventListerners();}},{key:"addEventListeners",value:function addEventListeners(){var _this31=this;window.addEventListener('toggleSyspanel',this.listeners.toggleSyspanel);Array.from(this.dom.syspanelCloseIcons).forEach(function(icon){icon.addEventListener('click',_this31.listeners.closeIconClickHandler);});}},{key:"removeEventListerners",value:function removeEventListerners(){var _this32=this;window.removeEventListener('toggleSyspanel',this.listeners.toggleSyspanel);Array.from(this.dom.syspanelCloseIcons).forEach(function(icon){icon.removeEventListener('click',_this32.listeners.closeIconClickHandler);});// Remove the page click event listener in case the syspanel is open.
window.removeEventListener('click',this.listeners.pageClick,true);}},{key:"toggle",value:function toggle(e){var panel=e.detail;if(this.isHidden(this.dom.syspanel)){this.show(panel);this.hideAllExcept(panel);this.open();}else{if(this.isHidden(panel)){this.show(panel);this.hideAllExcept(panel);this.tabEvent();}else{this.close();}}}},{key:"open",value:function open(){this.show(this.dom.syspanel);this.openEvent();}},{key:"close",value:function close(){this.hide(this.dom.syspanel);this.closeEvent();}},{key:"isHidden",value:function isHidden(element){return element.classList.contains('hidden');}},{key:"hide",value:function hide(element){element.classList.add('hidden');}},{key:"show",value:function show(element){element.classList.remove('hidden');}},{key:"hideAllExcept",value:function hideAllExcept(element){var _this33=this;Array.from(this.dom.items).forEach(function(item){if(item!==element){_this33.hide(item);}});}},{key:"openEvent",value:function openEvent(){window.addEventListener('click',this.listeners.pageClick,true);window.dispatchEvent(this.events.SyspanelOpenEvent);}},{key:"closeEvent",value:function closeEvent(){window.removeEventListener('click',this.listeners.pageClick,true);window.dispatchEvent(this.events.SyspanelCloseEvent);}},{key:"tabEvent",value:function tabEvent(){window.dispatchEvent(this.events.SyspanelTabEvent);}},{key:"pageClickHandler",value:function pageClickHandler(e){if(!document.querySelector('.sysbar').contains(e.target)&&!this.dom.syspanel.contains(e.target)){this.close();}}}]);return Syspanel;}();var Sysbar=/*#__PURE__*/function(){function Sysbar(element){_classCallCheck(this,Sysbar);this.dom={sysbar:element,items:element.querySelectorAll('.item')};this.listeners={click:this.toggleSyspanel.bind(this)};this.events={toggleSyspanel:new CustomEvent('toggleSyspanel',{detail:document.querySelector('.settings')})};}_createClass(Sysbar,[{key:"init",value:function init(){this.addEventListeners();}},{key:"destroy",value:function destroy(){this.removeEventListeners();}},{key:"addEventListeners",value:function addEventListeners(){var _this34=this;Array.from(this.dom.items).forEach(function(item){if(item.classList.contains('settings-trigger')){item.addEventListener('click',_this34.listeners.click);}});}},{key:"removeEventListeners",value:function removeEventListeners(){var _this35=this;Array.from(this.dom.items).forEach(function(item){if(item.classList.contains('settings-trigger')){item.removeEventListener('click',_this35.listeners.click);}});}},{key:"toggleSyspanel",value:function toggleSyspanel(){window.dispatchEvent(this.events.toggleSyspanel);}}]);return Sysbar;}();/**
 * @file Module to create application layout (system layer and application layer).
 * @requires App
 * @requires Syspanel
 * @requires Sysbar
 */var viewport={sm:480,md:768,lg:1024};/**
 * Class representing a layout.
 */var Layout=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Layout(element){var _this36=this;_classCallCheck(this,Layout);this.dom={body:element,app:element.querySelector('.app'),appnav:element.querySelector('.appnav'),syspanel:element.querySelector('.syspanel'),sysbar:element.querySelector('.sysbar')};this.app=new App(this.dom.app);this.syspanel=new Syspanel(this.dom.syspanel);this.sysbar=new Sysbar(this.dom.sysbar);this.listeners={resize:function resize(){return _this36._setContentBehavior();},navClick:function navClick(evt){return _this36._navClick(evt);}};this.events={showNavigation:new CustomEvent('showNavigation'),hideNavigation:new CustomEvent('hideNavigation'),toggleNavigation:new CustomEvent('toggleNavigation')};}/**
   * Create component.
   * @public
   */_createClass(Layout,[{key:"init",value:function init(){this.app.init();this.syspanel.init();this.sysbar.init();this._addEventListeners();this._setContentBehavior();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();this.app.destroy();this.syspanel.destroy();this.sysbar.destroy();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){window.addEventListener('resize',this.listeners.resize);this.dom.appnav.addEventListener('click',this.listeners.navClick);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){window.removeEventListener('resize',this.listeners.resize);this.dom.appnav.removeEventListener('click',this.listeners.navClick);}/**
   * Depending on window width show or hide navigation.
   * @private
   */},{key:"_setContentBehavior",value:function _setContentBehavior(){var w=window.outerWidth;if(w<=viewport.sm){document.dispatchEvent(this.events.hideNavigation);}else if(w<=viewport.md){document.dispatchEvent(this.events.hideNavigation);}else if(w<=viewport.lg){if(!window.localStorage.getItem('navClosed')){document.dispatchEvent(this.events.showNavigation);}}else{if(!window.localStorage.getItem('navClosed')){document.dispatchEvent(this.events.showNavigation);}}}},{key:"_navClick",value:function _navClick(evt){if(window.outerWidth<=viewport.sm){if(evt.target.tagName==='A'){document.dispatchEvent(this.events.hideNavigation);}}}}]);return Layout;}();// eslint-disable-next-line max-len
mapboxgl.accessToken='pk.eyJ1IjoiZGFuaWVsLWVyaWNzc29uIiwiYSI6ImNqZnh3cng0NTEzZTcyd2tkYWJhOGN3czIifQ.Nyg8nQf7s8nqW81xcL2hwg';var geoJSONLines={type:'FeatureCollection',features:[{type:'Feature',geometry:{type:'LineString',coordinates:[[17.97024,59.33568],[17.97719,59.32736]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[17.97024,59.33568],[17.98088,59.33244]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[17.97024,59.33568],[17.97410,59.33940]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[18.05300,59.33165],[18.08208,59.33631]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[18.03590,59.33412],[18.05300,59.33165]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[18.03590,59.33412],[18.01344,59.33604]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[18.03590,59.33412],[18.03021,59.33745]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[18.03590,59.33412],[18.02760,59.33000]]}},{type:'Feature',geometry:{type:'LineString',coordinates:[[18.06384,59.32605],[18.05300,59.33165]]}}]};var geoJSON={type:'FeatureCollection',features:[{type:'Feature',geometry:{type:'nodeBig',coordinates:[18.03590,59.33412]},properties:{title:'VDC 01',description:'Node 1'}},{type:'Feature',geometry:{type:'node-warning',coordinates:[18.08208,59.33631]},properties:{title:'VDC 05',description:'Node 2'}},{type:'Feature',geometry:{type:'node',coordinates:[18.06384,59.32605]},properties:{title:'VDC 03',description:'Node 2'}},{type:'Feature',geometry:{type:'server',coordinates:[18.05300,59.33165]},properties:{title:'VDC 04',description:'Node 2'}},{type:'Feature',geometry:{type:'node',coordinates:[18.03021,59.33745]},properties:{title:'VDC 02',description:'Node 2'}},{type:'Feature',geometry:{type:'node',coordinates:[18.01344,59.33604]},properties:{title:'VDC 06',description:'Node 2'}},{type:'Feature',geometry:{type:'node-warning',coordinates:[18.02760,59.33000]},properties:{title:'VDC 07',description:'Node 2'}},{type:'Feature',geometry:{type:'nodeBig',coordinates:[17.97024,59.33568]},properties:{title:'VDC 08',description:'Node 2'}},{type:'Feature',geometry:{type:'node',coordinates:[17.98088,59.33244]},properties:{title:'VDC 09',description:'Node 2'}},{type:'Feature',geometry:{type:'node',coordinates:[17.97719,59.32736]},properties:{title:'VDC 10',description:'Node 2'}},{type:'Feature',geometry:{type:'node',coordinates:[17.97410,59.33940]},properties:{title:'VDC 11',description:'Node 2'}}]};var Map=/*#__PURE__*/function(){function Map(){_classCallCheck(this,Map);this.mapCenter=[18.03590,59.33412];this.themes={dark:'mapbox/dark-v9',light:'mapbox/light-v8'};this.lineColors={dark:'#F2F2F2',light:'#242424'};this.loadedTheme=document.querySelector('body').classList;this.map=new mapboxgl.Map({container:'map',style:'mapbox://styles/'+this.themes[this.loadedTheme],center:[18.03590,59.33412],zoom:12});this.listeners={centerMap:this.centerMap.bind(this),switchTheme:this.switchTheme.bind(this)};this.lines={id:'routes',type:'line',source:{type:'geojson',data:geoJSONLines},layout:{'line-join':'round','line-cap':'round'},paint:{'line-color':'#333','line-width':2,'line-dasharray':[1,2],'line-opacity':1}};}_createClass(Map,[{key:"init",value:function init(){var _this37=this;// Add zoom and rotation controls to the map.
this.map.addControl(new mapboxgl.NavigationControl());/*
     * const mapBoundaries = {
     *   topLeft: [17.92821, 59.34554],
     *   bottomRight: [18.09953, 59.31703],
     * };
     */ // add markers to map
Array.from(geoJSON.features).forEach(function(marker){// create a HTML element for each feature
var el=document.createElement('div');if(marker.geometry.type!==undefined){el.className=marker.geometry.type.toString();}else{el.className='node';}// make a marker for each feature and add to the map
new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(_this37.map);new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).setPopup(new mapboxgl.Popup({offset:25}).setHTML("<span class=\"map-popup-header\">".concat(marker.properties.title,"</span>"))).addTo(_this37.map);});this.map.on('load',function(){_this37.map.addLayer(_this37.lines);});this.addEventListeners();}},{key:"addEventListeners",value:function addEventListeners(){document.addEventListener('maximizeTile',this.listeners.centerMap);document.addEventListener('minimizeTile',this.listeners.centerMap);document.addEventListener('toggleNavigation',this.listeners.centerMap);document.addEventListener('switchTheme',this.listeners.switchTheme);}},{key:"removeEventListeners",value:function removeEventListeners(){document.removeEventListener('maximizeTile',this.listeners.centerMap);document.removeEventListener('minimizeTile',this.listeners.centerMap);document.removeEventListener('toggleNavigation',this.listeners.centerMap);document.removeEventListener('switchTheme',this.listeners.switchTheme);}},{key:"centerMap",value:function centerMap(){var _this38=this;setTimeout(function(){_this38.map.resize();_this38.map.flyTo({center:_this38.mapCenter});},600);}},{key:"switchTheme",value:function switchTheme(event){var _this39=this;this.loadedTheme=event.detail.theme;this.map.setStyle('mapbox://styles/'+this.themes[this.loadedTheme]);this.map.on('style.load',function(){_this39.lines.paint['line-color']=_this39.lineColors[_this39.loadedTheme];if(!_this39.map.getLayer(_this39.lines.id)){_this39.map.addLayer(_this39.lines);}else{_this39.map.setPaintProperty(_this39.lines.id,'line-color',_this39.lineColors[_this39.loadedTheme]);}});}},{key:"destroy",value:function destroy(){this.removeEventListeners();}}]);return Map;}();/**
 * @file Module to create Multi Panel Tile component.
 */ /**
 * Class representing a multi panel tile.
 */var MultiPanelTile=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function MultiPanelTile(element){var _this40=this;_classCallCheck(this,MultiPanelTile);this.dom={multiPanelTile:element,leftPanel:element.querySelector('.left-panel'),midPanel:element.querySelector('.mid-panel'),rightPanel:element.querySelector('.right-panel'),leftPanelTriggers:element.querySelectorAll('.left-panel-trigger'),rightPanelTriggers:element.querySelectorAll('.right-panel-trigger')};this.listeners={toggleLeftPanel:function toggleLeftPanel(){_this40._togglePanel(_this40.dom.leftPanel);_this40._updatePanelBehavior();},toggleRightPanel:function toggleRightPanel(){_this40._togglePanel(_this40.dom.rightPanel);_this40._updatePanelBehavior();},updatePanelBehavior:function updatePanelBehavior(){return _this40._updatePanelBehavior();}};this.flags={panelLeft:false,panelRight:false};}/**
   * Create component.
   * @public
   */_createClass(MultiPanelTile,[{key:"init",value:function init(){this._addEventListeners();this._updatePanelBehavior();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this41=this;Array.from(this.dom.leftPanelTriggers).forEach(function(trigger){trigger.addEventListener('click',_this41.listeners.toggleLeftPanel);});Array.from(this.dom.rightPanelTriggers).forEach(function(trigger){trigger.addEventListener('click',_this41.listeners.toggleRightPanel);});window.addEventListener('resize',this.listeners.updatePanelBehavior);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this42=this;Array.from(this.dom.leftPanelTriggers).forEach(function(trigger){trigger.removeEventListener('click',_this42.listeners.toggleLeftPanel);});Array.from(this.dom.rightPanelTriggers).forEach(function(trigger){trigger.removeEventListener('click',_this42.listeners.toggleRightPanel);});window.removeEventListener('resize',this.listeners.updatePanelBehavior);}/**
   * Check if panel is closed.
   * @private
   * @param {HTMLElement} panel - Panel element that shpuld be checked.
   * @return {boolean} - Returns true if panel is closed.
   */},{key:"_isPanelClosed",value:function _isPanelClosed(panel){return panel.classList.contains('hidden');}/**
   * Toggle panel visibility.
   * @private
   * @param {HTMLElement} panel
   */},{key:"_togglePanel",value:function _togglePanel(panel){if(!this._isPanelClosed(panel)){this._hidePanel(panel);}else{this._showPanel(panel);}}/**
   * Show panel.
   * @private
   * @param {HTMLElement} panel
   */},{key:"_showPanel",value:function _showPanel(panel){if(panel.classList.contains('left-panel')){this.flags.panelLeft=true;}if(panel.classList.contains('right-panel')){this.flags.panelRight=true;}panel.classList.remove('hidden');}/**
   * Hide panel.
   * @private
   * @param {HTMLElement} panel
   */},{key:"_hidePanel",value:function _hidePanel(panel){panel.classList.add('hidden');}/**
   * Set panels' behavior depending on window size and other panels visibility.
   * @private
   */},{key:"_updatePanelBehavior",value:function _updatePanelBehavior(){var leftPanel=this.dom.leftPanel;var midPanel=this.dom.midPanel;var rightPanel=this.dom.rightPanel;var pageWidth=document.body.offsetWidth;// mobile, tablet
if(pageWidth<769){if(!this._isPanelClosed(leftPanel)&&!this._isPanelClosed(rightPanel)){this._hidePanel(leftPanel);this._hidePanel(midPanel);}if(this._isPanelClosed(leftPanel)&&this._isPanelClosed(rightPanel)){this._showPanel(midPanel);}if(!this._isPanelClosed(leftPanel)&&this._isPanelClosed(rightPanel)){this._hidePanel(midPanel);this._showPanel(leftPanel);}if(this._isPanelClosed(leftPanel)&&!this._isPanelClosed(rightPanel)){this._hidePanel(midPanel);this._showPanel(rightPanel);}// desktop, larger screen
}else if(pageWidth<1201){this._showPanel(midPanel);if(!this._isPanelClosed(leftPanel)&&!this._isPanelClosed(rightPanel)){if(this.flags.panelLeft){this._hidePanel(rightPanel);}else{this._hidePanel(leftPanel);}if(this.flags.panelRight){this._hidePanel(leftPanel);this._showPanel(rightPanel);}}}else{this._showPanel(midPanel);}this.flags.panelLeft=false;this.flags.panelRight=false;}}]);return MultiPanelTile;}();/**
 * @file Module to create Notification component.
 */ /**
 * Class representing a notification.
 */var Notification=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {Object} props - Notification properties.
   * @param {string} props.title - Sets the title of the notification.
   * @param {string} [props.description] - Sets the description of the notification.
   * @param {Function} [props.action] - The action that will trigger once the user clicks on the notification.
   * @param {number} [props.timeout] - Determines the time until the notification disappears.
   */function Notification(props){var _this43=this;_classCallCheck(this,Notification);this.dom={notification:null,close:null};this.props=props||{title:'No notification title',description:''};this.listeners={click:function click(evt){return _this43._handleClick(evt);},keyDown:function keyDown(evt){return _this43._closeOnKeyDown(evt);}};}/**
   * Create component.
   * @public
   */_createClass(Notification,[{key:"init",value:function init(){this._createNotification();this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.notification.addEventListener('click',this.listeners.click);window.addEventListener('keydown',this.listeners.keyDown);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){if(this.dom.notification&&this.dom.notification.parentNode){this.dom.notification.removeEventListener('click',this.listeners.click);window.removeEventListener('keydown',this.listeners.keyDown);this.dom.notification.parentNode.removeChild(this.dom.notification);}}/**
   * Return notification DOM element.
   * @public
   * @return {HTMLElement}
   */},{key:"getNotification",value:function getNotification(){return this.dom.notification;}/**
   * Create notification DOM element.
   * @private
   */},{key:"_createNotification",value:function _createNotification(){var _this44=this;this.dom.notification=document.createElement('div');this.dom.notification.classList.add('notification');var notificationTopRow=document.createElement('div');notificationTopRow.classList.add('top-row');var notificationTitle=document.createElement('div');notificationTitle.classList.add('title');notificationTitle.innerText=this.props.title;notificationTopRow.appendChild(notificationTitle);var notificationClose=document.createElement('i');notificationClose.className='icon icon-cross close';notificationTopRow.appendChild(notificationClose);this.dom.notification.appendChild(notificationTopRow);if(this.props.icon){var notificationIcon=document.createElement('i');notificationIcon.classList.add('icon',this.props.icon);notificationTitle.insertBefore(notificationIcon,notificationTitle.childNodes[0]);}if(this.props.description){var notificationDescription=document.createElement('div');notificationDescription.classList.add('description');notificationDescription.innerText=this.props.description;this.dom.notification.appendChild(notificationDescription);}this.dom.close=notificationClose;document.body.appendChild(this.dom.notification);/**
     * setTimeout is needed for CSS animation to work when creating new elements
     * (10ms for Firefox animation to work properly)
     */setTimeout(function(){_this44.dom.notification.classList.add('live');},10);if(this.props.timeout){setTimeout(function(){_this44.destroy();},this.props.timeout);}}/**
   * Handle click on notification.
   * @private
   * @param {Event} evt - Click event.
   * @param {HTMLElement} evt.target - Clicked element.
   */},{key:"_handleClick",value:function _handleClick(_ref4){var target=_ref4.target;if(target!==this.dom.close&&this.props.action){this.props.action();}this.destroy();}/**
   * Close notification by pressing Escape
   * @private
   * @param {Event} evt - key event.
   */},{key:"_closeOnKeyDown",value:function _closeOnKeyDown(evt){if(evt.key==='Escape'){this._handleClick(this.dom.notification);}}}]);return Notification;}();var NotificationLog={/**
   * Create component.
   * @public
   */init:function init(){var _this45=this;this.dom={notificationLog:document.querySelector('.notification-log'),notificationLogContainer:document.querySelector('.notification-log-container'),notificationLogTrigger:document.querySelector('.notification-log-trigger'),notificationLogNumber:document.querySelector('.notification-log-number'),notificationLogEmpty:document.querySelector('.notification-log-empty')};this.state={isNew:0,seen:false,notifications:[],notificationsDOM:[],liveNotification:null};this.listeners={clickTrigger:function clickTrigger(){return _this45._clickTrigger();},SyspanelOpenEvent:function SyspanelOpenEvent(){return _this45._removeLiveNotification();},SyspanelTabEvent:function SyspanelTabEvent(){return _this45._clearAllNotifications();},SyspanelCloseEvent:function SyspanelCloseEvent(){return _this45._clearAllNotifications();}};this.hasActiveListeners=[];this.events={toggleSyspanel:new CustomEvent('toggleSyspanel',{detail:this.dom.notificationLog}),NotificationLogCounterUpdate:new CustomEvent('NotificationLogCounterUpdate')};this.notificationTimeout=10000;this._addEventListeners();},/**
   * Destroy component.
   * @public
   */destroy:function destroy(){this._removeEventListeners();},/**
   * Add event listeners.
   * @private
   */_addEventListeners:function _addEventListeners(){this.dom.notificationLogTrigger.addEventListener('click',this.listeners.clickTrigger);window.addEventListener('SyspanelOpenEvent',this.listeners.SyspanelOpenEvent);window.addEventListener('SyspanelTabEvent',this.listeners.SyspanelTabEvent);window.addEventListener('SyspanelCloseEvent',this.listeners.SyspanelCloseEvent);},/**
   * Remove event listeners.
   * @private
   */_removeEventListeners:function _removeEventListeners(){this.dom.notificationLogTrigger.removeEventListener('click',this.listeners.clickTrigger);window.removeEventListener('SyspanelOpenEvent',this.listeners.SyspanelOpenEvent);window.removeEventListener('SyspanelTabEvent',this.listeners.SyspanelTabEvent);window.removeEventListener('SyspanelCloseEvent',this.listeners.SyspanelCloseEvent);this.hasActiveListeners.forEach(function(element){element.removeAllListeners();});},/**
   * Set dynamic notification data.
   * @public
   * @param {Object} notification - Notification data.
   * @param {string} notification.title
   * @param {string} [notification.description]
   * @param {Function} [notification.action]
   * @param {Date} [notification.timestamp]
   * @param {boolean} notification.isNew
   */setNotification:function setNotification(notification){notification.isNew=true;this.state.isNew+=1;this.state.notifications.push(notification);this._showLiveNotification(notification);this._prependToLog(notification);this._updateCounter();this._removeEmptyMessage();/*
     * TODO: How to serve, place, handle audio files...
     * const audio = new Audio('public/vanilla-components/notification-log/notification.mp3');
     * audio.play();
     */},/**
   * Load notification log data.
   * @public
   * @param {Object[]} notifications - Notifications array.
   * @param {number} [notifications[].id]
   * @param {string} notifications[].title
   * @param {string} [notifications[].description]
   * @param {Function} [notifications[].action]
   * @param {Date} [notifications[].timestamp]
   * @param {boolean} notifications[].isNew
   */loadNotificationLog:function loadNotificationLog(notifications){var _this46=this;notifications.forEach(function(notification){if(notification.isNew){_this46.state.isNew+=1;_this46._showLiveNotification(notification);}_this46.state.notifications.push(notification);_this46._prependToLog(notification);});this._updateCounter();this._removeEmptyMessage();},/**
   * Get notification log data.
   * https://gitlab.seld.rnd.ericsson.se/eds/eds/issues/307
   * @public
   * @return {Object[]} - Notifications array.
   */getNotifications:function getNotifications(){return this.state.notifications;},/**
   * Set time after which notification will be removed.
   * @public
   * @param {number} ms - Time in milliseconds.
   */setNotificationTimeout:function setNotificationTimeout(ms){this.notificationTimeout=ms;},/**
   * Show dynamic notification.
   * @private
   * @param {Object} notification - Notification data.
   * @param {string} notification.title
   * @param {string} [notification.description]
   * @param {Function} [notification.action]
   * @param {Date} [notification.timestamp]
   * @param {boolean} notification.isNew
   */_showLiveNotification:function _showLiveNotification(notification){var _this47=this;this._removeLiveNotification();var newNotification=new Notification({title:notification.title,description:notification.description,action:notification.action,timeout:this.notificationTimeout});newNotification.init();this.state.liveNotification=newNotification;newNotification.getNotification().addEventListener('click',function(){_this47._clearNotification();});this.hasActiveListeners.push(newNotification.getNotification());},/**
   * Remove dynamic notification.
   * @private
   */_removeLiveNotification:function _removeLiveNotification(){if(this.state.liveNotification){this.state.liveNotification.destroy();}},/**
   * Add notification to the beginning of the log.
   * @private
   * @param {Object} notification - Notification data.
   * @param {number} [notification.id]
   * @param {string} notification.title
   * @param {string} [notification.description]
   * @param {Function} [notification.action]
   * @param {Date} [notification.timestamp]
   * @param {boolean} notification.isNew
   */_prependToLog:function _prependToLog(notification){var _this48=this;var notificationLogItem=document.createElement('div');notificationLogItem.classList.add('notification-log-item');if(notification.isNew){notificationLogItem.classList.add('new');}var titleElement=document.createElement('div');titleElement.classList.add('title');titleElement.innerText=notification.title;notificationLogItem.appendChild(titleElement);var descriptionElement=document.createElement('div');descriptionElement.classList.add('description');descriptionElement.innerText=notification.description;notificationLogItem.appendChild(descriptionElement);var timestampElement=document.createElement('span');timestampElement.classList.add('notification-log-item-time');timestampElement.innerText=this._getRelativeTime(new Date(notification.timestamp));notificationLogItem.appendChild(timestampElement);notificationLogItem.dataset.timestamp=notification.timestamp;this.state.notificationsDOM.push(notificationLogItem);var notificationContainer=document.querySelector('.notification-log-container');// Store index to connect DOM element with notification Object
notificationLogItem.dataset.index=notificationContainer.querySelectorAll('.notification-log-item').length;notificationContainer.insertBefore(notificationLogItem,notificationContainer.firstChild);if(notification.action){notificationLogItem.addEventListener('click',function(){window.dispatchEvent(_this48.events.toggleSyspanel);setTimeout(function(){notification.action();},250);});this.hasActiveListeners.push(notificationLogItem);}},/**
   * Update notification counter element.
   * @private
   */_updateCounter:function _updateCounter(){window.dispatchEvent(this.events.NotificationLogCounterUpdate);this.dom.notificationLogNumber.innerHTML=this.state.isNew;var hasNotification='has-notification';var noNotification='no-notification';if(this.state.isNew===0){if(this.dom.notificationLogTrigger.classList.contains(hasNotification)){this.dom.notificationLogTrigger.classList.remove(hasNotification);this.dom.notificationLogTrigger.classList.add(noNotification);}}else{this.seen=false;this.dom.notificationLogTrigger.classList.remove(noNotification);this.dom.notificationLogTrigger.classList.add(hasNotification);}},/**
   * Mark notification as seen.
   * @private
   * @param {HTMLElement} item - Notification DOM element
   */_markAsSeen:function _markAsSeen(item){item.classList.remove('new');// Update state of related notification object
this.state.notifications[item.dataset.index].isNew=false;},/**
   * Mark all notifications as seen.
   * @private
   */_markAllAsSeen:function _markAllAsSeen(){for(var i=0;i<this.state.notificationsDOM.length;i+=1){this._markAsSeen(this.state.notificationsDOM[i]);}this.state.notificationsDOM=[];},/**
   * Handle click on notification log icon.
   * @private
   */_clickTrigger:function _clickTrigger(){window.dispatchEvent(this.events.toggleSyspanel);this.seen=true;this._updateTimes();},/**
   * Remove 'new' state from clicked notification and update counter.
   * @private
   */_clearNotification:function _clearNotification(){this.state.isNew-=1;this._updateCounter();this._markAsSeen(this.state.notificationsDOM[this.state.notificationsDOM.length-1]);},/**
   * Remove 'new' state from all notifications and update counter.
   * @private
   */_clearAllNotifications:function _clearAllNotifications(){if(this.seen){this.state.isNew=0;this.seen=false;this._updateCounter();this._markAllAsSeen();}},/**
   * Hide message that is displayed when log is empty.
   * @private
   */_removeEmptyMessage:function _removeEmptyMessage(){this.dom.notificationLogEmpty.classList.add('hidden');},/**
   * Get time relative to current date for example '1 mo' (1 month ago).
   * @private
   * @param {Date} timestamp - Date of notification.
   * @return {string} - Time in relative format.
   */ // TODO: Talk about i18n and l10n, since right now time units are hardcoded...
_getRelativeTime:function _getRelativeTime(timestamp){var msPerMinute=60*1000;var msPerHour=msPerMinute*60;var msPerDay=msPerHour*24;var msPerMonth=msPerDay*30;var msPerYear=msPerDay*365;var elapsed=Date.now()-timestamp.getTime();if(elapsed<msPerMinute){return'';}else if(elapsed<msPerHour){return Math.round(elapsed/msPerMinute)+' m';}else if(elapsed<msPerDay){return Math.round(elapsed/msPerHour)+' h';}else if(elapsed<msPerMonth){return Math.round(elapsed/msPerDay)+' d';}else if(elapsed<msPerYear){return Math.round(elapsed/msPerMonth)+' mo';}else{return Math.round(elapsed/msPerYear)+' y';}},/**
   * Update notification elements to display time in relative format.
   * @private
   */_updateTimes:function _updateTimes(){for(var i=0;i<this.state.notificationsDOM.length;i+=1){var item=this.state.notificationsDOM[i];item.querySelector('.notification-log-item-time').innerHTML=this._getRelativeTime(new Date(item.dataset.timestamp));}}};/**
 * @file Module to create Tile component.
 */ /**
 * Class representing a tile.
 */var Tile=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Tile(element){var _this49=this;_classCallCheck(this,Tile);this.dom={tile:element,header:element.querySelector('.header'),actions:element.querySelectorAll('.header .action'),id:element.id};this.events={maximizeTile:new CustomEvent('maximizeTile',{detail:{id:this.dom.id,message:'tile maximized'},bubbles:false,cancelable:true}),minimizeTile:new CustomEvent('minimizeTile',{detail:{id:this.dom.id,message:'tile minimize'},bubbles:true,cancelable:true})};this.listeners={show:function show(){return _this49.show();},toggleFullScreen:[]};}/**
   * Create component.
   * @public
   */_createClass(Tile,[{key:"init",value:function init(){this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this50=this;var actions=this.dom.actions;if(actions){Array.from(actions).forEach(function(action,index){if(action.dataset.type==='maximize'){var listener=function listener(){return _this50._toggleFullScreen(action);};action.addEventListener('click',listener);_this50.listeners.toggleFullScreen[index]=listener;}});}this.dom.tile.addEventListener('minimizeTile',this.listeners.show);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this51=this;var actions=this.dom.actions;if(actions){Array.from(actions).forEach(function(action,index){if(action.dataset.type==='maximize'){action.removeEventListener('click',_this51.listeners.toggleFullScreen[index]);}});this.listeners.toggleFullScreen=[];}this.dom.tile.removeEventListener('minimizeTile',this.listeners.show);}/**
   * Toggle tile size (basic / fullscreen).
   * @private
   * @param {HTMLElement} action - Action element.
   */},{key:"_toggleFullScreen",value:function _toggleFullScreen(action){if(this.dom.tile.classList.contains('fullscreen')){this._minimize(action);}else{this._maximize(action);}}/**
   * Maximize tile.
   * @private
   * @param {HTMLElement} action - Action element.
   */},{key:"_maximize",value:function _maximize(action){this._setTooltipMessage(action,'Minimize tile');this.dom.tile.classList.add('fullscreen');var icon=action.querySelector('.icon');icon.classList.add('icon-minimize');icon.classList.remove('icon-maximize');window.document.dispatchEvent(this.events.maximizeTile);}/**
   * Minimize tile.
   * @private
   * @param {HTMLElement} action - Action element.
   */},{key:"_minimize",value:function _minimize(action){this._setTooltipMessage(action,'Maximize tile');this.dom.tile.classList.remove('fullscreen');var icon=action.querySelector('.icon');icon.classList.remove('icon-minimize');icon.classList.add('icon-maximize');window.document.dispatchEvent(this.events.minimizeTile);}/**
   * Update tooltip message.
   * @private
   * @param {HTMLElement} action - Action element.
   * @param {string} message - New text for tooltip.
   */},{key:"_setTooltipMessage",value:function _setTooltipMessage(action,message){action.querySelector('.tooltip .message').innerText=message;}/**
   * Show tile.
   * @public
   */},{key:"show",value:function show(){this.dom.tile.classList.remove('hidden');}/**
   * Hide tile.
   * @public
   */},{key:"hide",value:function hide(){this.dom.tile.classList.add('hidden');}/**
   * @deprecated
   * @param {CustomEvent} event
   */},{key:"hideNotSelf",value:function hideNotSelf(event){if(event.detail.id!==this.dom.id){this.dom.hide();}}}]);return Tile;}();/**
 * @file Module to create Page with tiles.
 * @requires Tile
 */ /**
 * Class representing a page.
 */var Page=/*#__PURE__*/function(){/**
   * Setup properties.
   */function Page(){var _this52=this;_classCallCheck(this,Page);this.dom={page:document,tiles:document.querySelectorAll('.tile')};this.listeners={maximize:function maximize(event){return _this52._hideNotSelf(event);},minimize:function minimize(event){return _this52._showAll(event);}};this.tiles=[];}/**
   * Create component.
   * @public
   */_createClass(Page,[{key:"init",value:function init(){var _this53=this;if(this.dom.tiles){Array.from(this.dom.tiles).forEach(function(tileDOM){var tile=new Tile(tileDOM);tile.init();_this53.tiles.push(tile);});}this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){if(this.tiles){this.tiles.forEach(function(tile){tile.destroy();});}this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.page.addEventListener('maximizeTile',this.listeners.maximize);this.dom.page.addEventListener('minimizeTile',this.listeners.minimize);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.page.removeEventListener('maximizeTile',this.listeners.maximize);this.dom.page.removeEventListener('minimizeTile',this.listeners.minimize);}/**
   * Show all tiles and scroll to minimized tile.
   * @private
   * @param {CustomEvent} event - 'minimizeTile' custom event.
   */},{key:"_showAll",value:function _showAll(event){this.tiles.forEach(function(tile){tile.show();});if(event.detail.id){this._scrollToTile(event.detail.id);}}/**
   * Hide all tiles except maximized.
   * @private
   * @param {CustomEvent} event - 'maximizeTile' custom event.
   */},{key:"_hideNotSelf",value:function _hideNotSelf(event){this.tiles.forEach(function(tile){if(tile.dom.id!==event.detail.id){tile.hide();}});}/**
   * Scroll to the tile selected by ID.
   * @private
   * @param {string} tileId - Tile ID for CSS selector.
   */},{key:"_scrollToTile",value:function _scrollToTile(tileId){var minimizedTile=this.dom.page.querySelector("#".concat(tileId));if(minimizedTile){minimizedTile.scrollIntoView();}}}]);return Page;}();/**
 * @file Module to create Select component.
 */ /**
 * Class representing a select.
 */var Select=/*#__PURE__*/function(){/**
   * Setup select properties.
   * @param {HTMLElement} element - The DOM element of select.
   */function Select(element){var _this54=this;_classCallCheck(this,Select);this.dom={select:element,selectOptions:element.querySelector('.options-list'),current:element.querySelector('.current-options'),items:element.querySelectorAll('.item'),checkboxes:element.querySelectorAll('input[type="checkbox"]'),input:element.querySelector('.current-options').children[0]};this.events={singleOption:new CustomEvent('singleOption',{detail:{selectedOptions:this.selectedOptions}})};this.listeners={singleCurrentClick:function singleCurrentClick(){return _this54._toggleSelectOpt();},singleSelectOptionsClick:function singleSelectOptionsClick(evt){return _this54._onOptionClick(evt);},singleSelectKeydown:function singleSelectKeydown(evt){return _this54._arrowKeyActions(evt);},multiCurrentClick:function multiCurrentClick(){return _this54._toggleSelectOpt();},multiSelectOptionsChange:function multiSelectOptionsChange(evt){return _this54._onOptionClick(evt);},multiSelectKeydown:function multiSelectKeydown(evt){return _this54._arrowKeyActions(evt);},multiPillsCurrentClick:function multiPillsCurrentClick(){return _this54._toggleSelectOpt();},multiPillsSelectOptionsChange:function multiPillsSelectOptionsChange(evt){return _this54._onOptionClick(evt);},multiPillsSelectQuerySelectorClick:function multiPillsSelectQuerySelectorClick(evt){return _this54._removePill(evt);},multiPillsSelectKeydown:function multiPillsSelectKeydown(evt){return _this54._arrowKeyActions(evt);},inputSingleSelectOptionsClick:function inputSingleSelectOptionsClick(evt){return _this54._onOptionClick(evt);},inputSingleInputClick:function inputSingleInputClick(){_this54.dom.select.classList.add('open');_this54.dom.select.classList.remove('closed');},inputSingleInputKeyup:function inputSingleInputKeyup(){return _this54._filterOptions();},inputSingleSelectKeyup:function inputSingleSelectKeyup(evt){return _this54._arrowKeyActions(evt);},inputSingleIconClick:function inputSingleIconClick(){_this54.dom.select.classList.toggle('open');_this54.dom.select.classList.toggle('closed');},inputMultiInputClick:function inputMultiInputClick(){_this54.dom.select.classList.add('open');_this54.dom.select.classList.remove('closed');},inputMultiSelectOptionsChange:function inputMultiSelectOptionsChange(evt){return _this54._onOptionClick(evt);},inputMultiInputKeyup:function inputMultiInputKeyup(evt){return _this54._filterOptions(evt);},inputMultiSelectQuerySelectorClick:function inputMultiSelectQuerySelectorClick(evt){return _this54._removePill(evt);},inputMultiSelectKeyup:function inputMultiSelectKeyup(evt){return _this54._arrowKeyActions(evt);},inputMultiIconClick:function inputMultiIconClick(){_this54.dom.select.classList.toggle('open');_this54.dom.select.classList.toggle('closed');},scroll:function scroll(){if(_this54.dom.select.classList.contains('open')){_this54._optionsListPosition(_this54.dom.select);}},clickedOutside:function clickedOutside(_ref5){var target=_ref5.target;if(!_this54.dom.select.contains(target)){_this54._hideSelectOpt();}}};this.type=this.dom.select.getAttribute('data-type')||undefined;this.highlightIndex=-1;this.selectedOptions=[];this.filteredOptions=[];}/**
   * Initialize select.
   * @public
   */_createClass(Select,[{key:"init",value:function init(){this._render();this._disableState();this._addEventListeners();}/**
   * Destroy select and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Generate custom select markup.
   * @private
   */},{key:"_render",value:function _render(){if(this.type==='multi'){this._createCheckboxes();}else if(this.type==='multi-pills'||this.type==='input-multi'){var optionsContainer=document.createElement('div');optionsContainer.classList.add('options_container');this.dom.select.appendChild(optionsContainer);this._createCheckboxes();}else if(this.type==='single'||this.type==='input-single'){for(var i=0;i<this.dom.items.length;i+=1){if(this._isEllipsisActive(this.dom.items[i])){this.dom.items[i].title=this.dom.items[i].innerText;}}}else{this.dom.select.innerHTML='<div class="invalid_select">Invalid type</div>';}if(this.type==='input-single'||this.type==='input-multi'){var icon=document.createElement('i');icon.classList.add('icon','icon-chevron-down');this.dom.current.appendChild(icon);}this.dom.select.classList.add('closed');}/**
   * Apply disabled state to the custom select.
   * @private
   */},{key:"_disableState",value:function _disableState(){var disEl=null;if(this.dom.select.classList.contains('disabled')){if(this.type==='input-single'||this.type==='input-multi'){disEl=this.dom.current.querySelector('input');}else{disEl=this.dom.select.querySelector('button.current-options');}disEl.tabIndex=-1;}}/**
   * Create checkboxes for multi select.
   * @private
   */},{key:"_createCheckboxes",value:function _createCheckboxes(){// generate unique ID for each option input/label pair
var uniqueName=Math.random().toString(36).substr(2,5);for(var i=0;i<this.dom.items.length;i+=1){var checkbox=document.createElement('input');var label=document.createElement('label');var itemContent=this.dom.items[i].innerText;checkbox.type='checkbox';checkbox.tabIndex=-1;checkbox.id=uniqueName+'_'+Number(i+1);label.htmlFor=uniqueName+'_'+Number(i+1);label.appendChild(document.createTextNode(itemContent));// check if text overflows the element and add title attribute
if(this._isEllipsisActive(this.dom.items[i])){label.title=itemContent;}this.dom.items[i].innerHTML='';this.dom.items[i].appendChild(checkbox);this.dom.items[i].appendChild(label);}}/**
   * Check if option name is longer than element itself.
   * @private
   * @param {HTMLElement} element - select option.
   * @return {Boolean}
   */},{key:"_isEllipsisActive",value:function _isEllipsisActive(element){return element.offsetWidth<element.scrollWidth;}/**
   * Create pill.
   * @private
   */},{key:"_addPill",value:function _addPill(){if(this.selectedOptions.length){for(var i=0;i<this.selectedOptions.length;i+=1){var pill=document.createElement('span');pill.className+='pill removable';pill.tabIndex=0;pill.innerHTML=this.selectedOptions[i];this.dom.select.querySelector('.options_container').appendChild(pill);if(this._isEllipsisActive(pill)){pill.title=this.selectedOptions[i];}}}}/**
   * Remove pills.
   * @private
   * @param {Event} evt - click event.
   */},{key:"_removePill",value:function _removePill(evt){if(evt.target.classList.contains('pill')){var pillValue=evt.target.innerText;var itemElements=this.dom.items;// remove from array
this.selectedOptions.splice(this.selectedOptions.indexOf(pillValue),1);// remove from html
evt.target.parentNode.removeChild(evt.target);// remove from select
for(var i=0;i<itemElements.length;i+=1){if(itemElements[i].innerText===evt.target.innerText){itemElements[i].querySelector('input').checked=false;}}this._refreshMultiPlaceholder();}}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){switch(this.type){case'single':this.dom.current.addEventListener('click',this.listeners.singleCurrentClick);this.dom.selectOptions.addEventListener('click',this.listeners.singleSelectOptionsClick);this.dom.select.addEventListener('keydown',this.listeners.singleSelectKeydown);break;case'multi':this.dom.current.addEventListener('click',this.listeners.multiCurrentClick);this.dom.selectOptions.addEventListener('change',this.listeners.multiSelectOptionsChange);this.dom.select.addEventListener('keydown',this.listeners.multiSelectKeydown);break;case'multi-pills':this.dom.current.addEventListener('click',this.listeners.multiPillsCurrentClick);this.dom.selectOptions.addEventListener('change',this.listeners.multiPillsSelectOptionsChange);this.dom.select.querySelector('.options_container').addEventListener('click',this.listeners.multiPillsSelectQuerySelectorClick);this.dom.select.addEventListener('keydown',this.listeners.multiPillsSelectKeydown);break;case'input-single':this.dom.selectOptions.addEventListener('click',this.listeners.inputSingleSelectOptionsClick);this.dom.current.querySelector('.icon').addEventListener('click',this.listeners.inputSingleIconClick);this.dom.input.addEventListener('click',this.listeners.inputSingleInputClick);this.dom.input.addEventListener('keyup',this.listeners.inputSingleInputKeyup);this.dom.select.addEventListener('keyup',this.listeners.inputSingleSelectKeyup);break;case'input-multi':this.dom.input.addEventListener('click',this.listeners.inputMultiInputClick);this.dom.selectOptions.addEventListener('change',this.listeners.inputMultiSelectOptionsChange);this.dom.current.querySelector('.icon').addEventListener('click',this.listeners.inputMultiIconClick);this.dom.input.addEventListener('keyup',this.listeners.inputMultiInputKeyup);this.dom.select.querySelector('.options_container').addEventListener('click',this.listeners.inputMultiSelectQuerySelectorClick);this.dom.select.addEventListener('keyup',this.listeners.inputMultiSelectKeyup);break;}if(document.querySelector('.appcontent')){document.querySelector('.appcontent').addEventListener('scroll',this.listeners.scroll);}document.addEventListener('click',this.listeners.clickedOutside);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){switch(this.type){case'single':this.dom.current.removeEventListener('click',this.listeners.singleCurrentClick);this.dom.selectOptions.removeEventListener('click',this.listeners.singleSelectOptionsClick);this.dom.select.removeEventListener('keydown',this.listeners.singleSelectKeydown);break;case'multi':this.dom.current.removeEventListener('click',this.listeners.multiCurrentClick);this.dom.selectOptions.removeEventListener('change',this.listeners.multiSelectOptionsChange);this.dom.select.removeEventListener('keydown',this.listeners.multiSelectKeydown);break;case'multi-pills':this.dom.current.removeEventListener('click',this.listeners.multiPillsCurrentClick);this.dom.selectOptions.removeEventListener('change',this.listeners.multiPillsSelectOptionsChange);this.dom.select.querySelector('.options_container').removeEventListener('click',this.listeners.multiPillsSelectQuerySelectorClick);this.dom.select.removeEventListener('keydown',this.listeners.multiPillsSelectKeydown);break;case'input-single':this.dom.selectOptions.removeEventListener('click',this.listeners.inputSingleSelectOptionsClick);this.dom.current.querySelector('.icon').removeEventListener('click',this.listeners.inputSingleIconClick);this.dom.input.removeEventListener('click',this.listeners.inputSingleInputClick);this.dom.input.removeEventListener('keyup',this.listeners.inputSingleInputKeyup);this.dom.select.removeEventListener('keyup',this.listeners.inputSingleSelectKeyup);break;case'input-multi':this.dom.input.removeEventListener('click',this.listeners.inputMultiInputClick);this.dom.selectOptions.removeEventListener('change',this.listeners.inputMultiSelectOptionsChange);this.dom.current.querySelector('.icon').removeEventListener('click',this.listeners.inputMultiIconClick);this.dom.input.removeEventListener('keyup',this.listeners.inputMultiInputKeyup);this.dom.select.querySelector('.options_container').removeEventListener('click',this.listeners.inputMultiSelectQuerySelectorClick);this.dom.select.removeEventListener('keyup',this.listeners.inputMultiSelectKeyup);break;}if(document.querySelector('.appcontent')){document.querySelector('.appcontent').removeEventListener('scroll',this.listeners.scroll);}document.removeEventListener('click',this.listeners.clickedOutside);}/**
   * Depending on event type (keyup or click)
   * get the correct target and select the option
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_onOptionClick",value:function _onOptionClick(evt){var eventTarget;if(evt.type==='keyup'||evt.type==='keydown'){eventTarget=this.dom.selectOptions.querySelector('.highlight');}else{// Early exit in case dragged instead of click on single item
if(!(evt.target.classList.contains('item')||evt.target.parentElement.classList.contains('item'))){return;}eventTarget=evt.target;}this._selectOption(eventTarget);}/**
   * Select option.
   * @private
   * @param {HTMLElement} item - Option element.
   */},{key:"_selectOption",value:function _selectOption(item){switch(this.type){case'single':{var option=item.innerText;this.selectedOptions=[];this.dom.current.innerHTML=option;this.selectedOptions.push(option);this.events.singleOption.detail.selectedOptions=this.selectedOptions;document.dispatchEvent(this.events.singleOption);this._highlightSingleActiveOption(item);this._hideSelectOpt();break;}case'multi':this._multiSelect(item);this._refreshMultiPlaceholder();break;case'multi-pills':this._multiSelect(item);// clear container with selected options
this.dom.select.querySelector('.options_container').innerHTML='';this._addPill();this._refreshMultiPlaceholder();break;case'input-single':if(item!==null&&!item.classList.contains('no_results')){this.selectedOptions=[];this._setInputValue(item);this._highlightSingleActiveOption(item);this._filterOptions();this._hideSelectOpt();this.selectedOptions.push(item.innerText.trim());}break;case'input-multi':if(item!==null&&!item.classList.contains('no_results')){this._multiSelect(item);this._refreshMultiPlaceholder();// clear container with selected options
this.dom.select.querySelector('.options_container').innerHTML='';this._addPill();}break;}var selectEvent=new CustomEvent('selectOption',{detail:{value:this.selectedOptions}});this.dom.select.dispatchEvent(selectEvent);}/**
   * Highlight selected option.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_highlightSingleActiveOption",value:function _highlightSingleActiveOption(evt){if(!evt.classList.contains('active')){var options=this.dom.selectOptions.querySelectorAll('.item');[].forEach.call(options,function(el){el.classList.remove('active');});evt.classList.add('active');}}/**
   * Set select value.
   * @private
   * @param {HTMLInputElement} target - input field.
   */},{key:"_setInputValue",value:function _setInputValue(target){if(!target.classList.contains('no_results')){this.dom.input.value=target.innerText;}}/**
   * Filter select options.
   * @private
   */},{key:"_filterOptions",value:function _filterOptions(){this.dom.select.classList.add('open');this.dom.select.classList.remove('closed');var items=Array.from(this.dom.items);var typedValue=this.dom.input.value.toLowerCase().trim();this.filteredOptions=items.filter(function(val){return val.innerText.toLowerCase().indexOf(typedValue)>-1;});if(this.filteredOptions.length){this.dom.selectOptions.innerHTML='';for(var i=0;i<this.filteredOptions.length;i+=1){if(typedValue!==this.filteredOptions[i].innerText.trim().toLowerCase()){this.filteredOptions[i].classList.remove('active');}else{this.filteredOptions[i].classList.add('active');}this.dom.selectOptions.appendChild(this.filteredOptions[i]);}}else{this.dom.selectOptions.innerHTML='<div class="no_results">No results found</div>';}}/**
   * Select several options.
   * @private
   * @param {Event} evt - Click event.
   * @param {HTMLElement} target - select option.
   */},{key:"_multiSelect",value:function _multiSelect(target){var optionsArr=this.selectedOptions;var li=target.closest('.item');var input=li.querySelector('input');var itemValue=li.querySelector('label').innerText;if(target.tagName!=='INPUT'){input.checked=!input.checked;}li.classList.toggle('active',input.checked);if(optionsArr.indexOf(itemValue)===-1){optionsArr.push(itemValue);}else{optionsArr.splice(optionsArr.indexOf(itemValue),1);}}/**
   * Update placeholder for multi select.
   * @private
   */},{key:"_refreshMultiPlaceholder",value:function _refreshMultiPlaceholder(){var optionNumber=this.selectedOptions.length;var optionText=optionNumber===1?' option':' options';var placeholder=optionNumber?optionNumber+optionText+' selected':'Select options';if(this.type==='multi'||this.type==='multi-pills'){this.dom.current.innerHTML=placeholder;}if(this.type==='input-multi'){this.dom.current.querySelector('input').placeholder=placeholder;}}/**
   * Keyboard accessibility.
   * @private
   * @param {Event} evt - press key.
   */},{key:"_arrowKeyActions",value:function _arrowKeyActions(evt){var options=this.dom.selectOptions.querySelectorAll('.item').length-1;switch(evt.key){case'Escape':this._hideSelectOpt();break;case'ArrowDown':// Prevent unwanted page scroll
evt.preventDefault();if(this.highlightIndex>=options){this.highlightIndex=0;}else{this.highlightIndex+=1;}break;case'ArrowUp':// Prevent unwanted page scroll
evt.preventDefault();if(this.highlightIndex<=0){this.highlightIndex=options;}else{this.highlightIndex-=1;}break;case'Enter':evt.preventDefault();if(this.dom.select.classList.contains('open')&&this.dom.selectOptions.querySelector('.highlight')){this._onOptionClick(evt);}else if(!this.dom.select.classList.contains('disabled')){this._toggleSelectOpt();}break;case' ':// Ignore action on 'Space' for selects with input (fix issue #432)
if(this.type==='input-single'||this.type==='input-multi'){break;}evt.preventDefault();if(this.dom.select.classList.contains('open')&&this.dom.selectOptions.querySelector('.highlight')){this._onOptionClick(evt);}else if(!this.dom.select.classList.contains('disabled')){if(document.activeElement.classList.contains('pill')){this._removePill(evt);}else{this._toggleSelectOpt();}}break;case'Tab':this._hideSelectOpt();break;}this._highlightOptions();}/**
   * Highlight option when using keyboard.
   * @private
   */},{key:"_highlightOptions",value:function _highlightOptions(){var options=this.dom.selectOptions.querySelectorAll('.item');for(var i=0;i<options.length;i+=1){options[i].classList.remove('highlight');if(i===this.highlightIndex){options[i].classList.add('highlight');if(!this._isInViewport(options[i])){this.dom.selectOptions.scrollTop=options[i].offsetTop;}}}}/**
   * Remove option's highlight.
   * @private
   */},{key:"_removeOptionsHighlight",value:function _removeOptionsHighlight(){var options=this.dom.items.length;for(var i=0;i<options;i+=1){this.dom.items[i].classList.remove('highlight');}// reset option list's scroll position
this.dom.selectOptions.scrollTop=0;}/**
   * Check if an option is in viewport of list.
   * @private
   * @param {HTMLElement} element - select option.
   * @return {Boolean}
   */},{key:"_isInViewport",value:function _isInViewport(element){var elementTop=element.offsetTop;var elementBottom=elementTop+element.clientHeight;var viewportTop=this.dom.selectOptions.scrollTop;var viewportBottom=viewportTop+this.dom.selectOptions.offsetHeight-4;return elementBottom>viewportTop&&elementTop<viewportBottom;}/**
   * Toggle options list.
   * @private
   */},{key:"_toggleSelectOpt",value:function _toggleSelectOpt(){this._removeOptionsHighlight();this.dom.select.classList.toggle('open');this.dom.select.classList.toggle('closed');this.highlightIndex=-1;this._optionsListPosition(this.dom.select);}/**
   * Keep options list in the viewport.
   * @private
   * @param {HTMLElement} select - html select.
   */},{key:"_optionsListPosition",value:function _optionsListPosition(select){var bottomOffset=window.innerHeight-select.getBoundingClientRect().height;bottomOffset=bottomOffset-select.getBoundingClientRect().top;var listHeight=select.querySelector('.options-list').offsetHeight+4;if(bottomOffset<listHeight&&select.classList.contains('open')){select.classList.add('open-top');}else{select.classList.remove('open-top');}}/**
   * Hide options list.
   * @private
   */},{key:"_hideSelectOpt",value:function _hideSelectOpt(){this._removeOptionsHighlight();this.dom.select.classList.remove('open');this.dom.select.classList.add('closed');this.highlightIndex=-1;}}]);return Select;}();/**
 * @file Module to create Pagination component.
 */var MAX_PAGES=7;/**
 * Class representing a pagination.
 */var Pagination=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function Pagination(element){var _this55=this;_classCallCheck(this,Pagination);this.dom={paginationGroup:element,paginationInput:element.querySelector('.actions input[type="number"]'),paginationSelect:element.querySelector('.actions .select')};this.state={currentPage:1,hasNextPage:false,hasPreviousPage:false,numEntries:0,numPerPage:0,numPages:0,pageClicked:0};this.events={paginationChangePage:new CustomEvent('paginationChangePage',{detail:{state:this.state}}),paginationChangeSelect:new CustomEvent('paginationChangeSelect',{detail:{state:this.state}})};this.listeners={pagination:[],inputChange:function inputChange(evt){return _this55._onInputChange(evt);},selectChange:function selectChange(evt){var val=evt.detail.value[0];_this55.state.numPerPage=val.toLowerCase()==='all'?_this55.state.numEntries:+val;_this55._onSelectChange();}};}/**
   * Create component.
   * @public
   * @param {number} num - Number of pages / entries.
   */_createClass(Pagination,[{key:"init",value:function init(num){var nPages=num;// For pagination with select
if(this.dom.paginationSelect){var select=new Select(this.dom.paginationSelect);select.init();this._setNumEntries(num);this.state.numPerPage=+select.dom.current.innerHTML;nPages=this._calcNumPages();}this._setNumPages(nPages);this._injectPaginationControls();this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this56=this;var paginationArray=Array.from(this.dom.paginationGroup.querySelectorAll('.pagination li'));this.listeners.pagination=paginationArray.map(function(item){var listener=function listener(evt){evt.preventDefault();// Do nothing if clicked on current page or disabled element
if(evt.target.classList.contains('disabled')||_this56.state.currentPage===+evt.target.dataset.value){return;}_this56.state.pageClicked=item.dataset.value;_this56._updatePaginationDOM();// Deprecated. Dispatch event on pagination element instead
document.dispatchEvent(_this56.events.paginationChangePage);// Add event listener to event 'paginationChangePage'
_this56.dom.paginationGroup.dispatchEvent(_this56.events.paginationChangePage);};item.addEventListener('click',listener);return[item,listener];});if(this.dom.paginationInput){this.dom.paginationInput.addEventListener('change',this.listeners.inputChange);}if(this.dom.paginationSelect){this.dom.paginationSelect.addEventListener('selectOption',this.listeners.selectChange);}}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.listeners.pagination.forEach(function(pair){var _pair=_slicedToArray(pair,2),item=_pair[0],listener=_pair[1];item.removeEventListener('click',listener);});this.listeners.pagination=[];if(this.dom.paginationInput){this.dom.paginationInput.removeEventListener('change',this.listeners.inputChange);}if(this.dom.paginationSelect){this.dom.paginationSelect.removeEventListener('selectOption',this.listeners.selectChange);}}/**
   * Update pagination when click on arrow or page number.
   * @private
   */},{key:"_updatePaginationDOM",value:function _updatePaginationDOM(){this._updateCurrentPage();this._setPaginationControls();}/**
   * Update state of current page.
   * @private
   */},{key:"_updateCurrentPage",value:function _updateCurrentPage(){if(this.state.numPages<2){return;}if(this.state.pageClicked.includes('left')){if(this.state.currentPage>1){this.state.currentPage-=1;}}// - Right arrow
else if(this.state.pageClicked.includes('right')){if(this.state.currentPage<this.state.numPages){this.state.currentPage+=1;}}else if(this.state.pageClicked.length!==0){this.state.currentPage=parseInt(this.state.pageClicked,10);}this.state.hasNextPage=true;this.state.hasPreviousPage=true;if(this.state.currentPage===1){this.state.hasNextPage=true;this.state.hasPreviousPage=false;}if(this.state.currentPage===this.state.numPages){this.state.hasNextPage=false;this.state.hasPreviousPage=true;}}},{key:"_calcNumPages",value:function _calcNumPages(){// Pagination should have at least 1 page
return Math.ceil(this.state.numEntries/this.state.numPerPage)||1;}/**
   * Save number of pages to property.
   * @private
   * @param {number} nPages - Number of pages.
   */},{key:"_setNumPages",value:function _setNumPages(nPages){this.state.numPages=nPages;if(nPages>1){this.state.hasNextPage=true;}if(this.dom.paginationInput){this.dom.paginationInput.setAttribute('max',nPages);}}},{key:"_setNumEntries",value:function _setNumEntries(nEntries){this.state.numEntries=nEntries;}/**
   * Generate pagination controls dynamically.
   * @private
   */},{key:"_injectPaginationControls",value:function _injectPaginationControls(){var pagination=this.dom.paginationGroup.querySelector('.pagination');pagination.innerHTML='';var leftArrow=this._genArrowControl('left',this.state.hasPreviousPage);var rightArrow=this._genArrowControl('right',this.state.hasNextPage);// Inject Left arrow
pagination.appendChild(leftArrow);// Create empty page controls
for(var i=1;i<=Math.min(MAX_PAGES,this.state.numPages);i+=1){pagination.appendChild(this._genPageControl('',false));}// Inject Right arrow
pagination.appendChild(rightArrow);// Update empty page controls with real values
this._setPaginationControls();}/**
   * Modifies the values of the DOM pages.
   * @private
   */},{key:"_setPaginationControls",value:function _setPaginationControls(){var _this57=this;var currentPage=parseInt(this.state.currentPage,10);var numPages=parseInt(this.state.numPages,10);var paginationArray=[];paginationArray.push({label:'left',state:false});/*
     * Set all pages, ie: 1 2 3 4 5 6 7
     */if(numPages<=MAX_PAGES){for(var i=1;i<=numPages;i+=1){paginationArray.push({label:i,state:this._isCurrentPage(i)});}}else{if(currentPage<5){/*
         * Set pages in the beginning
         * Pattern: from 1 to (MAX_PAGES - 2) ... last page
         * ie: 1 2 3 [4] 5 ... 10
         */for(var _i2=1;_i2<=5;_i2+=1){paginationArray.push({label:_i2,state:this._isCurrentPage(_i2)});}paginationArray.push({label:'',state:false});paginationArray.push({label:this.state.numPages,state:false});}else if(currentPage<numPages-3){/*
         * Set pages in the middle
         * Pattern: 1 ... n-1 n n+1 ... last page (n is current page)
         * ie: 1 ... 4 [5] 6 ... 10
         */paginationArray.push({label:'1',state:false});paginationArray.push({label:'',state:false});for(var _i3=currentPage-1;_i3<=currentPage+1;_i3+=1){paginationArray.push({label:_i3,state:this._isCurrentPage(_i3)});}paginationArray.push({label:'',state:false});paginationArray.push({label:this.state.numPages,state:false});}else{/*
         * Set pages in the end
         * Pattern: 1 ... last (MAX_PAGES - 2) pages
         * ie: 1 ... 6 [7] 8 9 10
         */paginationArray.push({label:1,state:false});paginationArray.push({label:'',state:false});for(var _i4=numPages-4;_i4<=numPages;_i4+=1){paginationArray.push({label:_i4,state:this._isCurrentPage(_i4)});}}}paginationArray.push({label:'right',state:false});var lis=this.dom.paginationGroup.querySelectorAll('.pagination li');Array.from(lis).forEach(function(item,i){var label=paginationArray[i].label;var state=paginationArray[i].state;if(label==='left'){_this57._setArrowControl(item,'left',_this57.state.hasPreviousPage);}else if(label==='right'){_this57._setArrowControl(item,'right',_this57.state.hasNextPage);}else{_this57._setPageControl(item,label,state);}});}/**
   * Create li element for arrow control.
   * @private
   * @param {string} direction - Left / right arrow.
   * @param {boolean} state - True if has previous / next page.
   * @return {HTMLElement} li - Created 'li' element.
   */},{key:"_genArrowControl",value:function _genArrowControl(direction,state){var li=document.createElement('li');var a=document.createElement('a');var i=document.createElement('i');li.classList.add("".concat(direction,"-arrow"));if(state){li.classList.remove('disabled');}else{li.classList.add('disabled');}li.dataset.value=direction;i.classList.add('icon');i.classList.add("icon-arrow-".concat(direction));a.setAttribute('href','#');a.appendChild(i);li.appendChild(a);return li;}/**
   * Create li element for page control.
   * @private
   * @param {string} label - Inner text (page number).
   * @param {boolean} state - True if the page is current.
   * @return {HTMLElement} li - Created 'li' element.
   */},{key:"_genPageControl",value:function _genPageControl(label,state){var li=document.createElement('li');if(state){li.classList.add('active');}li.dataset.value=label;if(label){var a=document.createElement('a');a.href='#';a.innerText=label;li.appendChild(a);}return li;}/**
   * Modify arrow control.
   * @private
   * @param {HTMLElement} element - 'li' element to be updated.
   * @param {string} direction - Left of Right arrow.
   * @param {boolean} state - True if has previous / next page.
   */},{key:"_setArrowControl",value:function _setArrowControl(element,direction,state){var i=element.querySelector('i');element.classList.add("".concat(direction,"-arrow"));if(state){element.classList.remove('disabled');}else{element.classList.add('disabled');}element.dataset.value=direction;i.classList.add('icon');i.classList.add("icon-arrow-".concat(direction));}/**
   * Modify page control.
   * @private
   * @param {HTMLElement} element - 'li' element to be updated.
   * @param {string} label - Inner text (page number).
   * @param {boolean} state - True if the page is current.
   */},{key:"_setPageControl",value:function _setPageControl(element,label,state){if(state){element.classList.add('active');}else{element.classList.remove('active');}element.dataset.value=label;if(label){element.innerHTML='';var a=document.createElement('a');a.href='#';a.innerText=label;element.appendChild(a);}else{element.innerText=label;}}/**
   * Check if the page is current.
   * @private
   * @param {number | string} pageNum - Page number to check.
   * @return {boolean} - True if the page is current.
   */},{key:"_isCurrentPage",value:function _isCurrentPage(pageNum){return parseInt(pageNum,10)===parseInt(this.state.currentPage,10);}},{key:"_onInputChange",value:function _onInputChange(_ref6){var target=_ref6.target;var value=Math.max(this.dom.paginationInput.min,Math.min(target.value,this.dom.paginationInput.max));this.dom.paginationInput.value=value;this.state.pageClicked=value.toString();this._updatePaginationDOM();this.dom.paginationGroup.dispatchEvent(this.events.paginationChangePage);}/**
   * Update pagination controls and component state.
   * @private
   */},{key:"_onSelectChange",value:function _onSelectChange(){var pageChangeFlag=false;var numPages=this.state.numPages;var newNumPages=this._calcNumPages();this._setNumPages(newNumPages);// E.g. show all entries
if(this.state.numPages===1){// Disable arrows
this.state.hasPreviousPage=false;this.state.hasNextPage=false;// Set current page to 1
if(this.state.currentPage!==1){this.state.currentPage=1;pageChangeFlag=true;}}// If current page greater than new number of pages, go to the last possible page
if(this.state.currentPage>this.state.numPages){this.state.pageClicked=this.state.numPages.toString();this._updateCurrentPage();pageChangeFlag=true;}// Redraw if number of pages change
if(newNumPages!==numPages){this._injectPaginationControls();this._addEventListeners();}// Used flag because we need to first dispatch select change event, then page change event.
this.dom.paginationGroup.dispatchEvent(this.events.paginationChangeSelect);if(pageChangeFlag){this.dom.paginationGroup.dispatchEvent(this.events.paginationChangePage);}}/**
   * Update pagination state when number of entries change.
   * @public
   * @param {Number} num - new number of entries.
   */},{key:"update",value:function update(num){this._setNumEntries(num);this._onSelectChange();}}]);return Pagination;}();/**
 * @file Module to create prefilled input component.
 */ /**
 * Class representing a prefilled input.
 */var Prefill=/*#__PURE__*/function(){/**
   * Setup prefilled input properties.
   * @param {HTMLElement} element - input element.
   */function Prefill(element){var _this58=this;_classCallCheck(this,Prefill);this.dom={prefill:element,saved:element.dataset.saved};this.listeners={blur:function blur(evt){return _this58._checkIfChanged(evt);}};}/**
   * Initialize prefilled input.
   * @public
   */_createClass(Prefill,[{key:"init",value:function init(){this._setSavedValue();this._addEventListeners();}/**
   * Destroy prefilled input and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.prefill.addEventListener('blur',this.listeners.blur);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.prefill.removeEventListener('blur',this.listeners.blur);}/**
   * Set saved value.
   * @private
   */},{key:"_setSavedValue",value:function _setSavedValue(){this.dom.prefill.value=this.dom.saved;}/**
   * Check if input was changed.
   * @private
   * @param {Event} evt - Blur event.
   */},{key:"_checkIfChanged",value:function _checkIfChanged(evt){if(evt.target.value!==this.dom.saved){this.dom.prefill.classList.add('changed');}else{this.dom.prefill.classList.remove('changed');}}}]);return Prefill;}();/**
 * @file Module to create Range slider component.
 */ /**
 * Class representing a range slider.
 */var RangeSlider=/*#__PURE__*/function(){/**
   * Setup range slider properties.
   * @param {HTMLElement} input - input field.
   */function RangeSlider(input){var _this59=this;_classCallCheck(this,RangeSlider);// user has passed a CSS3 selector string
if(typeof input==='string'){input=document.querySelector(input);}this.settings={multiple:input.hasAttribute('multiple'),min:Number(input.min)||0,max:Number(input.max)||100,step:Number(input.step)||1,classes:{input:'ranger-input',container:'ranger-container',progress:'ranger-progress',handle:'ranger-handle',tooltip:'ranger-tooltip',track:'ranger-track',multiple:'ranger-multiple',limits:'range-limits',limit:'range-limit'}};this.dom={input:input};this.listeners={down:function down(evt){return _this59._down(evt);},touchstart:function touchstart(evt){return _this59._touchStart(evt);},move:function move(evt){return _this59._move(evt);},up:function up(){return _this59._up();},update:function update(){return _this59.update();},change:function change(){return _this59._change();},reset:function reset(){return _this59._reset();},keyUp:function keyUp(evt){return _this59._keyActions(evt);},keyDown:function keyDown(evt){if(evt.key==='ArrowUp'||evt.key==='ArrowDown'){evt.preventDefault();}}};this.listeners.scroll=this._throttle(this.listeners.update,100);this.listeners.resize=this._throttle(this.listeners.update,50);this.touch=false;this.init();this.onInit();}/**
   * Initialize range slider.
   * @public
   */_createClass(RangeSlider,[{key:"init",value:function init(){if(!this.dom.input.ranger){this.dom.input.ranger=this;if(this.settings.multiple){if(this.dom.input.getAttribute('values')){this.dom.input.values=this.dom.input.getAttribute('values').split(',');this.dom.input.removeAttribute('values');}else{this.dom.input.values=[this.settings.min,this.settings.max];}}else{if(!this.dom.input.value){this.dom.input.value=this.settings.max;}}this._render();}}/**
   * Generate custom range slider markup.
   * @private
   */},{key:"_render",value:function _render(){var o=this.settings;var c=o.classes;var container=this._createElement('div',c.container);var track=this._createElement('div',c.track);var progress=this._createElement('div',c.progress);var handle=this._createElement('div',c.handle);var tooltip=this._createElement('div',c.tooltip);var limitsContainer=this._createElement('div',c.limits);var limits=[this._createElement('div',c.limit),this._createElement('div',c.limit)];track.appendChild(progress);if(o.multiple){handle=[this._createElement('div',c.handle),this._createElement('div',c.handle)];tooltip=[this._createElement('div',c.tooltip),this._createElement('div',c.tooltip),this._createElement('div',c.tooltip)];handle.forEach(function(node,i){node.index=i;node.tabIndex=0;progress.appendChild(node);node.appendChild(tooltip[i]);});progress.appendChild(tooltip[2]);container.classList.add(c.multiple);this.dom.input.tabIndex=-1;handle[0].classList.add('rsh-min');handle[1].classList.add('rsh-max');}else{progress.appendChild(handle);handle.appendChild(tooltip);}limits[0].textContent=this.settings.min;limits[1].textContent=this.settings.max;limits.forEach(function(node,i){limitsContainer.appendChild(limits[i]);});track.appendChild(limitsContainer);this.dom=_objectSpread({},this.dom,{container:container,track:track,progress:progress,handle:handle,tooltip:tooltip});container.appendChild(track);if(o.size){container.style['width']=!isNaN(o.size)?"".concat(o.size,"px"):o.size;}this.dom.input.parentNode.insertBefore(container,this.dom.input);if(this.dom.input.disabled){container.classList.add('disabled');}container.insertBefore(this.dom.input,track);this.dom.input.classList.add(c.input);this._addEventListeners();this.update();}/**
   * Reset range slider value.
   * @private
   */},{key:"_reset",value:function _reset(){this._setValue(this.dom.input.value);// this._onEnd();
}/**
   * Turn position of slider to value.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_setValueFromPosition",value:function _setValueFromPosition(evt){var min=parseFloat(this.settings.min);var max=parseFloat(this.settings.max);var step=parseFloat(this.settings.step);var rect=this.rects;var axis=this.touch?evt.touches[0]['clientX']:evt['clientX'];var pos=axis-this.rects.container['left'];var size=rect.container['width'];// get the position of the cursor over the bar as a percentage
var position=pos/size*100;// work out the value from the position
var value=position*(max-min)/100+min;// apply granularity (step)
value=Math.ceil(value/step)*step;var index;if(this.settings.multiple){index=this.activeHandle.index;switch(index){case 0:if(value>=this.dom.input.values[1]){value=this.dom.input.values[1];}break;case 1:if(value<=this.dom.input.values[0]){value=this.dom.input.values[0];}break;}}/*
     * Only update the value if it's different. This allows the onChange event
     * to be fired only on a step and not all the time.
     */if(this.settings.multiple){if(evt.type==='mousedown'||index===0&&parseFloat(value)!==parseFloat(this.dom.input.values[1])||index===1&&parseFloat(value)!==parseFloat(this.dom.input.values[0])){this._setValue(value,index);}}else{if(evt.type==='mousedown'||parseFloat(value)!==parseFloat(this.dom.input.value)){this._setValue(value,index);}}this.dom.input.focus();}/**
   * Update single slider on change.
   * @private
   */},{key:"_change",value:function _change(){if(!this.settings.multiple){this.update();}}/**
   * Touch action.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_touchStart",value:function _touchStart(evt){// this.nodes.container.removeEventListener("mousedown", this.events.down);
this._down(evt);}/**
   * Mousedown / touchstart action.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_down",value:function _down(evt){evt.preventDefault();// show the tip now so we can get the dimensions later
this.dom.container.classList.add('dragging');this._recalculate();this.activeHandle=this._getHandle(evt);this.activeHandle.classList.add('active');this._setValueFromPosition(evt);if(this.touch){document.addEventListener('touchmove',this.listeners.move,false);document.addEventListener('touchend',this.listeners.up,false);document.addEventListener('touchcancel',this.listeners.up,false);}else{document.addEventListener('mousemove',this.listeners.move,false);document.addEventListener('mouseup',this.listeners.up,false);}}/**
   * Mousemove / touchmove action.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_move",value:function _move(evt){this._setValueFromPosition(evt);this.dom.input.dispatchEvent(new Event('input'));}/**
   * Mouseup / touchend action.
   * @private
   */},{key:"_up",value:function _up(){this.dom.container.classList.remove('dragging');// this._onEnd();
this.activeHandle.classList.remove('active');this.activeHandle=false;document.removeEventListener('mousemove',this.listeners.move);document.removeEventListener('mouseup',this.listeners.up);document.removeEventListener('touchmove',this.listeners.move);document.removeEventListener('touchend',this.listeners.up);document.removeEventListener('touchcancel',this.listeners.up);this.dom.input.dispatchEvent(new Event('change'));}/**
   * Recache the dimensions.
   * @private
   */},{key:"_recalculate",value:function _recalculate(){var handle=[];if(this.settings.multiple){this.dom.handle.forEach(function(node,i){handle[i]=node.getBoundingClientRect();});}else{handle=this.dom.handle.getBoundingClientRect();}this.rects={handle:handle,container:this.dom.container.getBoundingClientRect()};}/**
   * Update range slider.
   * @public
   */},{key:"update",value:function update(){var _this60=this;this._recalculate();this.accuracy=0;// detect float
if(this.dom.input.step.includes('.')){this.accuracy=(this.dom.input.step.split('.')[1]||[]).length;}if(this.settings.multiple){this.dom.input.values.forEach(function(val,i){_this60._setValue(val,i);});}else{this._setValue();}}/**
   * Set new range slider value.
   * @private
   * @param {Number} value - new value.
   * @param {Number} index - slider index.
   */},{key:"_setValue",value:function _setValue(value,index){var nodes=this.dom;var min=parseFloat(this.settings.min);var max=parseFloat(this.settings.max);if(this.settings.multiple&&index===undefined){return false;}if(value===undefined){value=this.dom.input.value;}value=parseFloat(value);value=value.toFixed(this.accuracy);if(value<min){value=min.toFixed(this.accuracy);}else if(value>max){value=max.toFixed(this.accuracy);}// update the value
if(this.settings.multiple){var values=this.dom.input.values;values[index]=value;// update the node so we can get the width / height
nodes.tooltip[index].textContent=value;// check if tips are intersecting...
var intersecting=this._tipsIntersecting();if(intersecting){/*
         * Format the combined tooltip.
         * Only show single value if they both match, otherwise show both seperated by a hyphen
         */nodes.tooltip[2].textContent=values[0]===values[1]?values[0]:"".concat(values[0]," - ").concat(values[1]);}// ... and set the className where appropriate
nodes.container.classList.toggle('combined-tooltip',intersecting);}else{this.dom.input.value=value;nodes.tooltip.textContent=value;}// set bar size
this._setPosition(value,index);this.onChange();}/**
   * Set the bar size / position based on the value.
   * @private
   */},{key:"_setPosition",value:function _setPosition(){var width;if(this.settings.multiple){var start=this._getPosition(this.dom.input.values[0]);var end=this._getPosition(this.dom.input.values[1]);// set the start point of the bar
this.dom.progress.style['left']="".concat(start,"px");width=end-start;}else{width=this._getPosition();}// set the end point of the bar
this.dom.progress.style['width']="".concat(width,"px");}/**
   * Calculate offset of slider value.
   * @private
   */},{key:"_getOffset",value:function _getOffset(){var trackWidth=this.dom.track.offsetWidth;var tooltip=this.dom.tooltip;if(!this.settings.multiple){var tooltipPadding=parseInt(window.getComputedStyle(tooltip,null).getPropertyValue('padding-left'),0);var rightOffset=Math.round(trackWidth-(this._getPosition()+tooltip.offsetWidth/2-tooltipPadding));var leftOffset=Math.round(this._getPosition()-(tooltip.offsetWidth/2-tooltipPadding));this._setOffset(this.dom.tooltip,rightOffset,leftOffset);}else{var inpValues=this.dom.input.values;var rangeSize=this._getPosition(inpValues[1])-this._getPosition(inpValues[0]);var _tooltipPadding=parseInt(window.getComputedStyle(tooltip[2],null).getPropertyValue('padding-left'),0);var rTrOffset=Math.round(trackWidth-(this._getPosition(inpValues[1])+tooltip[1].offsetWidth/2-_tooltipPadding));var lTrOffset=Math.round(this._getPosition(inpValues[0])-(tooltip[0].offsetWidth/2-_tooltipPadding));this._setOffset([tooltip[0],tooltip[1]],rTrOffset,lTrOffset);var mdRightOffset=Math.round(trackWidth-(this._getPosition(inpValues[0])+(tooltip[2].offsetWidth+rangeSize)/2-_tooltipPadding));var mdLeftOffset=Math.round(this._getPosition(inpValues[1])-((tooltip[2].offsetWidth+rangeSize)/2-_tooltipPadding));this._setOffset(tooltip[2],mdRightOffset,mdLeftOffset);}}/**
   * Set the offset to element.
   * @private
   * @param {HTMLElement} target - handle element.
   * @param {Number} rightOffset - offset from right.
   * @param {Number} leftOffset - offset from left.
   */},{key:"_setOffset",value:function _setOffset(target,rightOffset,leftOffset){if(target instanceof Array){if(rightOffset<0||leftOffset<0){if(rightOffset<0){target[1].style['margin-right']=Math.abs(rightOffset)+'px';}if(leftOffset<0){target[0].style['margin-right']='-'+Math.abs(leftOffset)+'px';}}else{target[0].style['margin-right']=0;target[1].style['margin-right']=0;}}else{if(rightOffset<0||leftOffset<0){if(rightOffset<0){target.style['margin-right']=Math.abs(rightOffset)+'px';}if(leftOffset<0){target.style['margin-right']='-'+Math.abs(leftOffset)+'px';}}else{target.style['margin-right']=0;}}}/**
   * Get the position of handle from the value.
   * @private
   * @param {Number} value - current input value.
   * @return {Number} - position of handle element.
   */},{key:"_getPosition",value:function _getPosition(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.dom.input.value;var min=parseFloat(this.settings.min);var max=parseFloat(this.settings.max);return(value-min)/(max-min)*this.rects.container['width'];}/**
   * Check whether the tooltips are colliding.
   * @private
   * @return {Boolean} - Tips intersecting or not.
   */},{key:"_tipsIntersecting",value:function _tipsIntersecting(){var nodes=this.dom.tooltip;var a=nodes[0].getBoundingClientRect();var b=nodes[1].getBoundingClientRect();return!(a.right<b.left||a.left>b.right||a.bottom<b.top||a.top>b.bottom);}/**
   * Get the correct handle on mousedown / touchstart.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_getHandle",value:function _getHandle(evt){if(!this.settings.multiple){return this.dom.handle;}var r=this.rects;var distA=Math.abs(evt['clientX']-r.handle[0]['left']);var distB=Math.abs(evt['clientX']-(r.handle[1]['left']+2));var handle=evt.target.closest(".".concat(this.settings.classes.handle));if(handle){return handle;}else{if(distA>distB){return this.dom.handle[1];}else{return this.dom.handle[0];}}}/**
   * Destroy range slider and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){if(this.dom.input.ranger){// remove all event listeners
this._removeEventListeners();// remove the className from the input
this.dom.input.classList.remove(this.settings.classes.input);// kill all nodes
this.dom.container.parentNode.replaceChild(this.dom.input,this.dom.container);// remove the reference from the input
delete this.dom.input.ranger;}}/**
   * Callback on change.
   * @public
   */},{key:"onInit",value:function onInit(){if(this._isFunction(this.settings.onInit)){this.settings.onInit.call(this,this.dom.input.value);}}/**
   * Callback on change.
   * @public
   */},{key:"onChange",value:function onChange(){if(this._isFunction(this.settings.onChange)){this.settings.onChange.call(this,this.dom.input.value);}this._getOffset();}/**
   * Callback on end.
   *_onEnd() {
   * if (this._isFunction(this.settings.onEnd)) {
   *  this.settings.onEnd.call(this, this.dom.input.value);
   * }
   *}
   */ /**
   * Slider keyboard actions
   * @param {Event} evt - Field event
   * @private
   */},{key:"_keyActions",value:function _keyActions(evt){if(document.activeElement===this.dom.input){if(!this.settings.multiple){this.update();}}else{var currMin=parseInt(this.dom.input.values[0],10);var currMax=parseInt(this.dom.input.values[1],10);if(document.activeElement.classList.contains('rsh-min')){if(evt.key==='ArrowRight'||evt.key==='ArrowUp'){if(currMin<currMax){this.dom.input.values[0]=currMin+this.settings.step;this.update();}}if(evt.key==='ArrowLeft'||evt.key==='ArrowDown'){if(currMin>=this.settings.min){this.dom.input.values[0]=currMin-this.settings.step;this.update();}}}if(document.activeElement.classList.contains('rsh-max')){if(evt.key==='ArrowRight'||evt.key==='ArrowUp'){if(currMax<=this.settings.max){this.dom.input.values[1]=currMax+this.settings.step;this.update();}}if(evt.key==='ArrowLeft'||evt.key==='ArrowDown'){if(currMax>currMin){this.dom.input.values[1]=currMax-this.settings.step;this.update();}}}}}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this61=this;// throttle the scroll callback for performance
document.addEventListener('scroll',this.listeners.scroll,false);if(this.settings.multiple){this.dom.handle.forEach(function(node){node.addEventListener('keydown',_this61.listeners.keyDown,false);node.addEventListener('keyup',_this61.listeners.keyUp,false);});}else{this.dom.input.addEventListener('keyup',this.listeners.keyUp,false);}// throttle the resize callback for performance
window.addEventListener('resize',this.listeners.resize,false);// detect native change event
this.dom.input.addEventListener('change',this.listeners.change,false);if(this.touch){this.dom.container.addEventListener('touchstart',this.listeners.touchstart,false);}else{this.dom.container.addEventListener('mousedown',this.listeners.down);}// detect form reset
if(this.dom.input.form){this.dom.input.form.addEventListener('reset',this.listeners.reset,false);}}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this62=this;if(this.touch){this.dom.container.removeEventListener('touchstart',this.listeners.touchstart);}else{this.dom.container.removeEventListener('mousedown',this.listeners.down);}if(this.settings.multiple){this.dom.handle.forEach(function(node){node.removeEventListener('keyup',_this62.listeners.keyUp,false);});}else{this.dom.input.removeEventListener('keyup',this.listeners.keyUp,false);}// remove scroll listener
document.removeEventListener('scroll',this.listeners.scroll);// remove resize listener
window.removeEventListener('resize',this.listeners.resize);// remove input listener
this.dom.input.removeEventListener('change',this.listeners.change);// remove form listener
if(this.dom.input.form){this.dom.input.form.removeEventListener('reset',this.listeners.reset);}this.listeners=null;}/**
   * Create DOM element helper.
   * @private
   * @param {String} type - html element type.
   * @param {Object} obj - object.
   * @return {HTMLElement} el - element helper.
   */},{key:"_createElement",value:function _createElement(type,obj){var el=document.createElement(type);if(typeof obj==='string'){el.classList.add(obj);}else if(obj===Object(obj)){for(var prop in obj){if(prop in el){el[prop]=obj[prop];}else{el.setAttribute(el[prop],obj[prop]);}}}return el;}/**
   * Check if function is really a function.
   * @private
   * @param {Function} func - function.
   * @return {Boolean} - true or false.
   */},{key:"_isFunction",value:function _isFunction(func){return func&&typeof func==='function';}/**
   * Enhance slider performance.
   * @private
   * @param {Function} fn - function.
   * @param {Number} limit - limit.
   * @param {Object} context - object context.
   */},{key:"_throttle",value:function _throttle(fn,limit,context){var wait;return function(){context=context||this;if(!wait){fn.apply(context,arguments);wait=true;return setTimeout(function(){wait=false;},limit);}};}}]);return RangeSlider;}();/**
 * @file Module to create Sign In page.
 */ /**
 * Class representing a sign in.
 */var SignIn=/*#__PURE__*/function(){/**
   * Setup SignIn properties.
   * @param {HTMLElement} element - The DOM element of the page.
   * @param {URL} loggedInUrl - page URL.
   */function SignIn(element){var _this63=this;var loggedInUrl=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'/';_classCallCheck(this,SignIn);this.dom={signin:element,reveal:element.querySelector('.reveal'),inputUsername:element.querySelector('#username'),inputPassword:element.querySelector('#password'),form:element.querySelector('form'),error:element.querySelector('.error'),welcome:element.querySelector('.welcome'),loggedInUrl:loggedInUrl};this.listeners={click:function click(){return _this63._revealPassword();},blur:function blur(evt){return _this63._validateFieldOnBlur(evt);},submit:function submit(evt){return _this63._validateFormOnSubmit(evt);},focus:function focus(evt){return _this63._labelAnimation(evt);},inputsBlur:function inputsBlur(evt){return _this63._checkEmptyField(evt);}};this.messages={valueMissing:'Please fill out this field.',typeMismatch:{email:'Please use a valid email.',fallback:'Please use the correct input type.'},patternMismatch:{signum:'Please use a valid signum.',fallback:'Please match the requested format.'},fallback:'Please enter a correct value for this field.'};this.props={validFields:[]};}/**
   * Initialize SignIn page.
   * @public
   */_createClass(SignIn,[{key:"init",value:function init(){this._removeNativeValidation();this._addEventListeners();// this.showGenericError();
}/**
   * Destroy SignIn page and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this64=this;this.dom.reveal.addEventListener('click',this.listeners.click);this.dom.signin.addEventListener('blur',this.listeners.blur);this.dom.signin.addEventListener('submit',this.listeners.submit);var inputs=[this.dom.inputUsername,this.dom.inputPassword];inputs.forEach(function(input){input.addEventListener('focus',_this64.listeners.focus);});inputs.forEach(function(input){input.addEventListener('blur',_this64.listeners.inputsBlur);});}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this65=this;this.dom.reveal.removeEventListener('click',this.listeners.click);this.dom.signin.removeEventListener('blur',this.listeners.blur);this.dom.signin.removeEventListener('submit',this.listeners.submit);var inputs=[this.dom.inputUsername,this.dom.inputPassword];inputs.forEach(function(input){input.removeEventListener('focus',_this65.listeners.focus);});inputs.forEach(function(input){input.removeEventListener('blur',_this65.listeners.inputsBlur);});}/**
   * Show password.
   * @private
   */},{key:"_revealPassword",value:function _revealPassword(){var icon=this.dom.signin.querySelector('.reveal .icon');var message=this.dom.reveal.querySelector('.message');if(this.dom.inputPassword.type==='password'){this.dom.inputPassword.type='text';icon.classList.remove('icon-eye');icon.classList.add('icon-eye-solid');message.innerText='Hide password';}else{this.dom.inputPassword.type='password';icon.classList.remove('icon-eye-solid');icon.classList.add('icon-eye');message.innerText='Show password';}}/**
   * Remove native input validation.
   * @private
   */},{key:"_removeNativeValidation",value:function _removeNativeValidation(){this.dom.form.setAttribute('novalidate',true);}/**
   * Validate when user leaves an input field.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_validateFieldOnBlur",value:function _validateFieldOnBlur(evt){var inputField=evt.target;var field=inputField.parentNode;var hint=field.querySelector('.hint');if(field.classList.contains('validate')){var error=this._getErrorType(inputField);if(error&&error!==this.messages.valueMissing){hint.innerText=error;inputField.classList.add('invalid');}else{inputField.classList.remove('invalid');inputField.classList.add('hidden');}}}/**
   * Validate when user submits the form.
   * @private
   * @param {Event} evt - Field event.
   */},{key:"_validateFormOnSubmit",value:function _validateFormOnSubmit(evt){var _this66=this;var formFields=evt.target.querySelectorAll('.field');Array.from(formFields).forEach(function(field,i){var inputField=field.querySelector('input');var hint=field.querySelector('.hint');var error=_this66._getErrorType(inputField);if(error){hint.innerText=error;inputField.classList.add('invalid');evt.preventDefault();_this66.props.validFields[i]=false;}else{inputField.classList.remove('invalid');inputField.classList.add('hidden');_this66.props.validFields[i]=true;}});var allFieldsValid=this.props.validFields.every(function(state){return state===true;});// This is just for demo purposes
if(allFieldsValid){this._successSignIn();}}/**
   * Get error type.
   * @private
   * @param {HTMLInputElement} field - input field.
   * @return {String} proper error message.
   */},{key:"_getErrorType",value:function _getErrorType(field){if(field.disabled||field.type==='file'||field.type==='reset'||field.type==='submit'||field.type==='button'){return;}var validity=field.validity;if(validity.valid)return;if(validity.valueMissing)return this.messages.valueMissing;if(validity.typeMismatch){if(field.type==='email')return this.messages.typeMismatch.email;return this.messages.typeMismatch.fallback;}if(validity.patternMismatch){if(field.classList.contains('signum'))return this.messages.patternMismatch.signum;return this.messages.patternMismatch.fallback;}return this.messages.fallback;}/**
   * Hide form on successful sign in and show preloader.
   * @private
   */},{key:"_successSignIn",value:function _successSignIn(){var _this67=this;this._hideSignInForm();this._showWelcomeScreen();// This is just for demo purposes
setTimeout(function(){window.location.href=_this67.dom.loggedInUrl;},3000);}/**
   * Show welcome screen.
   * @private
   */},{key:"_showWelcomeScreen",value:function _showWelcomeScreen(){this.dom.welcome.classList.remove('hidden');}/**
   * Hide form.
   * @private
   */},{key:"_hideSignInForm",value:function _hideSignInForm(){this.dom.form.classList.add('hidden');}/**
   * Add filled class.
   * @private
   */},{key:"_labelAnimation",value:function _labelAnimation(evt){evt.target.classList.add('field-filled');}/**
   * Remove filled class.
   * @private
   */},{key:"_checkEmptyField",value:function _checkEmptyField(evt){var target=evt.target;if(target.value.length===0){target.classList.remove('field-filled');}}}]);return SignIn;}();/**
 * @file Module to create Spinner component.
 */ /**
 * Class representing a spinner.
 */var Spinner=/*#__PURE__*/function(){/**
   * Setup spinner properties.
   * @param {HTMLElement} element - The DOM element of spinner.
   */function Spinner(element){var _this68=this;_classCallCheck(this,Spinner);this.dom={spinner:element,controls:element.querySelectorAll('.controls > .icon'),max:element.querySelector('input').getAttribute('max')||Number.MAX_VALUE,min:element.querySelector('input').getAttribute('min')||-Number.MAX_VALUE,step:element.querySelector('input').getAttribute('step')||1,input:element.querySelector('input')};this.type=element.dataset.type;this.listeners={increaseValue:function increaseValue(){return _this68._increaseValue();},decreaseValue:function decreaseValue(){return _this68._decreaseValue();},setCorrectFormat:function setCorrectFormat(){return _this68._setCorrectFormat();},controlsKeyDown:function controlsKeyDown(evt){return _this68._keyActions(evt);}};}/**
   * Initialize spinner.
   * @public
   */_createClass(Spinner,[{key:"init",value:function init(){this._setCorrectFormat();this._addEventListeners();}/**
   * Destroy spinner and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.controls[1].addEventListener('click',this.listeners.increaseValue);this.dom.controls[0].addEventListener('click',this.listeners.decreaseValue);this.dom.input.addEventListener('change',this.listeners.setCorrectFormat);// this.dom.input.addEventListener('keyup', this.listeners.setCorrectFormat);
this.dom.controls[0].addEventListener('keydown',this.listeners.controlsKeyDown);this.dom.controls[1].addEventListener('keydown',this.listeners.controlsKeyDown);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.controls[1].removeEventListener('click',this.listeners.increaseValue);this.dom.controls[0].removeEventListener('click',this.listeners.decreaseValue);this.dom.input.removeEventListener('change',this.listeners.setCorrectFormat);// this.dom.input.removeEventListener('keyup', this.listeners.setCorrectFormat);
this.dom.controls[0].removeEventListener('keydown',this.listeners.controlsKeyDown);this.dom.controls[1].removeEventListener('keydown',this.listeners.controlsKeyDown);}/**
   * Set correct state.
   * @private
   */},{key:"_setCorrectState",value:function _setCorrectState(){var input=this.dom.spinner.querySelector('input');this.dom.controls[0].classList.remove('disabled');this.dom.controls[1].classList.remove('disabled');if(parseInt(input.value,10)===parseInt(this.dom.max,10)){this.dom.controls[1].classList.add('disabled');}if(parseInt(input.value,10)===parseInt(this.dom.min,10)){this.dom.controls[0].classList.add('disabled');}}/**
   * Set correct format.
   * @private
   */},{key:"_setCorrectFormat",value:function _setCorrectFormat(){var input=this.dom.spinner.querySelector('input');if(!isNaN(parseInt(input.value,10))){if(parseInt(input.value,10)>this.dom.max){input.value=this.dom.max;}if(parseInt(input.value,10)<this.dom.min){input.value=this.dom.min;}}else{// not a number
input.value=this.dom.min;}this._setCorrectState();}/**
   * Increase value.
   * @private
   */},{key:"_increaseValue",value:function _increaseValue(){var input=this.dom.spinner.querySelector('input');if(parseInt(input.value,10)<this.dom.max){input.value=parseInt(input.value,10)+parseInt(this.dom.step,10);}this._setCorrectFormat();}/**
   * Decrease value.
   * @private
   */},{key:"_decreaseValue",value:function _decreaseValue(){var input=this.dom.spinner.querySelector('input');if(parseInt(input.value,10)>this.dom.min){input.value=parseInt(input.value,10)-parseInt(this.dom.step,10);}this._setCorrectFormat();}/**
   * Key actions for controls
   * @private
   * @param {Event} evt - element event
   */},{key:"_keyActions",value:function _keyActions(evt){if(evt.key===' '){evt.preventDefault();var control=evt.target;if(control.classList.contains('icon-chevron-down')){this._decreaseValue();}else if(control.classList.contains('icon-chevron-up')){this._increaseValue();}}}/**
   * Enable input and controls
   * @private
   */},{key:"enable",value:function enable(){var input=this.dom.input;input.disabled=false;Array.from(this.dom.controls).forEach(function(control){control.classList.remove('disabled');control.tabIndex=0;});}/**
   * Disable input and controls
   * @private
   */},{key:"disable",value:function disable(){var input=this.dom.input;input.disabled=true;Array.from(this.dom.controls).forEach(function(control){control.classList.add('disabled');control.tabIndex=-1;});}}]);return Spinner;}();/**
 * @file Module to create Tab component.
 */ /**
 * Class representing a tab.
 */var Tab=/*#__PURE__*/function(){/**
   * Setup tab properties.
   * @param {Object} data - Tab data.
   * @param {HTMLElement} data.title - Tab title.
   * @param {HTMLElement} data.content - Tab content.
   */function Tab(data){_classCallCheck(this,Tab);this.dom={title:data.title,content:data.content};}/**
   * Show tab content.
   * @public
   */_createClass(Tab,[{key:"showContent",value:function showContent(){this.dom.title.classList.add('selected');this.dom.content.classList.add('selected');}/**
   * Hide tab content.
   * @public
   */},{key:"hideContent",value:function hideContent(){this.dom.title.classList.remove('selected');this.dom.content.classList.remove('selected');}}]);return Tab;}();/**
 * @file Module to create Tab Group component.
 * @requires Tab
 */ /**
 * Class representing a tab group.
 */var TabGroup=/*#__PURE__*/function(){/**
   * Setup tab group properties.
   * @param {HTMLElement} element - The DOM element of the page.
   */function TabGroup(element){_classCallCheck(this,TabGroup);this.dom={tabGroup:element,titles:element.querySelectorAll('.titles > .title'),contents:element.querySelectorAll('.contents > .content')};this.tabs=[];this.listeners={tabs:[]};}/**
   * Initialize tab group.
   * @public
   */_createClass(TabGroup,[{key:"init",value:function init(){this._initTabs();this._addEventListeners();}/**
   * Destroy tab group and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this69=this;Array.from(this.tabs).forEach(function(tab,index){var listener=function listener(){_this69._hideAll();tab.showContent();};_this69.listeners.tabs[index]=listener;tab.dom.title.addEventListener('click',listener);tab.dom.title.addEventListener('keyup',function(evt){if(evt.key==='Enter'){listener.call();}});});}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this70=this;Array.from(this.tabs).forEach(function(tab,index){tab.dom.title.removeEventListener('click',_this70.listeners.tabs[index]);tab.dom.title.removeEventListener('keyup',_this70.listeners.tabs[index]);});this.listeners.tabs=[];}/**
   * Hide all tabs.
   * @private
   */},{key:"_hideAll",value:function _hideAll(){Array.from(this.tabs).forEach(function(tab){return tab.hideContent();});}/**
   * Initialize tabs.
   * @private
   */},{key:"_initTabs",value:function _initTabs(){for(var i=0;i<this.dom.titles.length;i+=1){var title=this.dom.titles[i];var content=this.dom.contents[i];var t=new Tab({title:title,content:content});if(title.classList.contains('selected')){t.showContent();}this.tabs.push(t);}}}]);return TabGroup;}();/**
 * @deprecated since version 3.7.0
 */ /**
 * @file Module to create selectable table component.
 */ /**
 * Class representing a selectable table.
 */var TableSelectable=/*#__PURE__*/function(){/**
   * Setup table properties.
   * @param {HTMLElement} element - The DOM element of the table.
   */function TableSelectable(element){var _this71=this;_classCallCheck(this,TableSelectable);this.dom={table:element,rows:element.querySelectorAll('tr'),bodyRows:element.querySelectorAll('tbody tr'),masterCheckbox:element.querySelector('thead input[type="checkbox"]')};this.listeners={rows:[],clickBodyRow:function clickBodyRow(evt){evt.preventDefault();_this71._toggleRowCheckbox(evt);_this71._setMasterCheckboxState();},clickMasterCheckbox:function clickMasterCheckbox(){_this71._toggleAllCheckboxes();_this71._setMasterCheckboxState();}};this.settings={selectRowOnFirstTDClick:true};this.events={tableRowsSelected:new CustomEvent('tableRowsSelected',{detail:{body:undefined,selected:undefined}})};}/**
   * Initialize table.
   * @public
   */_createClass(TableSelectable,[{key:"init",value:function init(){this._setMasterCheckboxState();this._addEventListeners();}/**
   * Destroy SignIn page and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this72=this;if(this._isSelectable()){this.dom.masterCheckbox.addEventListener('click',this.listeners.clickMasterCheckbox);Array.from(this.dom.bodyRows).forEach(function(bodyRow){if(_this72.settings.selectRowOnFirstTDClick){var checkboxTD=bodyRow.querySelectorAll('td')[0];checkboxTD.addEventListener('click',_this72.listeners.clickBodyRow,false);}else{bodyRow.addEventListener('click',_this72.listeners.clickBodyRow,false);}});}}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this73=this;if(this._isSelectable()){this.listeners.rows=[];this.dom.masterCheckbox.removeEventListener('click',this.listeners.clickMasterCheckbox);Array.from(this.dom.bodyRows).forEach(function(bodyRow){if(_this73.settings.selectRowOnFirstTDClick){var checkboxTD=bodyRow.querySelectorAll('td')[0];checkboxTD.removeEventListener('click',_this73.listeners.clickBodyRow,false);}else{bodyRow.removeEventListener('click',_this73.listeners.clickBodyRow,false);}});}}/**
   * Toggle row checkbox.
   * @private
   * @param {Event} evt - Click event.
   * @param {HTMLElement} evt.target - Clicked element (tr or td with checkbox).
   */},{key:"_toggleRowCheckbox",value:function _toggleRowCheckbox(_ref7){var target=_ref7.target;var row=target.closest('tr');if(row.classList.contains('selected')){this._unselectRow(row);}else{this._selectRow(row);}}/**
   * Toggle all checkboxes.
   * @private
   */},{key:"_toggleAllCheckboxes",value:function _toggleAllCheckboxes(){var _this74=this;Array.from(this.dom.bodyRows).forEach(function(brow){if(_this74.dom.masterCheckbox.checked){_this74._selectRow(brow);}else{_this74._unselectRow(brow);}});}/**
   * Set master checkbox state.
   * @private
   */},{key:"_setMasterCheckboxState",value:function _setMasterCheckboxState(){var numBodyRows=this._getNumberOfRows();var numCheckedRows=this._getNumberOfSelectedRows();this.dom.masterCheckbox.checked=numCheckedRows>0;this.dom.masterCheckbox.indeterminate=numCheckedRows>0&&numCheckedRows<numBodyRows;}/**
   * Get number of selected rows.
   * @private
   */},{key:"_getNumberOfSelectedRows",value:function _getNumberOfSelectedRows(){var n=this.dom.table.querySelectorAll('tbody input[type="checkbox"]:checked').length;this.events.tableRowsSelected.detail.body=this._getNumberOfRows();this.events.tableRowsSelected.detail.selected=n;document.dispatchEvent(this.events.tableRowsSelected);return n;}/**
   * Get total number of rows.
   * @private
   */},{key:"_getNumberOfRows",value:function _getNumberOfRows(){return Array.from(this.dom.bodyRows).length;}/**
   * Select row.
   * @private
   * @param {HTMLElement} row - table row.
   */},{key:"_selectRow",value:function _selectRow(row){var checkbox=row.querySelector('input[type="checkbox"]');row.classList.add('selected');checkbox.checked=true;}/**
   * Unselect row.
   * @private
   * @param {HTMLElement} row - table row.
   */},{key:"_unselectRow",value:function _unselectRow(row){var checkbox=row.querySelector('input[type="checkbox"]');row.classList.remove('selected');checkbox.checked=false;}/**
   * Check if table is selectable.
   * @private
   * @return {Boolean} - Returns true if the table contains the 'selectable' class.
   */},{key:"_isSelectable",value:function _isSelectable(){return!!this.dom.table.classList.contains('selectable');}}]);return TableSelectable;}();/**
 * @file Module to create Time picker component.
 */ /**
 * Class representing a time picker.
 */var TimePicker=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function TimePicker(element){_classCallCheck(this,TimePicker);this.settings={type:element.getAttribute('type')||'combined',format:Number(element.getAttribute('format'))||24,min:element.getAttribute('min'),max:element.getAttribute('max'),disable:element.getAttribute('disable')?element.getAttribute('disable').split(', '):false,step:Number(element.getAttribute('step'))||5,classes:{inputType:'input-type',separator:'tp-col-sep',hhInput:'tp-hh-input',mmInput:'tp-mm-input',intervalSelect:'tp-interval-select',singleSelect:'tp-single-select',smartSelect:'tp-smart-select',hoursSelect:'tp-hours-select',minutesSelect:'tp-minutes-select'}};this.dom={element:element};this.value='';}/**
   * Create component.
   * @public
   */_createClass(TimePicker,[{key:"init",value:function init(){this.render();this.checkDisabledState();this.labelAction();this._addEventListeners();}},{key:"render",value:function render(){var o=this.settings;var c=o.classes;var colSep=this.createElement('span',c.separator);var hhInput=this.createElement('input',c.hhInput);var mmInput=this.createElement('input',c.mmInput);var intervalSelect=this.createElement('div',c.intervalSelect);// check and correct time format
o.format=o.format!==24&&o.format!==12?24:o.format;// for input type
colSep.textContent=':';hhInput.type='text';hhInput.placeholder='HH';mmInput.type='text';mmInput.placeholder='MM';// input type AM-PM interval select
intervalSelect.classList.add('tp-select','closed');intervalSelect.innerHTML="\n      <button type=\"button\" class=\"btn tp-select-current\">AM</button>\n      <div class=\"tp-select-options\" hlindex=\"-1\">\n        <div class=\"tp-select-option active\">AM</div>\n        <div class=\"tp-select-option\">PM</div>\n      </div>\n    ";// build markup
if(o.type==='inputs'){this.dom.element.classList.add(c.inputType);this.dom.element.append(hhInput,colSep,mmInput);if(o.format===12){this.dom.element.appendChild(intervalSelect);}}else if(o.type==='combined'){var singleSelect=this.createElement('div',c.singleSelect);singleSelect.classList.add('tp-select','time-format-'+o.format,'closed');this.dom.element.classList.add(c.singleSelect);var timeList=[];if(o.format===12){o.min=!o.min?'01AM':o.min;o.max=!o.max?'12PM':o.max;singleSelect.innerHTML="\n          <button type=\"button\" class=\"btn tp-select-current\">HH:MM "+this.getInterval(o.min)+"</button>\n          <div class=\"tp-select-options\" hlindex=\"-1\"></div>\n        ";timeList.push('<div class="tp-select-option">HH:MM '+this.getInterval(o.min)+'</div>');if(this.getInterval(o.min)===this.getInterval(o.max)){this.printTimeOptions(timeList,Number(o.min.slice(0,2)),Number(o.max.slice(0,2)),o.step,this.getInterval(o.min));}else{this.printTimeOptions(timeList,Number(o.min.slice(0,2)),12,o.step,this.getInterval(o.min));this.printTimeOptions(timeList,1,Number(o.max.slice(0,2)),o.step,this.getInterval(o.max));}}else{o.min=!o.min?'00':o.min;o.max=!o.max?'23':o.max;singleSelect.innerHTML="\n          <button type=\"button\" class=\"btn tp-select-current\">HH:MM</button>\n          <div class=\"tp-select-options\" hlindex=\"-1\"></div>\n        ";timeList.push('<div class="tp-select-option">HH:MM</div>');this.printTimeOptions(timeList,Number(o.min),Number(o.max),o.step);}singleSelect.querySelector('.tp-select-options').innerHTML=timeList.join('');this.dom.element.appendChild(singleSelect);}else if(o.type==='separate'){// select for hours
var hoursSelect=this.createElement('div',c.hoursSelect);var hoursList=[];hoursSelect.classList.add('tp-select','closed');hoursSelect.innerHTML="\n        <input class=\"tp-select-current "+c.hhInput+"\" placeholder=\"HH\">\n        <div class=\"tp-select-options\" hlindex=\"-1\"></div>\n      ";if(o.format===12){o.min=!o.min?1:o.min;o.max=!o.max?12:o.max;o.max=o.max>12?12:o.max;}else{o.min=!o.min?0:o.min;o.max=!o.max?23:o.max;o.max=o.max>23?23:o.max;}for(var i=Number(o.min);i<=Number(o.max);i+=1){hoursList.push('<div class="tp-select-option">'+this.leadingZeroFormat(i,2)+'</div>');}hoursSelect.querySelector('.tp-select-options').innerHTML=hoursList.join('');this.settings.hoursList=hoursSelect.querySelectorAll('.tp-select-option');this.settings.hoursOldVal='';// select for minutes
var minutesSelect=this.createElement('div',c.minutesSelect);var minutesList=[];var minutes=0;minutesSelect.classList.add('tp-select','closed');minutesSelect.innerHTML="\n        <input class=\"tp-select-current "+c.mmInput+"\" placeholder=\"MM\">\n        <div class=\"tp-select-options\" hlindex=\"-1\"></div>\n      ";for(var _i5=0;_i5<60;_i5+=o.step){minutesList.push('<div class="tp-select-option">'+this.leadingZeroFormat(minutes,2)+'</div>');minutes+=o.step;}minutesSelect.querySelector('.tp-select-options').innerHTML=minutesList.join('');this.settings.minutesList=minutesSelect.querySelectorAll('.tp-select-option');this.settings.minutesOldVal='';// collect elements together
this.dom.element.append(hoursSelect,colSep,minutesSelect);if(o.format===12){this.dom.element.appendChild(intervalSelect);}}else{this.dom.element.classList.add('invalid-type');this.dom.element.innerText='Invalid type';}}},{key:"checkDisabledState",value:function checkDisabledState(){var inputs=this.dom.element.querySelectorAll('input');var buttons=this.dom.element.querySelectorAll('button');if(this.dom.element.hasAttribute('disabled')){this.dom.element.classList.add('disabled');this.dom.element.removeAttribute('disabled');// prevent receiving a focus when the user uses the Tab key
for(var i=0;i<inputs.length;i+=1){inputs[i].tabIndex=-1;}for(var _i6=0;_i6<buttons.length;_i6+=1){buttons[_i6].tabIndex=-1;}}else{this.dom.element.classList.remove('disabled');for(var _i7=0;_i7<inputs.length;_i7+=1){inputs[_i7].removeAttribute('tabIndex');}for(var _i8=0;_i8<buttons.length;_i8+=1){buttons[_i8].removeAttribute('tabIndex');}}}},{key:"getInterval",value:function getInterval(number){number=number.slice(2).toUpperCase();return number;}},{key:"printTimeOptions",value:function printTimeOptions(arr,min,max,step,tInt){var _this75=this;tInt=tInt?' '+tInt:'';for(var i=min;i<max;i+=1){var counter=0;var _loop=function _loop(z){var timeItem=_this75.leadingZeroFormat(counter,2);var timeString=_this75.leadingZeroFormat(i,2)+':'+timeItem+tInt;var disabledValues=_this75.settings.disable;if(disabledValues){var disabledClass=disabledValues.find(function(val){return val.indexOf(timeString)>-1;})?'disabled':'';arr.push('<div class="tp-select-option '+disabledClass+'">'+timeString+'</div>');}else{arr.push('<div class="tp-select-option">'+timeString+'</div>');}counter+=step;};for(var z=0;z<60;z+=step){_loop(z);}}}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this76=this;var selects=this.dom.element.querySelectorAll('.tp-select');var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{var _loop2=function _loop2(){var select=_step4.value;select.querySelector('.tp-select-current').addEventListener('click',function(event){return _this76.toggleSelectOpt(event.target.parentElement);});if(select.querySelector('.tp-select-current').tagName==='INPUT'){select.querySelector('.tp-select-current').addEventListener('input',function(){if(!select.classList.contains('open')){_this76.toggleSelectOpt(select);}_this76.filterOptions(select);_this76.setComponentValue();});}select.querySelector('.tp-select-options').addEventListener('click',function(evt){var target=evt.target;if(target.classList.contains('tp-select-option')&&!target.classList.contains('disabled')&&!target.classList.contains('no-results')){_this76.setSelectValue(select,target);_this76.setComponentValue();}});select.addEventListener('keydown',function(event){if(event.key==='ArrowUp'||event.key==='ArrowDown'||event.key==='Enter'){event.preventDefault();}if(event.key===' '){event.preventDefault();}});select.addEventListener('keyup',function(event){return _this76.arrowKeyActions(event,select);});_this76.ifClickedOutside(function(){return _this76.hideSelectOpt(select);},'add',select);};for(var _iterator4=selects[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){_loop2();}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return!=null){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}switch(this.settings.type){case'inputs':this.dom.element.querySelector('.tp-hh-input').addEventListener('input',function(event){event.target.value=_this76.validateInputValue(event.target);_this76.setComponentValue();});this.dom.element.querySelector('.tp-mm-input').addEventListener('input',function(event){event.target.value=_this76.validateInputValue(event.target);_this76.setComponentValue();});break;}if(document.querySelector('.appcontent')){document.querySelector('.appcontent').addEventListener('scroll',function(){var openSelects=_this76.dom.element.querySelectorAll('.tp-select.open');var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=openSelects[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var select=_step5.value;_this76.optionsListPosition(select);}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return!=null){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}});}}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this77=this;var selects=this.dom.element.querySelectorAll('.tp-select');var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{var _loop3=function _loop3(){var select=_step6.value;select.querySelector('.tp-select-current').removeEventListener('click',function(event){return _this77.toggleSelectOpt(event.target.parentElement);});if(select.querySelector('.tp-select-current').tagName==='INPUT'){select.querySelector('.tp-select-current').removeEventListener('input',function(){if(!select.classList.contains('open')){_this77.toggleSelectOpt(select);}_this77.filterOptions(select);_this77.setComponentValue();});}select.querySelector('.tp-select-options').removeEventListener('click',function(event){if(!event.target.classList.contains('no-results')){_this77.setSelectValue(select,event.target);_this77.setComponentValue();}});select.removeEventListener('keydown',function(event){if(event.key==='ArrowUp'||event.key==='ArrowDown'||event.key==='Enter'){event.preventDefault();}if(event.key===' '){event.preventDefault();}});select.removeEventListener('keyup',function(event){return _this77.arrowKeyActions(event,select);});_this77.ifClickedOutside(function(){return _this77.hideSelectOpt(select);},'add',select);};for(var _iterator6=selects[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){_loop3();}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return!=null){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}switch(this.settings.type){case'inputs':this.dom.element.querySelector('.tp-hh-input').removeEventListener('keyup',function(){_this77.setComponentValue();});this.dom.element.querySelector('.tp-mm-input').removeEventListener('keyup',function(){_this77.setComponentValue();});break;}if(document.querySelector('.appcontent')){document.querySelector('.appcontent').removeEventListener('scroll',function(){var openSelects=_this77.dom.element.querySelectorAll('.tp-select.open');var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=openSelects[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var select=_step7.value;_this77.optionsListPosition(select);}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return!=null){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}});}}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}},{key:"toggleSelectOpt",value:function toggleSelectOpt(select){this.highlightRemove(select);select.classList.toggle('open');select.classList.toggle('closed');this.optionsListPosition(select);}},{key:"optionsListPosition",value:function optionsListPosition(select){var bottomOffset=window.innerHeight-select.getBoundingClientRect().height;bottomOffset=bottomOffset-select.getBoundingClientRect().top;var listHeight=select.querySelector('.tp-select-options').offsetHeight+4;if(bottomOffset<listHeight&&select.classList.contains('open')){select.classList.add('open-top');}else{select.classList.remove('open-top');}}},{key:"hideSelectOpt",value:function hideSelectOpt(select){this.highlightRemove(select);select.classList.remove('open');select.classList.add('closed');}},{key:"labelAction",value:function labelAction(){var _this78=this;var el=this.dom.element;var prevSib=el.previousElementSibling;if(prevSib&&prevSib.tagName==='LABEL'){if(prevSib.getAttribute('for')===el.id){prevSib.addEventListener('click',function(){if(!_this78.dom.element.classList.contains('disabled')){if(_this78.dom.element.firstChild.classList.contains('tp-select')){_this78.dom.element.querySelector('.tp-select-current').focus();}else{_this78.dom.element.firstChild.focus();}}});}}}},{key:"validateInputValue",value:function validateInputValue(input){var value=input.value;var currInput=input.classList.contains('tp-mm-input')?'hoursOldVal':'minutesOldVal';if(/^[0-9]{1,2}?$/.test(value)||value===''){this.settings[currInput]=value;return this.settings[currInput];}else{value=this.settings[currInput];return value;}}// add key controls
},{key:"arrowKeyActions",value:function arrowKeyActions(event,select){var optionsLength=select.querySelectorAll('.tp-select-option').length-1;var optionsList=select.querySelector('.tp-select-options');var highlightedOption=select.querySelector('.highlighted');var sClasses=select.classList;var highlightIndex=Number(optionsList.getAttribute('hlindex'));switch(event.key){case'Escape':this.hideSelectOpt(select);break;case'ArrowDown':if(highlightIndex>=optionsLength){highlightIndex=0;}else{highlightIndex+=1;}optionsList.setAttribute('hlindex',highlightIndex);this.highlightOption(select,highlightIndex);break;case'ArrowUp':if(highlightIndex<=0){highlightIndex=optionsLength;}else{highlightIndex-=1;}optionsList.setAttribute('hlindex',highlightIndex);this.highlightOption(select,highlightIndex);break;case'Enter':if(sClasses.contains('open')&&!highlightedOption.classList.contains('no-results')&&!highlightedOption.classList.contains('disabled')){this.setSelectValue(select);this.setComponentValue();}break;case' ':if(sClasses.contains('open')&&highlightedOption&&!highlightedOption.classList.contains('disabled')&&!highlightedOption.classList.contains('no-results')){this.setSelectValue(select);this.setComponentValue();}else if(!sClasses.contains('disabled')){this.toggleSelectOpt(select);}break;}}},{key:"highlightOption",value:function highlightOption(select,hlindex){var options=select.querySelectorAll('.tp-select-option');var optionsList=select.querySelector('.tp-select-options');var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=options[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var item=_step8.value;item.classList.remove('highlighted');}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return!=null){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}options[hlindex].classList.add('highlighted');if(!this.isInViewport(options[hlindex],optionsList)){optionsList.scrollTop=options[hlindex].offsetTop;}}},{key:"highlightRemove",value:function highlightRemove(select){var options=select.querySelectorAll('.tp-select-option');var optionsList=select.querySelector('.tp-select-options');var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=options[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var item=_step9.value;item.classList.remove('highlighted');}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return!=null){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}optionsList.setAttribute('hlindex',-1);}},{key:"setSelectValue",value:function setSelectValue(select,target){var current=select.querySelector('.tp-select-current');var selected=select.querySelector('.highlighted')||target;var options=select.querySelectorAll('.tp-select-option');var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=options[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var item=_step10.value;item.classList.remove('active');}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return!=null){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}this.hideSelectOpt(select);if(current.classList.contains('tp-hh-input')||current.classList.contains('tp-mm-input')){if(selected){current.value=selected.innerText;}this.filterOptions(select);}else{selected.classList.add('active');current.innerText=selected.innerText;}}},{key:"setComponentValue",value:function setComponentValue(){switch(this.settings.type){case'inputs':{var hours=this.validateInputValue(this.dom.element.querySelector('.tp-hh-input'))||'--';var minutes=this.dom.element.querySelector('.tp-mm-input').value||'--';var interval=this.dom.element.querySelector('.tp-interval-select');hours=this.leadingZeroFormat(hours);minutes=this.leadingZeroFormat(minutes);if(interval){this.value=hours+':'+minutes+' '+interval.innerText;}else{this.value=hours+':'+minutes;}break;}case'combined':this.value=this.dom.element.querySelector('.tp-select-current').innerText;break;case'separate':{var _hours=this.dom.element.querySelector('.tp-hh-input').value||'--';var _minutes=this.dom.element.querySelector('.tp-mm-input').value||'--';var _interval=this.dom.element.querySelector('.tp-interval-select');_hours=this.leadingZeroFormat(_hours);_minutes=this.leadingZeroFormat(_minutes);if(_interval){this.value=_hours+':'+_minutes+' '+_interval.innerText;}else{this.value=_hours+':'+_minutes;}break;}}}},{key:"leadingZeroFormat",value:function leadingZeroFormat(val,size){var s=String(val);while(s.length<(size||2)){s='0'+s;}return s;}/*
   *filterOptions(select){
   *const selectCurrent = select.querySelector('.tp-select-current');
   *const selectOptions =  select.querySelector('.tp-select-options');
   *let initialOptionsList = [];
   *
   *if (selectCurrent.classList.contains('tp-hh-input')){
   *  initialOptionsList =  Array.from(this.settings.hoursList);
   *} else if (selectCurrent.classList.contains('tp-mm-input')) {
   *  initialOptionsList =  Array.from(this.settings.minutesList);
   *}
   *
   *selectCurrent.value = this.validateInputValue(selectCurrent);
   *
   *const inputVal = selectCurrent.value.toLowerCase().trim();
   *const filteredOptions = initialOptionsList.filter(val => val.innerText.toLowerCase().indexOf(inputVal) > -1);
   *
   *selectOptions.setAttribute('hlindex', -1);
   *
   *if (filteredOptions.length){
   *  selectOptions.innerHTML = '';
   *
   *  for (let i = 0; i < filteredOptions.length; i += 1){
   *    if (inputVal !== filteredOptions[i].innerText.trim().toLowerCase()){
   *      filteredOptions[i].classList.remove('active', 'highlighted');
   *    } else {
   *      filteredOptions[i].classList.add('active');
   *    }
   *    selectOptions.appendChild(filteredOptions[i]);
   *  }
   *} else {
   *  selectOptions.innerHTML = '<div class="tp-select-option no-results">--</div>';
   *}
   *}
   */},{key:"filterOptions",value:function filterOptions(select){var selectCurrent=select.querySelector('.tp-select-current');var selectOptions=select.querySelector('.tp-select-options');var initialOptionsList=Array.from(selectOptions.children);selectCurrent.value=this.validateInputValue(selectCurrent);var inputVal=selectCurrent.value.toLowerCase().trim();// reset option's classes
[].forEach.call(initialOptionsList,function(option){option.classList.remove('active','highlighted');});// reset scroll position
selectOptions.setAttribute('hlindex',-1);selectOptions.scrollTop=0;// look for matches
var filteredOption=0;if(inputVal.length>0){filteredOption=initialOptionsList.find(function(val){return val.innerText.toLowerCase().indexOf(inputVal)>-1;});}// highlight filtered option
if(filteredOption!==0&&filteredOption!==undefined){selectOptions.setAttribute('hlindex',initialOptionsList.indexOf(filteredOption));filteredOption.classList.add('active','highlighted');filteredOption.parentNode.scrollTop=filteredOption.offsetTop;}}// check if an option is in viewport of list
},{key:"isInViewport",value:function isInViewport(option,optionsList){var elementTop=option.offsetTop;var elementBottom=elementTop+option.clientHeight;var viewportTop=optionsList.scrollTop;var viewportBottom=viewportTop+optionsList.offsetHeight-4;return elementBottom>viewportTop&&elementTop<viewportBottom;}},{key:"createElement",value:function createElement(type,obj){var el=document.createElement(type);if(typeof obj==='string'){el.classList.add(obj);}else if(obj===Object(obj)){for(var prop in obj){if(prop in el){el[prop]=obj[prop];}else{el.setAttribute(el[prop],obj[prop]);}}}return el;}},{key:"ifClickedOutside",value:function ifClickedOutside(callback,type,select){var _this79=this;if(type==='remove'){document.removeEventListener('click',function(_ref8){var target=_ref8.target;if(!select.contains(target)){callback.bind(_this79)();}});}else{document.addEventListener('click',function(_ref9){var target=_ref9.target;if(!select.contains(target)){callback.bind(_this79)();}});}}}]);return TimePicker;}();/**
 * @file Module to create Timeline component.
 */ /**
 * Class representing a timeline.
 */var Timeline=/*#__PURE__*/function(){/**
   * Setup timeline properties.
   * @param {HTMLElement} element - a DOM element conaining the timeline.
   * @param {Object} data - a JSON-formatted object containing the timeline data.
   */function Timeline(element){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,Timeline);this.container=element;this.mainList=null;this.entries=JSON.parse(JSON.stringify(data));this.selected=null;this.counter=0;this.focus=0;this.resizeObserver=null;this.dateGroups=[];this.options={sorting:'order',order:'dsc',from:null,to:null,selectable:false,headings:false,collapsible:false,locale:'en-US',timeFormat:{year:'numeric',month:'long',day:'numeric',hour:'numeric',minute:'numeric'}};this.listeners={document:[],entries:[]};}/**
   * Initialize timeline
   * @public
   */_createClass(Timeline,[{key:"init",value:function init(options){this.update(options);this._setResizeObserver();}/**
   * Update the timeline
   * @public
   * @param {Object} options - an object containing the timeline options.
   */},{key:"update",value:function update(options){if(this.entries){this.destroy();this._setProps(options);this._setMainList();this._addMainListClasses();this._formatDataAndGenerateContents();this._addGeneralListeners();this._setStickyHeaders();}}/**
   * Remove event listeners and resize observer
   * @public
   */},{key:"destroy",value:function destroy(){var listeners=this.listeners.entries.concat(this.listeners.document);if(listeners.length>0){listeners.forEach(function(_ref10){var action=_ref10.action,element=_ref10.element,handler=_ref10.handler;element.removeEventListener(action,handler);});}if(this.resizeObserver){this.resizeObserver.unobserve(this.container);}}/**
   * Set timeline properties.
   * @private
   * @param {Object} options - an object containing the timeline options.
   */},{key:"_setProps",value:function _setProps(options){for(var prop in options){if(this.options.hasOwnProperty(prop)){this.options[prop]=options[prop];}}}/**
   * Create the main list or clear its contents
   * @private
   */},{key:"_setMainList",value:function _setMainList(){if(!this.mainList){this._createMainList();}else{this._clearMainList();}}/**
   * Create the main list element and append
   * @private
   */},{key:"_createMainList",value:function _createMainList(){this.mainList=document.createElement('UL');this.mainList.classList.add('main-list');this.container.appendChild(this.mainList);}/**
   * Clear the contents of the main list
   * @private
   */},{key:"_clearMainList",value:function _clearMainList(){this.mainList.innerHTML='';}/**
   * Add classes to main list based on timeline options
   * @private
   */},{key:"_addMainListClasses",value:function _addMainListClasses(){var _this80=this;var mainListClasses=['selectable','headings'];mainListClasses.forEach(function(timelineClass){_this80._toggleClass(_this80.mainList,_this80.options[timelineClass],timelineClass);});}/**
   * Add or remove a class based on a condition
   * @private
   * @param {HTMLElement} element - the element on which to toggle the class.
   * @param {Boolean} condition - a condition to determine whether to add or remove the class.
   * @param {String} className - a string representing the class name to toggle.
   */},{key:"_toggleClass",value:function _toggleClass(element,condition,className){if(condition){element.classList.add(className);}else{element.classList.remove(className);}}/**
   * Format entry data and generate timeline DOM contents
   * @private
   */},{key:"_formatDataAndGenerateContents",value:function _formatDataAndGenerateContents(){this._formatEntryData(this.entries);var constrained=this._constrainEntries();this._generateTimelineContents(this.mainList,constrained);}/**
   * Format and add entry data
   * @private
   * @param {Array} entries - a collection of objects representing the entries.
   */},{key:"_formatEntryData",value:function _formatEntryData(entries){var _this81=this;entries.forEach(function(entry){_this81._setEntryOrder(entry);_this81._parseTimestamp(entry);_this81._formatSubTimeline(entry);});this._sortEntries(entries);}/**
   * Set entry "order" attribute
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_setEntryOrder",value:function _setEntryOrder(entry){if(entry.order===undefined){entry.order=this.counter;this.counter+=1;}}/**
   * Format timestamp if available
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_parseTimestamp",value:function _parseTimestamp(entry){if(entry.timestamp){entry.timestamp=this._parseDate(entry.timestamp);}}/**
   * Parse date string if its not already a Date object
   * @private
   * @param {String} value - a Date value or a string representing a date.
   */},{key:"_parseDate",value:function _parseDate(value){if(value instanceof Date){return value;}return new Date(value);}/**
   * Format sub-timeline if available
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_formatSubTimeline",value:function _formatSubTimeline(entry){if(entry.timeline){this._formatEntryData(entry.timeline);}}/**
   * Sot entries based on sorting value and order
   * @private
   * @param {Array} entries - a collection of objects representing entries.
   */},{key:"_sortEntries",value:function _sortEntries(entries){var _this82=this;entries.sort(function(a,b){if(_this82.options.order==='dsc'){return b[_this82.options.sorting]-a[_this82.options.sorting];}return a[_this82.options.sorting]-b[_this82.options.sorting];});}/**
   * Apply lower and upper limits to which entries are shown based on sorting value
   * @private
   */},{key:"_constrainEntries",value:function _constrainEntries(){var _this83=this;var _this$options=this.options,from=_this$options.from,to=_this$options.to;return this.entries.filter(function(entry){return(!from||_this83._getSortValue(entry)>=_this83._getTimeIfDate(from))&&(!to||_this83._getSortValue(entry)<=_this83._getTimeIfDate(to));});}/**
   * Get sorting value of entry
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_getSortValue",value:function _getSortValue(entry){return this._getTimeIfDate(entry[this.options.sorting]);}/**
   * Get time value of date if "timestamp" is set as sorting value
   * @private
   * @param {Any} entry - a value from which to extract a time.
   */},{key:"_getTimeIfDate",value:function _getTimeIfDate(value){if(this.options.sorting==='timestamp'){return this._parseDate(value).getTime();}return value;}/**
   * Generate entries and append to timeline
   * @private
   * @param {HTMLElement} list - a DOM element on which to append entries.
   * @param {Array} entries - a collection of objects representing entries.
   */},{key:"_generateTimelineContents",value:function _generateTimelineContents(){var _this84=this;var list=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.mainList;var entries=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.entries;var lastEntry=null;var entryList=list;entries.forEach(function(entry){if(_this84._dateGroupIsNeeded(lastEntry,entry)){entryList=_this84._addDateGroup(entry,list);}_this84._generateEntry(entry,entryList);_this84._addScheduledClass(entry,lastEntry);lastEntry=entry;});}/**
   * Determine if a dategroup should be created
   * @private
   * @param {Object} lastEntry - an object representing the previous entry.
   * @param {Object} entry - an object representing the current entry.
   */},{key:"_dateGroupIsNeeded",value:function _dateGroupIsNeeded(lastEntry,entry){return this.options.sorting==='timestamp'&&this.options.headings&&this._dayIsDifferent(lastEntry,entry);}/**
   * Determine if the day of the current date is different from the previous
   * @private
   * @param {Object} lastEntry - an object representing the previous entry.
   * @param {Object} entry - an object representing the current entry.
   */},{key:"_dayIsDifferent",value:function _dayIsDifferent(lastEntry,entry){if(!lastEntry){return true;}var trimmedLastDate=this._trimDate(lastEntry.timestamp);var trimmedCurrentDate=this._trimDate(entry.timestamp);return trimmedLastDate.getTime()!==trimmedCurrentDate.getTime();}/**
   * Set hours, minutes, seconds and milis to 0 to compare dates
   * @private
   * @param {Date} date - an object representing an entry.
   */},{key:"_trimDate",value:function _trimDate(date){var newDate=new Date(date);newDate.setHours(0,0,0,0);return newDate;}/**
   * Create a dateGroup and return its entryList
   * @private
   * @param {Object} entry - an object representing an entry.
   * @param {HTMLElement} list - a DOM element on which to append entries.
   */},{key:"_addDateGroup",value:function _addDateGroup(entry,list){var heading=this._createDateGroupHeading(entry.timestamp);var dateGroup=this._createDateGroup(heading);this.dateGroups.push(dateGroup.container);var entryList=dateGroup.entryList;list.appendChild(dateGroup.container);return entryList;}/**
   * Create the dateGroup label DOM element
   * @private
   * @param {Date} timestamp - a Date object representing a timestamp.
   */},{key:"_createDateGroupHeading",value:function _createDateGroupHeading(timestamp){var options={month:'long',day:'numeric',year:'numeric'};var dateFormat=new Intl.DateTimeFormat(this.options.locale,options);var text=dateFormat.format(timestamp);var scheduledClass=timestamp>new Date()?' to-scheduled':'';return"<div class=\"heading".concat(scheduledClass,"\">\n        <span class=\"label\">").concat(text,"</span>\n    </div>");}/**
   * Create the dateGroup DOM element
   * @private
   * @param {HTMLElement} heading - a DOM element representing the dateGroup heading.
   */},{key:"_createDateGroup",value:function _createDateGroup(heading){var container=document.createElement('LI');container.classList.add('date-group');container.innerHTML=heading;var entryList=document.createElement('UL');entryList.classList.add('entry-list');container.appendChild(entryList);return{container:container,entryList:entryList};}/**
   * Create an entry
   * @private
   * @param {Object} entry - an object representing an entry.
   * @param {HTMLElement} entryList - a DOM element on which to append entries.
   */},{key:"_generateEntry",value:function _generateEntry(entry,entryList){this._createEntryElement(entry);this._addIconClass(entry);this._registerEntryEvents(entry);this._addCollapseButton(entry);this._generateSubTimeline(entry);entryList.appendChild(entry.element);}/**
   * Create the entry DOM element
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_createEntryElement",value:function _createEntryElement(entry){var element=document.createElement('LI');element.classList.add('entry');var template="\n      <div class=\"target\"".concat(this._tabIndex(),">\n        ").concat(this._displayTime(entry),"\n        ").concat(this._displayTitle(entry),"\n        ").concat(this._displayStatus(entry),"\n        ").concat(this._displayContent(entry),"\n      </div>");element.innerHTML=template;entry.target=element.querySelector('.target');entry.element=element;}/**
   * Generat the tabIndex attribute if timeline is selectable
   * @private
   */},{key:"_tabIndex",value:function _tabIndex(){return this.options.selectable?'tabIndex="0"':'';}/**
   * Create the timestamp DOM element if available
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_displayTime",value:function _displayTime(entry){return entry.timestamp?"\n      <time class=\"time\" datetime=\"\">\n        ".concat(this._formatTime(entry.timestamp),"\n      </time>"):'';}/**
   * Format the timestamp based on locale and provided format
   * @private
   * @param {Date} time - an Date object to format based on the locale and provided format.
   */},{key:"_formatTime",value:function _formatTime(time){return time.toLocaleString(this.options.locale,this.options.timeFormat);}/**
   * Create the timestamp DOM element if available
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_displayTitle",value:function _displayTitle(entry){return entry.title?"<h4 class=\"title\">".concat(entry.title,"</h4>"):'';}/**
   * Create the status DOM element if available
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_displayStatus",value:function _displayStatus(entry){if(entry.status){var status='';entry.status.forEach(function(s){status+="<span class=\"icon-".concat(s.icon,"\">").concat(s.label,"</span>");});return"<span class=\"status\">".concat(status,"</span>");}return'';}/**
   * Create the content DOM element if available
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_displayContent",value:function _displayContent(entry){return entry.content?"<div class=\"content\">".concat(entry.content,"</div>"):'';}/**
   * Add class name for main icon
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_addIconClass",value:function _addIconClass(entry){if(entry.icon){entry.element.classList.add("icon-".concat(entry.icon));}}/**
   * Register entry events if timeline is selectable
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_registerEntryEvents",value:function _registerEntryEvents(entry){var _this85=this;if(this.options.selectable){this._registerListener(entry.target,'click',function(){_this85._selectEntry(entry);});this._registerListener(entry.target,'keyup',function(event){if(event.key==='Enter'){_this85._deselectEntry();_this85._selectEntry(entry);}});this._registerListener(entry.target,'focus',function(){_this85.focus=_this85._getIndex(entry);});}}/**
   * Add event listeners and save a reference to them
   * @private
   * @param {HTMLElement} element - the target DOM element.
   * @param {String} action - A string representing the event.
   * @param {Function} handler - the event handler.
   */},{key:"_registerListener",value:function _registerListener(element,action,handler){element.addEventListener(action,handler);if(element===document){this.listeners.document={action:action,element:element,handler:handler};}else{this.listeners.entries.push({action:action,element:element,handler:handler});}}/**
   * Mark an entry as selected and dispatch event
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_selectEntry",value:function _selectEntry(entry){this.selected=entry.element;this.selected.classList.add('active');var event=new CustomEvent('selectEntry',{detail:_objectSpread({},entry)});event.detail[this.options.sorting]=entry[this.options.sorting];document.dispatchEvent(event);}/**
   * Unmark element as selected
   * @private
   */},{key:"_deselectEntry",value:function _deselectEntry(){if(this.selected){this.selected.classList.remove('active');}}/**
   * Get index of a specified entry
   * @private
   * @param {Object} targetEntry - an object representing an entry.
   */},{key:"_getIndex",value:function _getIndex(targetEntry){return this.entries.findIndex(function(entry){return entry===targetEntry;});}/**
   * Add a button to collapse contents if "collapsible" option is set to true
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_addCollapseButton",value:function _addCollapseButton(entry){if(this.options.collapsible){var collapseElement=document.createElement('BUTTON');collapseElement.classList.add('collapse-btn');this._registerListener(collapseElement,'click',function(event){event.stopPropagation();event.preventDefault();entry.element.classList.toggle('collapsed');});entry.target.appendChild(collapseElement);}}/**
   * Generate nested timeline if available
   * @private
   * @param {Object} entry - an object representing an entry.
   */},{key:"_generateSubTimeline",value:function _generateSubTimeline(entry){if(entry.timeline){var subTimeline=document.createElement('UL');entry.element.appendChild(subTimeline);this._generateTimelineContents(subTimeline,entry.timeline);}}/**
   * Add classes for scheduled entries
   * @private
   * @param {Object} entry - an object representing the current entry.
   * @param {Object} lastEntry - an object representing the previous entry
   */},{key:"_addScheduledClass",value:function _addScheduledClass(entry,lastEntry){if(this.options.sorting==='timestamp'){this._addClassIfScheduled(lastEntry,entry,'to-scheduled');this._addClassIfScheduled(entry,entry,'scheduled');}}/**
   * Add class if entry is in the future
   * @private
   * @param {Object} entry - an object representing an entry.
   * @param {Object} reference - an object representing an entry.
   * @param {String} className - a string representing a class name.
   */},{key:"_addClassIfScheduled",value:function _addClassIfScheduled(entry,reference,className){if(entry&&reference.timestamp>new Date()){entry.element.classList.add(className);}}/**
   * Add document and container listeners if timeline is selectable
   * @private
   */},{key:"_addGeneralListeners",value:function _addGeneralListeners(){if(this.options.selectable){this._registerListener(document,'mouseup',this._deselectEntry.bind(this));this._registerListener(this.container,'keydown',this._keyboardNav.bind(this));}}/**
   * Handle the keyboard navigation
   * @private
   * @param {Event} event - an event.
   */},{key:"_keyboardNav",value:function _keyboardNav(event){var keyCodes=this._getKeyCodes();this._updateFocus(event,keyCodes);this._constrainFocus();this._setFocus(event,keyCodes);}/**
   * Get relevant keycodes depending on layout of timeline
   * @private
   */},{key:"_getKeyCodes",value:function _getKeyCodes(){var next=this._isHorizontal()?'ArrowRight':'ArrowDown';var prev=this._isHorizontal()?'ArrowLeft':'ArrowUp';return{prev:prev,next:next};}/**
   * Determine whetner timeline is horizontal or not
   * @private
   */},{key:"_isHorizontal",value:function _isHorizontal(){return this.container.classList.contains('horizontal')&&!this.container.classList.contains('compact');}/**
   * Update the focus index based on the key pressed
   * @private
   * @param {Event} event - a keydown event.
   * @param {String} prev - the keycode that indicates a navigaton to the previous element.
   * @param {String} next - the keycode that indicates a navigation to the next element.
   */},{key:"_updateFocus",value:function _updateFocus(event,_ref11){var prev=_ref11.prev,next=_ref11.next;if(event.key===next){this.focus+=1;}else if(event.key===prev){this.focus-=1;}}/**
   * Prevent the focus index from exceding the length of elements or being less than 0
   * @private
   */},{key:"_constrainFocus",value:function _constrainFocus(){if(this.focus>=this.entries.length){this.focus=0;}if(this.focus<0){this.focus=this.entries.length-1;}}/**
   * Set focus on the relevant DOM element
   * @private
   * @param {Event} event - a keydown event.
   * @param {String} prev - the keycode that indicates a navigaton to the previous element.
   * @param {String} next - the keycode that indicates a navigation to the next element.
   */},{key:"_setFocus",value:function _setFocus(event,_ref12){var prev=_ref12.prev,next=_ref12.next;if(event.key===prev||event.key===next){event.preventDefault();this.entries[this.focus].target.focus();}}/**
   * Register the scroll event for the main list
   * @private
   */},{key:"_setStickyHeaders",value:function _setStickyHeaders(){if(this.options.sorting==='timestamp'&&this.options.headings){this._registerListener(this.mainList,'scroll',this._throttle(this._scrollHandler,100));}}/**
   * Set a minimum interval for the handler function to be triggered
   * @private
   * @param {Function} handler - the handler function to be triggered.
   * @param {Number} interval - the minimum interval for triggering the handler function.
   */},{key:"_throttle",value:function _throttle(handler,interval){var _this86=this;var scroll=true;var timeout=null;setInterval(function(){scroll=true;},interval);return function(event){if(scroll){handler.bind(_this86)(event);}clearTimeout(timeout);timeout=setTimeout(function(){handler.bind(_this86)(event);},0);scroll=false;};}/**
   * toggle classes on dategroups based on the scroll position to achieve sticky headings
   * @private
   * @param {Event} event - a scroll event.
   */},{key:"_scrollHandler",value:function _scrollHandler(event){var _this87=this;var target=event.target;var minEntryWidth=250;var minEntryHeight=48;var scroll=this._isHorizontal()?'scrollLeft':'scrollTop';var start=this._isHorizontal()?'offsetLeft':'offsetTop';var size=this._isHorizontal()?'offsetWidth':'offsetHeight';var offset=this._isHorizontal()?minEntryWidth:minEntryHeight;this.dateGroups.forEach(function(dateGroup){if(!_this87._isSubTimeline(dateGroup)){var relativeStart=dateGroup[start];var reachedStart=relativeStart<target[scroll];var reachedEnd=relativeStart+dateGroup[size]-offset<target[scroll];_this87._toggleClass(dateGroup,reachedStart,'timeline-sticky');_this87._toggleClass(dateGroup,reachedEnd,'fade');}});}/**
   * Check if dateGroup is inside a sub-timeline
   * @private
   * @param {HTMLElement} dateGroup - A DOM element representing an dateGroup.
   */},{key:"_isSubTimeline",value:function _isSubTimeline(dateGroup){return dateGroup.offsetParent.classList.contains('entry');}/**
   * Set a resize observer tu adjust layout of timeline based on container width
   * @private
   */},{key:"_setResizeObserver",value:function _setResizeObserver(){var _this88=this;if(typeof ResizeObserver!=='undefined'){this.resizeObserver=new ResizeObserver(function(entries){var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=entries[Symbol.iterator](),_step11;!(_iteratorNormalCompletion11=(_step11=_iterator11.next()).done);_iteratorNormalCompletion11=true){var entry=_step11.value;_this88._toggleClass(entry.target,entry.contentRect.width<500,'compact');}}catch(err){_didIteratorError11=true;_iteratorError11=err;}finally{try{if(!_iteratorNormalCompletion11&&_iterator11.return!=null){_iterator11.return();}}finally{if(_didIteratorError11){throw _iteratorError11;}}}});this.resizeObserver.observe(this.container);}}/**
   * Add one or several entries to the timeline
   * @public
   * @param {(Object|Array)} entries - an object or a collection of objects representing entries.
   */},{key:"addEntries",value:function addEntries(entries){this._clearMainList();this.entries=this.entries.concat(entries);this._formatDataAndGenerateContents();}/**
   * Remove one or several entries from the timeline given their indices
   * @public
   * @param {(Number|Number[])} collection - an index or collection of indices representing one or several entries.
   */},{key:"removeEntries",value:function removeEntries(collection){return this._removeEntriesBy(collection);}/**
   * Remove one or several entries using the specified remove function
   * @public
   * @param {(Any|Array)} collection - a value or collection of values representing one or several entries.
   * @param {Function} [removeFunction = this._removeEntry] - a function to apply for the removal of each entry.
   */},{key:"_removeEntriesBy",value:function _removeEntriesBy(collection){var _this89=this;var removeFunction=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this._removeEntry;var results=[];var toBeRemoved=[].concat(collection);toBeRemoved.forEach(function(reference){var result=removeFunction.bind(_this89)(reference);results.push(result);});return results;}/**
   * Remove an entry given its index
   * @public
   * @param {Number} index - the index of the entry to remove.
   */},{key:"_removeEntry",value:function _removeEntry(index){if(this.entries[index]){this._clearMainList();this._unregisterEntry(index);this._formatDataAndGenerateContents();return index;}return-1;}/**
   * Unregister an entry from this.entries given its index
   * @public
   * @param {Number} index - the index of the entry to unregister.
   */},{key:"_unregisterEntry",value:function _unregisterEntry(index){this.entries.splice(index,1);}/**
   * Remove one or several entries from the timeline given their sorting values
   * @public
   * @param {(Any|Array)} collection - a value or collection of values representing one or several entries.
   */},{key:"removeEntriesBySortValue",value:function removeEntriesBySortValue(collection){return this._removeEntriesBy(collection,this._removeEntryBySortValue);}/**
   * Remove one or several entries from the timeline given their sorting values
   * @public
   * @param {Any} reference - a value representing an entry.
   */},{key:"_removeEntryBySortValue",value:function _removeEntryBySortValue(reference){var index=this._sortValueToIndex(reference);return this._removeEntry(index);}/**
   * Obtain the index of an entry given its sorting value
   * @public
   * @param {Any} sortValue - a sorting value representing an entry.
   */},{key:"_sortValueToIndex",value:function _sortValueToIndex(sortValue){var _this90=this;return this.entries.findIndex(function(entry){return _this90._getSortValue(entry)===_this90._getTimeIfDate(sortValue);});}}]);return Timeline;}();/**
 * @file Module to create Tree component.
 */ /**
 * Class representing a tree.
 */var Tree=/*#__PURE__*/function(){/**
   * Setup tree properties.
   * @param {HTMLElement} element - The DOM element of the tree.
   */function Tree(element){var _this91=this;_classCallCheck(this,Tree);this.dom={accordion:element,titles:element.querySelectorAll('.title')};this.listeners={toggleAccordion:[],keyDown:function keyDown(evt){if(evt.key===' '&&evt.target.classList.contains('title')){evt.preventDefault();_this91._toggleAccordion(evt.target);}}};}/**
   * Initialize the tree.
   * @public
   */_createClass(Tree,[{key:"init",value:function init(){this._addEventListeners();}/**
   * Destroy the tree and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this92=this;Array.from(this.dom.titles).forEach(function(title,index){var listener=function listener(){_this92._toggleAccordion(title);};title.addEventListener('click',listener);_this92.listeners.toggleAccordion[index]=listener;title.addEventListener('keydown',_this92.listeners.keyDown);});}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this93=this;Array.from(this.dom.titles).forEach(function(title,index){title.removeEventListener('click',_this93.listeners.toggleAccordion[index]);title.removeEventListener('keydown',_this93.listeners.keyDown);});this.listeners.toggleAccordion=[];}/**
   * Toggle the tree.
   * @private
   * @param {HTMLElement} title - The DOM element of clicked tree item.
   */},{key:"_toggleAccordion",value:function _toggleAccordion(title){title.classList.toggle('opened');}}]);return Tree;}();/**
 * @file Module to create Wizard Content component.
 */ /**
 * Class representing a wizard content.
 */var WizardContent=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function WizardContent(element){var _this94=this;_classCallCheck(this,WizardContent);this.dom={content:element};this.listeners={showCorrectContent:function showCorrectContent(evt){return _this94.showCorrectContent(evt);}};}/**
   * Create component.
   * @public
   */_createClass(WizardContent,[{key:"init",value:function init(){this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){window.addEventListener('wizardState',this.listeners.showCorrectContent);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){window.removeEventListener('wizardState',this.listeners.showCorrectContent);}},{key:"showCorrectContent",value:function showCorrectContent(evt){var _this95=this;var currentStep=evt.detail.state.currentStep;var contents=Array.from(this.dom.content.children).filter(function(el){return el.classList.contains('content');});contents.forEach(function(content,i){if(i===currentStep){_this95.showContent(content);}else{_this95.hideContent(content);}});}},{key:"showContent",value:function showContent(content){content.classList.remove('hidden');}},{key:"hideContent",value:function hideContent(content){content.classList.add('hidden');}}]);return WizardContent;}();/**
 * @file Module to create Wizard Footer component.
 */ /**
 * Class representing a wizard footer.
 */var WizardFooter=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function WizardFooter(element){var _this96=this;_classCallCheck(this,WizardFooter);this.dom={wizardFooter:element,nextAction:element.querySelector('#wizard-next'),prevAction:element.querySelector('#wizard-previous')};this.listeners={nextStep:function nextStep(){return _this96.nextStep();},prevStep:function prevStep(){return _this96.prevStep();},updateButtons:function updateButtons(evt){return _this96.updateButtons(evt);}};this.target=element.dataset.target;this.wizardState=undefined;this.events={wizardStateChange:new CustomEvent('wizardStateChange',{detail:{message:'state changed'},bubbles:true,cancelable:true}),wizardShowNextSteps:new CustomEvent('wizardShowNextSteps',{detail:{message:'show next steps'},bubbles:true,cancelable:true}),wizardShowPrevSteps:new CustomEvent('wizardShowPrevSteps',{detail:{message:'show prev steps'},bubbles:true,cancelable:true}),wizardFinished:new CustomEvent('wizardFinished',{detail:{message:'finished'},bubbles:true,cancelable:true})};}/**
   * Create component.
   * @public
   */_createClass(WizardFooter,[{key:"init",value:function init(){this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.nextAction.addEventListener('click',this.listeners.nextStep);this.dom.prevAction.addEventListener('click',this.listeners.prevStep);document.addEventListener('wizardState',this.listeners.updateButtons);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.nextAction.removeEventListener('click',this.listeners.nextStep);this.dom.prevAction.removeEventListener('click',this.listeners.prevStep);document.removeEventListener('wizardState',this.listeners.updateButtons);}},{key:"nextStep",value:function nextStep(){var currentStep=this.wizardState.currentStep;var lastStepPresentation=this.wizardState.presentation.slice(-1)[0];if(currentStep>=0&&currentStep<this.wizardState.numSteps){this.wizardState.currentStep+=1;this.events.wizardStateChange.detail.state=this.wizardState;document.dispatchEvent(this.events.wizardStateChange);if(currentStep===lastStepPresentation-1){document.dispatchEvent(this.events.wizardShowNextSteps);}}}},{key:"prevStep",value:function prevStep(){var currentStep=this.wizardState.currentStep;var firstStepPresentation=this.wizardState.presentation[0];if(currentStep>0){this.wizardState.currentStep-=1;this.events.wizardStateChange.detail.state=this.wizardState;document.dispatchEvent(this.events.wizardStateChange);if(currentStep===firstStepPresentation){document.dispatchEvent(this.events.wizardShowPrevSteps);}}}},{key:"updateButtons",value:function updateButtons(evt){this.wizardState=evt.detail.state;var currentStep=evt.detail.state.currentStep;if(currentStep===evt.detail.state.numSteps-1){this.dom.nextAction.innerHTML='Finish';}else{this.dom.nextAction.disabled=false;this.dom.nextAction.innerHTML='<span class="term">Next</span> <i class="icon icon-arrow-right"></i>';}if(currentStep>0){this.dom.prevAction.classList.remove('hidden');}else{this.dom.prevAction.classList.add('hidden');}if(currentStep===evt.detail.state.numSteps){this.dom.nextAction.innerHTML='Finished';if(this.dom.prevAction.parentNode!==null){this.dom.prevAction.parentNode.removeChild(this.dom.prevAction);this.dom.prevAction.disabled=false;}this.dom.nextAction.disabled=true;document.dispatchEvent(this.events.wizardFinished);}}}]);return WizardFooter;}();/**
 * @file Module to create Wizard Steps component.
 */ /**
 * Class representing a wizard steps.
 */var WizardSteps=/*#__PURE__*/function(){/**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */function WizardSteps(element){var _this97=this;_classCallCheck(this,WizardSteps);this.dom={wizard:element,arrows:element.querySelectorAll('.arrow'),steps:element.querySelectorAll('.step'),points:null,id:element.getAttribute('id')};this.listeners={updateState:function updateState(evt){return _this97.updateState(evt);},showNextSteps:function showNextSteps(){return _this97.showNextSteps();},showPrevSteps:function showPrevSteps(){return _this97.showPrevSteps();},updateScenario:function updateScenario(){return _this97.updateScenario();},steps:[]};this.state=null;this.scenario=4;this.type=element.dataset.type;// this.contentTarget = element.dataset.content;
this.events={wizardState:new CustomEvent('wizardState',{detail:{message:'state changed'},bubbles:true,cancelable:true})};}/**
   * Create component.
   * @public
   */_createClass(WizardSteps,[{key:"init",value:function init(){this.setInitState();this.setInitContext();this.updateScenario();this._addEventListeners();}/**
   * Destroy component.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){var _this98=this;var leftArrowDOM=this.dom.wizard.querySelector('.arrow.left');var rightArrowDOM=this.dom.wizard.querySelector('.arrow.right');rightArrowDOM.addEventListener('click',this.listeners.showNextSteps);leftArrowDOM.addEventListener('click',this.listeners.showPrevSteps);window.addEventListener('resize',this.listeners.updateScenario);// add links to completed steps
Array.from(this.dom.steps).forEach(function(step,i){var listener=function listener(){if(step.classList.contains('completed'))_this98.go2Step(i);};step.addEventListener('click',listener);_this98.listeners.steps[i]=listener;});document.addEventListener('wizardStateChange',this.listeners.updateState);document.addEventListener('wizardShowNextSteps',this.listeners.showNextSteps);document.addEventListener('wizardShowPrevSteps',this.listeners.showPrevSteps);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this99=this;var leftArrowDOM=this.dom.wizard.querySelector('.arrow.left');var rightArrowDOM=this.dom.wizard.querySelector('.arrow.right');rightArrowDOM.removeEventListener('click',this.listeners.showNextSteps);leftArrowDOM.removeEventListener('click',this.listeners.showPrevSteps);window.removeEventListener('resize',this.listeners.updateScenario);// add links to completed steps
Array.from(this.dom.steps).forEach(function(step,i){step.removeEventListener('click',_this99.listeners.steps[i]);});this.listeners.steps=[];document.removeEventListener('wizardStateChange',this.listeners.updateState);document.removeEventListener('wizardShowNextSteps',this.listeners.showNextSteps);document.removeEventListener('wizardShowPrevSteps',this.listeners.showPrevSteps);}},{key:"updateState",value:function updateState(evt){this.state=evt.detail.state;this.updateDOM();}},{key:"showArrow",value:function showArrow(arrowDirection){switch(arrowDirection){case'left':this.dom.arrows[0].classList.add('visible');break;case'right':this.dom.arrows[1].classList.add('visible');break;}}},{key:"hideArrow",value:function hideArrow(arrowDirection){switch(arrowDirection){case'left':this.dom.arrows[0].classList.remove('visible');break;case'right':this.dom.arrows[1].classList.remove('visible');break;}}},{key:"setInitState",value:function setInitState(){var indexArray=Array.from(this.dom.steps).map(function(step,i){return i;});this.state={currentStep:0,maxCompletedStep:0,refIndex:0,numSteps:this.dom.steps.length,allSteps:indexArray,presentation:indexArray.slice(0,this.scenario),prevSteps:[],nextSteps:indexArray.slice(this.scenario,this.dom.steps.length)};// add state to the event detail
this.events.wizardState.detail.state=this.state;document.dispatchEvent(this.events.wizardState);}},{key:"showNextSteps",value:function showNextSteps(){this.state.refIndex+=1;this.keepRefIndexInBounds();var potentialPresentation=this.state.allSteps.slice(this.state.refIndex,this.state.refIndex+this.scenario);if(potentialPresentation.length<=this.scenario)this.state.presentation=potentialPresentation;this.state.prevSteps=this.state.allSteps.slice(0,this.state.refIndex);this.state.nextSteps=this.state.allSteps.slice(this.state.refIndex+this.scenario,this.dom.steps.length);this.updateDOM();}},{key:"showPrevSteps",value:function showPrevSteps(){this.state.refIndex-=1;this.keepRefIndexInBounds();this.state.presentation=this.state.allSteps.slice(this.state.refIndex,this.state.refIndex+this.scenario);this.state.prevSteps=this.state.allSteps.slice(0,this.state.refIndex);this.state.nextSteps=this.state.allSteps.slice(this.state.refIndex+this.scenario,this.dom.steps.length);this.updateDOM();}},{key:"nextStep",value:function nextStep(){this.state.currentStep+=1;this.updateDOM();}},{key:"prevStep",value:function prevStep(){this.state.currentStep-=1;this.updateDOM();}},{key:"updateDOM",value:function updateDOM(){// keep values within limits
this.keepRefIndexInBounds();// wizard step update
this.updateDOMCurrentState();// wizard visibility
this.updateDOMArrows();this.updateDOMStepsVisibility();// wizard navigation
this.updateDOMContext();// dispatch change state event
this.events.wizardState.detail.state=this.state;this.dom.wizard.dispatchEvent(this.events.wizardState);}},{key:"updateDOMArrows",value:function updateDOMArrows(){if(this.state.nextSteps.length>0){this.showArrow('right');}else{this.hideArrow('right');}if(this.state.prevSteps.length>0){this.showArrow('left');}else{this.hideArrow('left');}}},{key:"updateDOMCurrentState",value:function updateDOMCurrentState(){var _this100=this;this.state.maxCompletedStep=Math.max(this.state.maxCompletedStep,this.state.currentStep-1);Array.from(this.dom.steps).forEach(function(step,i){// remove previous "current" states
step.classList.remove('current');step.classList.remove('completed-last');if(i<_this100.state.currentStep)step.classList.add('completed');// add correct current step
if(i===_this100.state.maxCompletedStep)step.classList.add('completed-last');if(i===_this100.state.currentStep)step.classList.add('current');});}},{key:"updateDOMStepsVisibility",value:function updateDOMStepsVisibility(){var _this101=this;Array.from(this.dom.steps).forEach(function(step,i){step.classList.add('hidden');step.classList.remove('visible');if(_this101.state.presentation.indexOf(i)>-1){step.classList.remove('hidden');// to impose over the @media style
step.classList.add('visible');}});}},{key:"updateDOMContext",value:function updateDOMContext(){var _this102=this;Array.from(this.dom.points).forEach(function(point,i){// remove previous "current" points
point.classList.remove('current');// add correct current point
if(i===_this102.state.currentStep)point.classList.add('current');// update "out-of-context" points
point.classList.add('out-of-presentation');if(_this102.state.presentation.indexOf(i)>-1){point.classList.remove('out-of-presentation');}});}},{key:"setInitContext",value:function setInitContext(){var _this103=this;var navigation=document.createElement('div');navigation.classList.add('navigation');Array.from(this.state.allSteps).forEach(function(step,i){var point=document.createElement('div');point.classList.add('point');// set current
if(i===0)point.classList.add('current');// set out-of-context if any
if(_this103.state.nextSteps.indexOf(i)>-1){point.classList.add('out-of-presentation');}navigation.appendChild(point);});this.dom.wizard.appendChild(navigation);this.dom.points=this.dom.wizard.querySelectorAll('.point');}// JS responsive steps
},{key:"updateScenario",value:function updateScenario(){console.log();var width=this.dom.wizard.offsetWidth;switch(true){case width>=1000:this.scenario=10;break;case width<1000&&width>=700:this.scenario=3;break;case width<700&&width>=500:this.scenario=2;break;case width<500:this.scenario=1;break;}var potentialPresentation=this.state.allSteps.slice(this.state.refIndex,this.state.refIndex+this.scenario);if(potentialPresentation.length<=this.scenario)this.state.presentation=potentialPresentation;this.state.nextSteps=this.state.allSteps.slice(this.state.refIndex+this.scenario,this.dom.steps.length);this.updateDOM();}},{key:"keepRefIndexInBounds",value:function keepRefIndexInBounds(){if(this.state.refIndex<0){this.state.refIndex=0;}var refIndexMax=this.state.numSteps-this.scenario;if(this.state.refIndex>refIndexMax){this.state.refIndex=refIndexMax;}}},{key:"go2Step",value:function go2Step(stepNumber){var diff=this.state.currentStep-stepNumber;if(diff>0){for(var i=0;i<diff;i+=1){this.prevStep();}}if(diff<0){for(var j=0;j<-diff;j+=1){this.nextStep();}}}}]);return WizardSteps;}();/**
 * @file Module to create Wizard component.
 * @requires WizardContent
 * @requires WizardFooter
 * @requires WizardSteps
 */ /**
 * Class representing a wizard.
 */var Wizard=/*#__PURE__*/function(){/**
   * Setup wizard properties.
   * @param {HTMLElement} element - The DOM element of the wizard.
   */function Wizard(element){_classCallCheck(this,Wizard);this.dom={wizard:element,steps:element.querySelector('.wizard-steps'),content:element.querySelector('.wizard-content'),footer:element.querySelector('.wizard-footer')};this.steps=null;this.content=null;this.footer=null;}/**
   * Initialize the wizard.
   * @public
   */_createClass(Wizard,[{key:"init",value:function init(){if(this.dom.footer){this.footer=new WizardFooter(this.dom.footer);this.footer.init();}else{throw new Error('Wizard footer not found!');}if(this.dom.content){this.content=new WizardContent(this.dom.content);this.content.init();}else{throw new Error('Wizard content not found!');}if(this.dom.steps){this.steps=new WizardSteps(this.dom.steps);this.steps.init();}else{throw new Error('Wizard steps not found!');}}/**
   * Destroy the wizard.
   * @public
   */},{key:"destroy",value:function destroy(){if(this.steps){this.steps.destroy();}if(this.content){this.content.destroy();}if(this.footer){this.footer.destroy();}}/**
   * Go to the step with selected number.
   * @public
   * @param {number} stepNumber - Number of the step to go.
   */},{key:"goToStep",value:function goToStep(stepNumber){if(this.steps){this.steps.go2Step(stepNumber);}}}]);return Wizard;}();var Axis=/*#__PURE__*/function(){/**
   * Create common axis component for chart
   * @param {props} props - The properties for the axis component
   * @param {string} props.position - The predefined position for the axis: top, right, bottom or left
   * @param {Object} props.canvas - The DOM element to append the axis
   * @param {Object} [props.x] - The D3 x axis object
   * @param {Object} [props.y] - The D3 y axis object
   * @param {number} props.width - The width of the canvas
   * @param {number} props.height - The height of the canvas
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {number} props.fontSize - The font size of the text elements in the axis
   * @param {number} props.axisPadding - The padding between the axis and the text elements
   * @param {number} [props.animationSpeed] - The speed of the animation if data changes
   * @param {Object[]} [props.thresholds] - Thresholds that can be added to a graph
   * @param {number} [props.thresholds[].moreThan] - Sets the positive threshold
   * @param {number} [props.thresholds[].lessThan] - Sets the negative threshold
   * @param {string} [props.thresholds[].color] - Threshold color (green, yellow, orange, red)
   * @param {boolean} [props.hasDomain] - Boolean determining the axis style to include domain or not
   * @param {boolean} [props.hasGrid] - Boolean determining to include grid or not (makes sense if hasDomain is true)
   * @param {number} [props.ticks] - The approximate number of ticks
   * @param {number} [props.tickFormat] - The number format for the ticks value (see D3 tickFormat)
   * @param {string} [props.unit] - The unit of the axis
   */function Axis(props){_classCallCheck(this,Axis);this.position=props.position;this.canvas=props.canvas;this.x=props.x;this.y=props.y;this.width=props.width;this.height=props.height;this.margin=props.margin;this.fontSize=props.fontSize;this.axisPadding=props.axisPadding;this.animationSpeed=props.animationSpeed||400;this.thresholds=props.thresholds;this.hasDomain=props.hasDomain;this.hasGrid=props.hasGrid;this.ticks=props.ticks||this.width/120;this.tickFormat=props.tickFormat;this.unit=props.unit||'';}/**
   * Initialize the axis
   */_createClass(Axis,[{key:"init",value:function init(){if(this.x&&!isNaN(this.x(0))||this.y&&!isNaN(this.y(0))){this.draw();if(this.thresholds){this.drawThreshold();}}else if(this.x||this.y){this.draw();}}/**
   * Draw an axis based on the properties defined
   * @param {Object} scale - The transform of the axis.
   */},{key:"draw",value:function draw(){var _this104=this;var axisConfig;var gridConfig;var selectAxis=this.canvas.select(".".concat(this.position,".axis"));if(selectAxis.empty()){this.axis=this.canvas.append('g');this.unit=this.axis.append('text').classed('unit',true).text(this.unit);}else{this.axis=selectAxis;this.unit=this.axis.select('.unit');}var selectGrid=this.canvas.select(".".concat(this.position,".grid"));if(selectGrid.empty()){this.grid=this.canvas.append('g').classed(this.position,true).classed('grid',true);}else{this.grid=selectGrid;}switch(this.position){case'bottom':{axisConfig=d3.axisBottom(this.x).tickSize(this.hasDomain?this.axisPadding:this.height+this.axisPadding).tickPadding(this.axisPadding).ticks(this.ticks);if(this.hasDomain){this.axis.attr('transform',"translate(0,".concat(this.height,")"));}if(this.hasGrid){gridConfig=d3.axisBottom(this.x).tickSize(this.height).tickFormat('').ticks(this.ticks);}if(this.margin){this.unit.attr('text-anchor','end').attr('x',this.width).attr('y',(this.hasDomain?0:this.height)+this.fontSize*2+this.axisPadding*2);}break;}case'left':{axisConfig=d3.axisLeft(this.y).tickSize(this.hasDomain?this.axisPadding:-this.width).tickPadding(this.axisPadding).ticks(this.ticks);if(this.hasGrid){gridConfig=d3.axisLeft(this.y).tickSize(-this.width).tickFormat('').ticks(this.ticks);}if(this.margin){this.unit.attr('text-anchor','start').attr('x',-this.margin.left).attr('y',-this.fontSize-this.axisPadding);}break;}}if(this.tickFormat){axisConfig.tickFormat(function(d){return _this104.tickFormat(d);});}this.axis.classed(this.position,true).classed('axis',true).transition().duration(this.animationSpeed).call(axisConfig);if(!this.hasDomain){this.axis.selectAll('.domain').remove();}this.axis.selectAll('.tick').selectAll('line').classed('solid',this.hasDomain).classed('zero',function(d){return d===0;});this.axis.selectAll('.tick').selectAll('text').attr('font-size',this.fontSize);if(this.hasGrid){this.grid.transition().duration(this.animationSpeed).call(gridConfig);}}/**
   * Draw a threshold axis based on the properties defined
   * Threshold will be drawn on the opposite of the axis defined, e.g,
   * if the axis is on the left the threshold will be on the right
   */},{key:"drawThreshold",value:function drawThreshold(){var _this105=this;var equalsThreshold=function equalsThreshold(d){var threshold;_this105.thresholds.forEach(function(t){if(d===t.moreThan||d===t.lessThan){threshold=t.color;}});return threshold;};this.axis.selectAll('.tick').classed('marked-for-removal',function(d){return!!equalsThreshold(d);});this.axis.selectAll('.tick.marked-for-removal').remove();var axisConfig;var thresholdTicks=this.thresholds.map(function(threshold){return threshold.moreThan||threshold.lessThan;});switch(this.position){case'bottom':{axisConfig=d3.axisTop(this.x).tickPadding(this.axisPadding).tickSize(-this.height-this.axisPadding).tickValues(thresholdTicks);break;}case'left':{axisConfig=d3.axisRight(this.y).tickSize(this.width).tickValues(thresholdTicks);break;}}if(this.tickFormat){axisConfig.tickFormat(function(d){return _this105.tickFormat(d);});}var selectThresholdAxis=this.canvas.select('.axis.threshold');this.thresholdAxis=selectThresholdAxis.empty()?this.canvas.append('g'):selectThresholdAxis;this.thresholdAxis.classed('axis',true).classed('threshold',true).transition().duration(this.animationSpeed).call(axisConfig);this.thresholdAxis.selectAll('.domain').remove();this.thresholdAxis.selectAll('.tick').selectAll('line').attr('class',function(d){return equalsThreshold(d);}).classed('threshold',true);this.thresholdAxis.selectAll('.tick').selectAll('text').attr('font-size',this.fontSize);}}]);return Axis;}();/**
 * @file Module to create Horizontal Bar Chart component.
 * @requires d3
 * @requires Stage
 * @requires Axis
 * @requires Legend
 * @requires ColorScale
 */ /**
 * Class representing a horizontal bar chart.
 */var HorizontalBarChart=/*#__PURE__*/function(){/**
   * Setup chart properties.
   * @param {Object} props - The properties to initialize the stage.
   * @param {Object} props.data - The data necessary to draw the chart.
   * @param {HTMLElement} props.element - The DOM element to append the chart.
   * @param {number} [props.height] - The height of the chart.
   * @param {Object} [props.margin] - The top, right, bottom and left margins.
   * @param {number} [props.margin.top] - The top margin.
   * @param {number} [props.margin.right] - The right margin.
   * @param {number} [props.margin.bottom] - The bottom margin.
   * @param {number} [props.margin.left] - The left margin.
   * @param {Object[]} [props.thresholds] - Thresholds that can be added to a chart.
   * @param {number} [props.thresholds[].moreThan] - Sets the positive threshold.
   * @param {number} [props.thresholds[].lessThan] - Sets the negative threshold.
   * @param {string} [props.thresholds[].color] - Threshold color (green, red).
   */function HorizontalBarChart(props){_classCallCheck(this,HorizontalBarChart);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:16,right:24,top:16,bottom:32},props.margin);this.height=props.height||250;this.thresholds=props.thresholds;this.x=_objectSpread({unit:''},props.x);this.axisPadding=8;this.fontSize=14;this.barWidth=6;this.animationSpeed=400;if(this.thresholds){this.margin.top+=8;}if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}}/**
   * Initialize the chart.
   * @public
   */_createClass(HorizontalBarChart,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),margin:this.margin});this.legend.init();this.draw();}/**
   * Destroy the chart and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data.
   * @public
   * @param data - The data necessary to draw the chart.
   */},{key:"draw",value:function draw(data){var _this106=this;this.data=data||this.data;this.data=this.legend.filter(this.data);this.width=this.stage.getCanvasWidth();var y=d3.scaleBand().domain(this.data.common).rangeRound([this.axisPadding,this.height]).paddingInner(1).paddingOuter(0.4);var xMin=d3.min(this.data.series,function(d){return d3.min(d.values);})>=0?0:d3.min(this.data.series,function(d){return d3.min(d.values);});var xMax=0;for(var i=0;i<this.data.common.length;i+=1){var sum=0;for(var k=0;k<this.data.series.length;k+=1){sum+=this.data.series[k].values[i];}if(sum>xMax){xMax=sum;}}var x=d3.scaleLinear().domain([xMin,xMax]).nice().range([0,this.width]);var axis=new Axis({position:'bottom',canvas:this.canvas,x:x,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,thresholds:this.thresholds,tickFormat:function tickFormat(d){return d3.format('.2s')(d).replace('.0','');},unit:this.x.unit});axis.init();var isMinLargerThanMax=Math.abs(xMin)>Math.abs(xMax);var hasLabelSpace=this.height/this.data.common.length>this.fontSize+this.axisPadding+this.barWidth*2;var barGroups=this.canvas.classed('bar-chart',true).selectAll('.bar-group').data(this.data.common);var barGroupsEnter=barGroups.enter().append('g').classed('bar-group',true);barGroupsEnter.append('text').classed('label',true).classed('text',true).classed('hidden',!hasLabelSpace).attr('x',isMinLargerThanMax?-3:2).attr('y',-this.barWidth-2).attr('text-anchor',isMinLargerThanMax?'end':'start').style('pointer-events','none').text(function(d){return d;});barGroupsEnter.append('text').classed('label',true).classed('value',true).attr('y',-this.barWidth-2).attr('text-anchor',isMinLargerThanMax?'end':'start').text(function(d,i){return d3.format(',')(_this106.data.series[0].values[i]).replace(/,/g,' ');}).classed('label',true).classed('value',true).classed('hidden',!hasLabelSpace).transition().duration(this.animationSpeed).attr('x',function(d,i,j){var labelTextLength=d3.select(j[i].parentNode).select('.label.text').node().getComputedTextLength()+16;return isMinLargerThanMax?-labelTextLength:labelTextLength;});barGroups.select('.label.value').text(function(d,i){return d3.format(',')(_this106.data.series[0].values[i]).replace(/,/g,' ');});barGroups.selectAll('.line-hover').attr('x1',-this.width).attr('x2',this.width);barGroupsEnter.merge(barGroups).transition().duration(this.animationSpeed).attr('transform',function(d){return"translate(".concat(isNaN(x(0))?1:x(0)+1,", ").concat(y(d),")");});var bars=barGroupsEnter.merge(barGroups).selectAll('.bar').data(function(d,i){var prevValues=[];return _this106.data.series.map(function(s,k){var getPrevious=function getPrevious(){if(k===0){return 0;}else{prevValues.push(_this106.data.series[k-1].values[i]);return prevValues.reduce(function(a,b){return a+b;});}};return{key:s.name,value:s.values[i],previous:getPrevious()};});});var getThresholdsClass=function getThresholdsClass(d){var color='';if(_this106.thresholds){_this106.thresholds.sort(function(a,b){return a.moreThan-b.moreThan||b.lessThan-a.lessThan;}).forEach(function(t){if(t.moreThan&&d.value>=t.moreThan||t.lessThan&&d.value<=t.lessThan){color=t.color;}});}return color;};bars.enter().append('line').merge(bars).style('pointer-events','none').attr('stroke-width',this.barWidth).attr('class',function(d){return'bar '+_this106.colorScale.get()(d.key)+' '+getThresholdsClass(d);}).transition().duration(this.animationSpeed).attr('x1',function(d){return-(x(0)-x(d.previous));}).attr('x2',function(d){return isNaN(d.value)?0:-(x(0)-x(d.value)+x(0)-x(d.previous));});barGroups.exit().remove();bars.exit().transition().duration(this.animationSpeed).attr('x1',0).attr('x2',0).remove();if(this.data.series.length>0){barGroupsEnter.append('line').classed('line-hover',true).attr('stroke-width',y(this.data.common[1])-y(this.data.common[0])).attr('stroke','blue').attr('opacity','0').attr('x1',-this.width).attr('x2',this.width).on('mouseover',function(group,i,selection){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','.2');allLabels.attr('opacity','.2');d3.select(selection[i].parentNode).selectAll('.bar').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').classed('hidden',false);}).on('mouseout',function(){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','1');allLabels.attr('opacity','1');allLabels.classed('hidden',!hasLabelSpace);});}}}]);return HorizontalBarChart;}();var Format=/*#__PURE__*/function(){function Format(){_classCallCheck(this,Format);}_createClass(Format,null,[{key:"formatTime",value:function formatTime(stringFormat){var format=stringFormat||'%d %B %Y';return d3.timeFormat(format);}},{key:"formatNumber",value:function formatNumber(stringFormat){var format=stringFormat||'.2r';return d3.format(format);}}]);return Format;}();var Tooltip=/*#__PURE__*/function(){/**
   * Common tooltip component for charts
   * @param {Object} props - The properties to initialize the tooltip
   * @param {HTMLElement} props.element - The DOM element to append the tooltip
   * @param {Object} props.data - The data necessary to populate the legend
   * @param {string} props.hoverClass - The class of the element you hover to show the tooltip
   * @param {Object} [props.format] - Format necessary for representing data
   * @param {string} [props.format.time] - Time specific format (see D3 formats)
   * @param {string} [props.format.value] - Number specific format (see D3 formats)
   * @param {boolean} [props.isTime] - Specifies if the tooltip woll be
   * @param {boolean} [props.rawMode] - Specifies if the tooltip will insert raw strings.
   * @param {boolean} [props.showSummary] - Show the summary values
   * @param {Object} [props.unit] - Format necessary for representing data
   * @param {string} [props.unit.title] - Unit represented next to the title
   * @param {string} [props.unit.value] - Unit represented above all the values
   */function Tooltip(props){var _this107=this;_classCallCheck(this,Tooltip);this.element=props.element;this.data=props.data;this.hoverClass=props.hoverClass;this.showSummary=props.showSummary;this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.format=_objectSpread({title:null,value:','},props.format);this.unit=_objectSpread({title:'',value:''},props.unit);this.rawMode=props.rawMode||false;this.isTime=props.isTime||false;if(props.colorScale){this.colorScale=props.colorScale;}else{this.colorScale=function(){var scale=new ColorScale({length:_this107.data.series.length});scale.init();return{get:function get(){return function(name){return'icon icon-alarm-level6 '+scale.get()(name);};}};}();}}/**
   * Creates the tooltip and adds the mousemove behavior
   */_createClass(Tooltip,[{key:"init",value:function init(){var _this108=this;// Clear tooltip if already exists
d3.select(this.element).selectAll('.chart-tooltip').remove();this.tooltip=d3.select(this.element).append('div').classed('chart-tooltip',true);this.content=this.tooltip.append('div').classed('content',true);var title=this.content.append('div').classed('title',true);title.append('span').classed('unit-title',true);title.append('span').classed('unit-value',true);var item=this.content.selectAll('.item').data(this.data.series.map(function(d){return d.name;})).enter().append('div').classed('item',true);if(!this.rawMode){item.append('i').attr('class',function(d){return _this108.colorScale.get()(d);});}item.append('span').classed('key',true);if(!this.rawMode){item.append('span').classed('value',true);if(this.showSummary&&this.data.summary){var summary=this.content.append('div').classed('summary',true);var summaryItem=summary.selectAll('.summary-item').data(this.data.summary.map(function(d){return d.name;})).enter().append('div').classed('summary-item',true);summaryItem.append('span').classed('key',true).text(function(d){return d;});summaryItem.append('span').classed('value',true);}}var hoverClassIsString=typeof this.hoverClass==='string'||this.hoverClass instanceof String;var hoverClassIsArray=Array.isArray(this.hoverClass);var hoverClassAggregate;if(hoverClassIsString){hoverClassAggregate=function hoverClassAggregate(){return d3.event.target.classList.contains(_this108.hoverClass);};}else if(hoverClassIsArray){hoverClassAggregate=function hoverClassAggregate(){for(var i=0;i<_this108.hoverClass.length;i+=1){if(d3.event.target.classList.contains(_this108.hoverClass[i])){return true;}}return false;};}var element=d3.select(this.element).select('svg');if(element.empty()){element=d3.select(this.element).select('.svg');}element.on('mousemove',function(){var mouseDistance=16;_this108.tooltip.classed('visible',function(){return hoverClassAggregate();}).style('top',function(){if(d3.event.clientY+_this108.tooltip.node().offsetHeight+mouseDistance>window.innerHeight){return d3.event.clientY-_this108.tooltip.node().offsetHeight-mouseDistance/2+'px';}else{return d3.event.clientY+16+'px';}}).style('left',function(){if(d3.event.clientX+_this108.tooltip.node().offsetWidth+mouseDistance*2>window.innerWidth){return d3.event.clientX-_this108.tooltip.node().offsetWidth-mouseDistance+'px';}else{return d3.event.clientX+16+'px';}});}).on('mouseleave',function(){_this108.tooltip.classed('visible',false);});}/**
   * Updates the data of the tooltip from a series.
   * @param {number} seriesIndex - The index of the series
   * @param {Object} newData - The updated data from the chart
   */},{key:"update",value:function update(seriesIndex,newData){var _this109=this;var title=this.content.select('.title');var unitTitle=title.select('.unit-title');var unitValue=title.select('.unit-value');unitValue.text(this.unit.value);if(this.isTime){unitTitle.text(Format.formatTime(this.format.title)(newData.common[seriesIndex]));}else{var label=Format.formatNumber(this.format.value)(newData.common[seriesIndex]);if(isNaN(label)){unitTitle.text(newData.common[seriesIndex]);}else{unitTitle.text(label+' '+this.unit.title);}}var div;if(!this.rawMode){var value=function value(d,data){var filteredSerie=data.filter(function(serie){return serie.name===d;})[0];if(filteredSerie){return filteredSerie.values[seriesIndex];}};div=this.content.selectAll('.item').classed('empty',function(d){return newData.series.filter(function(serie){return serie.name===d;}).length<1;});div.select('.value').text(function(d){return Format.formatNumber(_this109.format.value)(value(d,newData.series));});if(this.showSummary){var summaryItem=this.content.selectAll('.summary-item').classed('empty',function(d){return newData.summary.filter(function(serie){return serie.name===d;}).length<1;});summaryItem.select('.value').text(function(d){return Format.formatNumber(_this109.format.value)(value(d,newData.summary));});}}if(this.rawMode===true){var divUpdate=this.content.selectAll('.item').data(newData.series.map(function(d){return d.name;})).classed('empty',false);var divEnter=divUpdate.enter().append('span').classed('item',true);divUpdate.exit().remove();div=divUpdate.merge(divEnter);div.selectAll('.key').data(function(d){return[d];}).enter().append('span').classed('key',true);}div.select('.key').text(function(d){return d;});}/**
   * Updates the data of the tooltip for only one data point.
   * @param {number} commonX - The x value of the series.
   * @param {number} commonY - The y value of the series
   * @param {value} - The value of the series.
   */},{key:"updateSingle",value:function updateSingle(commonX,commonY,value){var _this110=this;var title=this.content.select('.title');var unitTitle=title.select('.unit-title');var unitValue=title.select('.unit-value');unitValue.text(this.unit.value);if(this.isTime){unitTitle.text(Format.formatTime(this.format.title)(commonX));}else{var label=Format.formatNumber(this.format.title)(commonX);if(isNaN(label)||typeof commonX==='string'){unitTitle.text(commonX);}else{unitTitle.text(label+' '+this.unit.title);}}var div=this.content.selectAll('.item').classed('empty',false);div.select('.key').text(commonY);div.select('.value').text(function(){return Format.formatNumber(_this110.format.value)(value);});}}]);return Tooltip;}();/**
 * @file Module to create Horizontal Bar Chart Grouped component.
 * @requires d3
 * @requires Stage
 * @requires Axis
 * @requires Tooltip
 * @requires Legend
 * @requires ColorScale
 */ /**
 * Class representing a horizontal bar grouped chart.
 */var HorizontalBarChartGrouped=/*#__PURE__*/function(){/**
   * Setup chart properties.
   * @param {Object} props - The properties to initialize the stage.
   * @param {Object} props.data - The data necessary to draw the chart.
   * @param {HTMLElement} props.element - The DOM element to append the chart.
   * @param {number} [props.height] - The height of the chart.
   * @param {Object} [props.margin] - The top, right, bottom and left margins.
   * @param {number} [props.margin.top] - The top margin.
   * @param {number} [props.margin.right] - The right margin.
   * @param {number} [props.margin.bottom] - The bottom margin.
   * @param {number} [props.margin.left] - The left margin.
   * @param {string} [props.x] - The X axis properties.
   * @param {string} [props.x.unit] - The unit of the X axis.
   * @param {Object} [props.tooltip] - Tooltip properties.
   * @param {boolean} [props.tooltip.isHidden] - Hide the tooltip.
   * @param {Object} [props.tooltip.format] - Format necessary for representing data.
   * @param {string} [props.tooltip.format.time] - Time specific format (see D3 formats).
   * @param {string} [props.tooltip.format.value] - Number specific format (see D3 formats).
   */function HorizontalBarChartGrouped(props){_classCallCheck(this,HorizontalBarChartGrouped);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:16,right:24,top:16,bottom:32},props.margin);this.height=props.height||250;this.thresholds=props.thresholds;this.x=_objectSpread({unit:''},props.x);this.tooltip=_objectSpread({},props.tooltip);this.axisPadding=8;this.fontSize=14;this.barWidth=6;this.animationSpeed=400;if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}}/**
   * Initialize the chart
   * @public
   */_createClass(HorizontalBarChartGrouped,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:this.margin});this.legend.init();this.tooltip=new Tooltip({element:this.element,data:this.data,unit:{value:this.x.unit},hoverClass:'line-hover'});this.tooltip.init();this.draw();}/**
   * Destroy the chart and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data.
   * @public
   * @param {Object} data - The data necessary to draw the chart.
   */},{key:"draw",value:function draw(data){var _this111=this;this.data=data||this.data;this.data=this.legend.filter(this.data);this.width=this.stage.getCanvasWidth();var y0=d3.scaleBand().domain(this.data.common).rangeRound([this.axisPadding,this.height+this.fontSize]).paddingInner(0.4).paddingOuter(0.3);var y1=d3.scaleBand().domain(this.data.series.map(function(d){return d.name;})).rangeRound([0,y0.bandwidth()]).padding(0);var xMin=d3.min(this.data.series,function(d){return d3.min(d.values);})>=0?0:d3.min(this.data.series,function(d){return d3.min(d.values);});var xMax=d3.max(this.data.series,function(d){return d3.max(d.values);});var x=d3.scaleLinear().domain([xMin,xMax]).nice().rangeRound([0,this.width]);var axis=new Axis({position:'bottom',canvas:this.canvas,x:x,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,tickFormat:function tickFormat(d){return d3.format('.2s')(d).replace('.0','');},unit:this.x.unit});axis.init();var hasLabelSpace=this.height/this.data.common.length>this.axisPadding*2+this.fontSize+this.barWidth*this.data.common.length;var barGroups=this.canvas.classed('bar-chart',true).selectAll('.bar-group').data(this.data.common);var barGroupsEnter=barGroups.enter().append('g').classed('bar-group',true);barGroupsEnter.append('text').classed('label',true).classed('hidden',!hasLabelSpace).attr('x','2').attr('y',-this.barWidth-2).style('pointer-events','none').text(function(d){return d;});barGroups.selectAll('.line-hover').attr('x1',-this.width).attr('x2',this.width);barGroupsEnter.merge(barGroups).transition().duration(this.animationSpeed).attr('transform',function(d){return"translate(".concat(isNaN(x(0))?1:x(0)+1,", ").concat(y0(d),")");});var bars=barGroupsEnter.merge(barGroups).selectAll('.bar').data(function(d,i){return _this111.data.series.map(function(serie){return{key:serie.name,value:serie.values[i]};});});bars.enter().append('line').merge(bars).style('pointer-events','none').attr('stroke-width',this.barWidth).attr('class',function(d){return'bar '+_this111.colorScale.get()(d.key);}).transition().duration(this.animationSpeed).attr('y1',function(d){return y1(d.key);}).attr('y2',function(d){return y1(d.key);}).attr('x1',0).attr('x2',function(d){return isNaN(d.value)?0:x(d.value)-x(0);});barGroups.exit().remove();bars.exit().transition().duration(this.animationSpeed).attr('x2',0).remove();if(this.data.series.length>0){barGroupsEnter.append('line').classed('line-hover',true).attr('stroke-width',y0(this.data.common[1])-y0(this.data.common[0])).attr('stroke','blue').attr('opacity','0').attr('x1',-this.width).attr('x2',this.width).on('mouseover',function(group,i,selection){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');_this111.tooltip.update(i,_this111.data);all.attr('opacity','.2');allLabels.attr('opacity','.2');d3.select(selection[i].parentNode).selectAll('.bar').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').attr('opacity','1');}).on('mouseout',function(){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','1');allLabels.attr('opacity','1');});}}/**
   * Highlight one common element in all series.
   * @private
   * @param {String} key - The key matching the common element.
   */},{key:"_highlight",value:function _highlight(key){var bars=this.canvas.selectAll('.bar');if(key){bars.attr('opacity',function(d){return d.key===key?'1':'.2';});}else{bars.attr('opacity','1');}}}]);return HorizontalBarChartGrouped;}();/**
 * @file Module to create Horizontal Bar Chart Stacked component.
 * @requires d3
 * @requires Stage
 * @requires Axis
 * @requires Legend
 * @requires ColorScale
 */ /**
 * Class representing a horizontal bar chart stacked.
 */var HorizontalBarChartStacked=/*#__PURE__*/function(){/**
   * Setup chart properties.
   * @param {Object} props - The properties to initialize the stage.
   * @param {Object} props.data - The data necessary to draw the chart.
   * @param {HTMLElement} props.element - The DOM element to append the chart.
   * @param {number} [props.height] - The height of the chart.
   * @param {Object} [props.margin] - The top, right, bottom and left margins.
   * @param {number} [props.margin.top] - The top margin.
   * @param {number} [props.margin.right] - The right margin.
   * @param {number} [props.margin.bottom] - The bottom margin.
   * @param {number} [props.margin.left] - The left margin.
   * @param {string} [props.x] - The X axis properties.
   * @param {string} [props.x.unit] - The unit of the X axis.
   */function HorizontalBarChartStacked(props){_classCallCheck(this,HorizontalBarChartStacked);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:16,right:24,top:16,bottom:32},props.margin);this.height=props.height||250;this.thresholds=props.thresholds;this.x=_objectSpread({unit:''},props.x);this.axisPadding=8;this.fontSize=14;this.barWidth=6;this.animationSpeed=400;this.valueSeparator=2;if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}}/**
   * Initialize the chart.
   * @public
   */_createClass(HorizontalBarChartStacked,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:this.margin});this.legend.init();this.tooltip=new Tooltip({element:this.element,data:this.data,unit:{value:this.x.unit},hoverClass:'line-hover'});this.tooltip.init();this.draw();}/**
   * Destroy the chart and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data.
   * @public
   * @param {Object} data - The data necessary to draw the chart.
   */},{key:"draw",value:function draw(data){var _this112=this;this.data=data||this.data;this.data=this.legend.filter(this.data);this.width=this.stage.getCanvasWidth();var y0=d3.scaleBand().domain(this.data.common).rangeRound([this.axisPadding,this.height]).paddingInner(1).paddingOuter(0.4);var xMin=d3.min(this.data.series,function(d){return d3.min(d.values);})>=0?0:d3.min(this.data.series,function(d){return d3.min(d.values);});var xMax=0;for(var i=0;i<this.data.common.length;i+=1){var sum=0;for(var y=0;y<this.data.series.length;y+=1){sum+=this.data.series[y].values[i];}if(sum>xMax){xMax=sum;}}var x=d3.scaleLinear().domain([xMin,xMax]).nice().range([0,this.width]);var axis=new Axis({position:'bottom',canvas:this.canvas,x:x,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,tickFormat:function tickFormat(d){return d3.format('.2s')(d).replace('.0','');},unit:this.x.unit});axis.init();var hasLabelSpace=this.height/this.data.common.length>this.fontSize+this.axisPadding+this.barWidth*2;var barGroups=this.canvas.classed('bar-chart',true).selectAll('.bar-group').data(this.data.common);var barGroupsEnter=barGroups.enter().append('g').classed('bar-group',true);barGroupsEnter.append('text').classed('label',true).classed('hidden',!hasLabelSpace).attr('x','2').attr('y',-this.barWidth-2).style('pointer-events','none').text(function(d){return d;});barGroups.selectAll('.line-hover').attr('x1',-this.width).attr('x2',this.width);barGroupsEnter.merge(barGroups).transition().duration(this.animationSpeed).attr('transform',function(d){return"translate(".concat(isNaN(x(0))?1:x(0)+1,", ").concat(y0(d),")");});var bars=barGroupsEnter.merge(barGroups).selectAll('.bar').data(function(d,i){var prevValues=[];return _this112.data.series.map(function(s,k){var getPrevious=function getPrevious(){if(k===0){return 0;}else{prevValues.push(_this112.data.series[k-1].values[i]);return prevValues.reduce(function(a,b){return a+b;});}};return{key:s.name,value:s.values[i],previous:getPrevious()};});});bars.enter().append('line').merge(bars).style('pointer-events','none').attr('stroke-width',this.barWidth).attr('class',function(d){return'bar '+_this112.colorScale.get()(d.key);}).transition().duration(this.animationSpeed).attr('x1',function(d){return-(x(0)-x(d.previous));}).attr('x2',function(d){return isNaN(d.value)?0:-(x(0)-x(d.value)+x(0)-x(d.previous)+_this112.valueSeparator);});barGroups.exit().remove();bars.exit().transition().duration(this.animationSpeed).attr('x1',0).attr('x2',0).remove();if(this.data.series.length>0){barGroupsEnter.append('line').classed('line-hover',true).attr('stroke-width',y0(this.data.common[1])-y0(this.data.common[0])).attr('stroke','blue').attr('opacity','0').attr('x1',-this.width).attr('x2',this.width).on('mouseover',function(group,i,selection){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');_this112.tooltip.update(i,_this112.data);all.attr('opacity','.2');allLabels.attr('opacity','.2');d3.select(selection[i].parentNode).selectAll('.bar').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').attr('opacity','1');}).on('mouseout',function(){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','1');allLabels.attr('opacity','1');});}}/**
   * Highlight one common element in all series.
   * @private
   * @param {String} key - The key matching the common element.
   */},{key:"_highlight",value:function _highlight(key){var bars=this.canvas.selectAll('.bar');if(key){bars.attr('opacity',function(d){return d.key===key?'1':'.2';});}else{bars.attr('opacity','1');}}}]);return HorizontalBarChartStacked;}();/**
 * @file Component to create vertical bar chart
 */var VerticalBarChart=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object[]} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {Object[]} [props.thresholds] - Thresholds that can be added to a chart
   * @param {number} [props.thresholds[].moreThan] - Sets the positive threshold
   * @param {number} [props.thresholds[].lessThan] - Sets the negative threshold
   * @param {string} [props.thresholds[].color] - Threshold color (green, red)
   * @param {string} [props.y] - The Y axis properties
   * @param {string} [props.y.unit] - The unit of the Y axis
   */function VerticalBarChart(props){_classCallCheck(this,VerticalBarChart);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:32,right:24,top:24,bottom:24},props.margin);this.height=props.height||250;this.thresholds=props.thresholds;this.y=_objectSpread({unit:''},props.y);this.axisPadding=8;this.fontSize=14;this.barWidth=6;this.animationSpeed=400;if(this.thresholds){this.margin.right+=this.axisPadding;}if(this.y.unit){this.margin.top+=this.fontSize;}}/**
   * Initialize the chart
   */_createClass(VerticalBarChart,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),margin:_objectSpread({},this.margin,{left:0})});this.legend.init();this.draw();}/**
   * Destroy the cart
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data
   * @param {Object[]} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){var _this113=this;this.data=data||this.data;this.data=this.legend.filter(this.data);this.width=this.stage.getCanvasWidth();var x0=d3.scaleBand().domain(this.data.common).rangeRound([0,this.width]).paddingInner(0.7).paddingOuter(0.3);var yMin=d3.min(this.data.series,function(d){return d3.min(d.values);})>=0?0:d3.min(this.data.series,function(d){return d3.min(d.values);});var yMax=0;for(var i=0;i<this.data.common.length;i+=1){var sum=0;for(var _y=0;_y<this.data.series.length;_y+=1){sum+=this.data.series[_y].values[i];}if(sum>yMax){yMax=sum;}}var y=d3.scaleLinear().domain([yMin,yMax]).nice().range([this.height,0]);var axis=new Axis({position:'left',canvas:this.canvas,y:y,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,thresholds:this.thresholds,ticks:this.height/80,tickFormat:function tickFormat(d){return d3.format('.2s')(d).replace('.0','');},unit:this.y.unit});axis.init();var hasLabelSpace=true;var hasNegativeValues=false;var seriesDistance;if(this.data.series.length>0){seriesDistance=x0(this.data.common[1])-x0(this.data.common[0]);this.data.common.forEach(function(d){if(hasLabelSpace){hasLabelSpace=d.length*_this113.fontSize/1.5<seriesDistance;}});this.data.series.forEach(function(d){if(!hasNegativeValues&&d.values.filter(function(i){return i<0;}).length>0){hasNegativeValues=true;}d.values.forEach(function(value){var valueLength=value.toString().length*_this113.fontSize/1.5;if(hasLabelSpace){hasLabelSpace=valueLength<seriesDistance;}});});}var barGroups=this.canvas.classed('bar-chart',true).selectAll('.bar-group').data(this.data.common);var barGroupsEnter=barGroups.enter().append('g').classed('bar-group',true);var barValuePosition=function barValuePosition(selection){selection.text(function(d,i){return d3.format(',')(_this113.data.series[0].values[i]).replace(/,/g,' ');}).transition().duration(_this113.animationSpeed).attr('y',function(d,i){return y(_this113.data.series[0].values[i])-y(0)+(_this113.data.series[0].values[i]>=0?-4:_this113.fontSize);});};barGroupsEnter.append('text').attr('text-anchor','middle').classed('label',true).classed('value',true).classed('hidden',!hasLabelSpace).call(barValuePosition);barGroupsEnter.append('text').classed('label',true).classed('text',true).classed('hidden',!hasLabelSpace).attr('text-anchor','middle').style('pointer-events','none').text(function(d){return d;}).transition().duration(this.animationSpeed).attr('y',hasNegativeValues?this.height-y(0)+this.margin.bottom-2:this.fontSize+2);barGroups.select('.label.value').call(barValuePosition);barGroups.selectAll('.line-hover').attr('stroke-width',seriesDistance);barGroupsEnter.merge(barGroups).transition().duration(this.animationSpeed).attr('transform',function(d){return"translate(".concat(x0(d)+x0.bandwidth()/2+1,", ").concat(y(0,d),")");});var bars=barGroupsEnter.merge(barGroups).selectAll('.bar').data(function(d,i){var prevValues=[];return _this113.data.series.map(function(s,k){var getPrevious=function getPrevious(){if(k===0){return 0;}else{prevValues.push(_this113.data.series[k-1].values[i]);return prevValues.reduce(function(a,b){return a+b;});}};return{key:s.name,value:s.values[i],previous:getPrevious()};});});var getThresholdsClass=function getThresholdsClass(d){var color='';if(_this113.thresholds){_this113.thresholds.sort(function(a,b){return a.moreThan-b.moreThan||b.lessThan-a.lessThan;}).forEach(function(t){if(t.moreThan&&d.value>=t.moreThan||t.lessThan&&d.value<=t.lessThan){color=t.color;}});}return color;};bars.enter().append('line').merge(bars).style('pointer-events','none').attr('stroke-width',this.barWidth).attr('class',function(d){return'bar '+_this113.colorScale.get()(d.key)+' '+getThresholdsClass(d);}).transition().duration(this.animationSpeed).attr('y1',function(d){return-(y(0)-y(d.previous));}).attr('y2',function(d){return isNaN(d.value)?0:-(y(0)-y(d.value)+y(0)-y(d.previous));});barGroups.exit().remove();bars.exit().transition().duration(this.animationSpeed).attr('y1',0).attr('y2',0).remove();if(this.data.series.length>0){barGroupsEnter.append('line').classed('line-hover',true).attr('stroke-width',seriesDistance).attr('stroke','blue').attr('opacity','0').attr('y1',-this.height).attr('y2',this.height).on('mouseover',function(group,i,selection){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','.2');allLabels.attr('opacity','.2');d3.select(selection[i].parentNode).selectAll('.bar').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').classed('hidden',false);}).on('mouseout',function(){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','1');allLabels.attr('opacity','1');allLabels.classed('hidden',!hasLabelSpace);});}}}]);return VerticalBarChart;}();/**
 * @file Component to create grouped vertical bar chart
 */var VerticalBarChartGrouped=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {string} [props.y] - The Y axis properties
   * @param {string} [props.y.unit] - The unit of the Y axis
   */function VerticalBarChartGrouped(props){_classCallCheck(this,VerticalBarChartGrouped);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:32,right:24,top:24,bottom:24},props.margin);this.height=props.height||250;this.thresholds=props.thresholds;this.y=_objectSpread({unit:''},props.y);this.axisPadding=8;this.fontSize=14;this.barWidth=6;this.animationSpeed=400;if(this.y.unit){this.margin.top+=this.fontSize+this.axisPadding;}}/**
   * Initialize the chart
   */_createClass(VerticalBarChartGrouped,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:_objectSpread({},this.margin,{left:0})});this.legend.init();this.tooltip=new Tooltip({element:this.element,data:this.data,unit:{value:this.y.unit},hoverClass:'line-hover'});this.tooltip.init();this.draw();}/**
   * Destroy the cart
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data
   * @param {Object} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){var _this114=this;this.data=data||this.data;this.data=this.legend.filter(this.data);this.width=this.stage.getCanvasWidth();var x0=d3.scaleBand().domain(this.data.common).rangeRound([0,this.width]).paddingInner(0.7).paddingOuter(0.3);var x1=d3.scaleBand().domain(this.data.series.map(function(d){return d.name;})).rangeRound([-x0.bandwidth(),x0.bandwidth()]).padding(1);var yMin=d3.min(this.data.series,function(d){return d3.min(d.values);})>=0?0:d3.min(this.data.series,function(d){return d3.min(d.values);});var yMax=d3.max(this.data.series,function(d){return d3.max(d.values);})<=0?0:d3.max(this.data.series,function(d){return d3.max(d.values);});var y=d3.scaleLinear().domain([yMin,yMax]).nice().rangeRound([this.height,0]);var axis=new Axis({position:'left',canvas:this.canvas,y:y,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,ticks:this.height/80,tickFormat:function tickFormat(d){return d3.format('.2s')(d).replace('.0','');},unit:this.y.unit});axis.init();var hasLabelSpace=true;var hasNegativeValues=false;var seriesDistance;if(this.data.series.length>0){seriesDistance=x0(this.data.common[1])-x0(this.data.common[0]);this.data.common.forEach(function(d){if(hasLabelSpace){hasLabelSpace=d.length*_this114.fontSize/1.5<seriesDistance;}});this.data.series.forEach(function(d){if(!hasNegativeValues&&d.values.filter(function(i){return i<0;}).length>0){hasNegativeValues=true;}});}var barGroups=this.canvas.classed('bar-chart',true).selectAll('.bar-group').data(this.data.common);var barGroupsEnter=barGroups.enter().append('g').classed('bar-group',true);var labelPosition=function labelPosition(selection){selection.transition().duration(_this114.animationSpeed).attr('y',hasNegativeValues?_this114.height-y(0)+_this114.margin.bottom-2:_this114.fontSize+2);};barGroupsEnter.append('text').classed('label',true).classed('hidden',!hasLabelSpace).attr('text-anchor','middle').style('pointer-events','none').text(function(d){return d;}).call(labelPosition);barGroups.selectAll('.label').call(labelPosition);barGroups.selectAll('.line-hover').attr('stroke-width',seriesDistance);barGroupsEnter.merge(barGroups).transition().duration(this.animationSpeed).attr('transform',function(d){return"translate(".concat(x0(d)+x0.bandwidth()/2+1,", ").concat(y(0,d),")");});var bars=barGroupsEnter.merge(barGroups).selectAll('.bar').data(function(d,i){return _this114.data.series.map(function(serie){return{key:serie.name,value:serie.values[i]};});},function(d){return d.key;});bars.enter().append('line').merge(bars).style('pointer-events','none').attr('stroke-width',this.barWidth).attr('class',function(d){return'bar '+_this114.colorScale.get()(d.key);}).transition().duration(this.animationSpeed).attr('x1',function(d){return x1(d.key);}).attr('x2',function(d){return x1(d.key);}).attr('y1',0).attr('y2',function(d){return isNaN(d.value)?0:y(d.value)-y(0);});barGroups.exit().remove();bars.exit().transition().duration(this.animationSpeed).attr('y2',0).remove();if(this.data.series.length>0){barGroupsEnter.append('line').classed('line-hover',true).attr('stroke-width',seriesDistance).attr('stroke','blue').attr('opacity','0').attr('y1',-this.height).attr('y2',this.height).on('mouseover',function(group,i,selection){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');_this114.tooltip.update(i,_this114.data);all.attr('opacity','.2');allLabels.attr('opacity','.2');d3.select(selection[i].parentNode).selectAll('.bar').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').attr('opacity','1');}).on('mouseout',function(){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','1');allLabels.attr('opacity','1');});}}/**
   * Highlight one common element in all series
   * @param {String} key - The key matching the common element
   * @private
   */},{key:"_highlight",value:function _highlight(key){var bars=this.canvas.selectAll('.bar');if(key){bars.attr('opacity',function(d){return d.key===key?'1':'.2';});}else{bars.attr('opacity','1');}}}]);return VerticalBarChartGrouped;}();/**
 * @file Component to create stacked vertical bar chart
 */var VerticalBarChartStacked=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {string} [props.y] - The Y axis properties
   * @param {string} [props.y.unit] - The unit of the Y axis
   */function VerticalBarChartStacked(props){_classCallCheck(this,VerticalBarChartStacked);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:32,right:24,top:24,bottom:24},props.margin);this.height=props.height||250;this.thresholds=props.thresholds;this.y=_objectSpread({unit:''},props.y);this.axisPadding=8;this.fontSize=14;this.barWidth=6;this.animationSpeed=400;this.valueSeparator=2;if(this.y.unit){this.margin.top+=this.fontSize+this.axisPadding;}}/**
   * Initialize the chart
   */_createClass(VerticalBarChartStacked,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:_objectSpread({},this.margin,{left:0})});this.legend.init();this.tooltip=new Tooltip({element:this.element,data:this.data,unit:{value:this.y.unit},hoverClass:'line-hover'});this.tooltip.init();this.draw();}/**
   * Destroy the cart
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data
   * @param {Object} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){var _this115=this;this.data=data||this.data;this.data=this.legend.filter(this.data);this.width=this.stage.getCanvasWidth();var x0=d3.scaleBand().domain(this.data.common).rangeRound([0,this.width]).paddingInner(0.7).paddingOuter(0.3);var yMin=d3.min(this.data.series,function(d){return d3.min(d.values);})>=0?0:d3.min(this.data.series,function(d){return d3.min(d.values);});var yMax=0;for(var i=0;i<this.data.common.length;i+=1){var sum=0;for(var _y2=0;_y2<this.data.series.length;_y2+=1){sum+=this.data.series[_y2].values[i];}if(sum>yMax){yMax=sum;}}var y=d3.scaleLinear().domain([yMin,yMax]).nice().range([this.height,0]);var axis=new Axis({position:'left',canvas:this.canvas,y:y,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,ticks:this.height/80,tickFormat:function tickFormat(d){return d3.format('.2s')(d).replace('.0','');},unit:this.y.unit});axis.init();var hasLabelSpace=true;var hasNegativeValues=false;var seriesDistance;if(this.data.series.length>0){seriesDistance=x0(this.data.common[1])-x0(this.data.common[0]);this.data.common.forEach(function(d){if(hasLabelSpace){hasLabelSpace=d.length*_this115.fontSize/1.5<seriesDistance;}});this.data.series.forEach(function(d){if(!hasNegativeValues&&d.values.filter(function(i){return i<0;}).length>0){hasNegativeValues=true;}});}var barGroups=this.canvas.classed('bar-chart',true).selectAll('.bar-group').data(this.data.common);var barGroupsEnter=barGroups.enter().append('g').classed('bar-group',true);var labelPosition=function labelPosition(selection){selection.transition().duration(_this115.animationSpeed).attr('y',hasNegativeValues?_this115.height-y(0)+_this115.margin.bottom-2:_this115.fontSize+2);};barGroupsEnter.append('text').classed('label',true).classed('hidden',!hasLabelSpace).attr('text-anchor','middle').style('pointer-events','none').text(function(d){return d;}).call(labelPosition);barGroups.selectAll('.label').classed('hidden',!hasLabelSpace).call(labelPosition);barGroups.selectAll('.line-hover').attr('stroke-width',seriesDistance);barGroupsEnter.merge(barGroups).transition().duration(this.animationSpeed).attr('transform',function(d){return"translate(".concat(x0(d)+x0.bandwidth()/2+1,", ").concat(y(0,d),")");});var bars=barGroupsEnter.merge(barGroups).selectAll('.bar').data(function(d,i){var prevValues=[];return _this115.data.series.map(function(s,k){var getPrevious=function getPrevious(){if(k===0){return 0;}else{prevValues.push(_this115.data.series[k-1].values[i]);return prevValues.reduce(function(a,b){return a+b;});}};return{key:s.name,value:s.values[i],previous:getPrevious()};});});bars.enter().append('line').merge(bars).style('pointer-events','none').attr('stroke-width',this.barWidth).attr('class',function(d){return'bar '+_this115.colorScale.get()(d.key);}).transition().duration(this.animationSpeed).attr('y1',function(d){return-(y(0)-y(d.previous));}).attr('y2',function(d){return isNaN(d.value)?0:-(y(0)-y(d.value)+y(0)-y(d.previous)-_this115.valueSeparator);});barGroups.exit().remove();bars.exit().transition().duration(this.animationSpeed).attr('y1',0).attr('y2',0).remove();if(this.data.series.length>0){barGroupsEnter.append('line').classed('line-hover',true).attr('stroke-width',seriesDistance).attr('stroke','blue').attr('opacity','0').attr('y1',-this.height).attr('y2',this.height).on('mouseover',function(group,i,selection){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');_this115.tooltip.update(i,_this115.data);all.attr('opacity','.2');allLabels.attr('opacity','.2');d3.select(selection[i].parentNode).selectAll('.bar').attr('opacity','1');d3.select(selection[i].parentNode).selectAll('.label').attr('opacity','1');}).on('mouseout',function(){var all=barGroupsEnter.selectAll('.bar');var allLabels=barGroupsEnter.selectAll('.label');all.attr('opacity','1');allLabels.attr('opacity','1');});}}/**
   * Highlight one common element in all series
   * @param {String} key - The key matching the common element
   * @private
   */},{key:"_highlight",value:function _highlight(key){var bars=this.canvas.selectAll('.bar');if(key){bars.attr('opacity',function(d){return d.key===key?'1':'.2';});}else{bars.attr('opacity','1');}}}]);return VerticalBarChartStacked;}();/**
 * @file Component to create line chart
 */var LineChart=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {Object[]} [props.thresholds] - Thresholds that can be added to a chart
   * @param {number} [props.thresholds[].moreThan] - Sets the positive threshold
   * @param {number} [props.thresholds[].lessThan] - Sets the negative threshold
   * @param {string} [props.thresholds[].color] - Threshold color (green, red)
   * @param {Object} [props.y] - Y axis properties
   * @param {boolean} [props.y.startFromZero] - If Y axis starts on zero
   * @param {boolean} [props.y.isLogarithmic] - If Y axis is logarithmic
   * @param {string} [props.y.unit] - The Y axis unit
   * @param {string} [props.y.tickFormat] - The Y axis tick format
   * @param {Object} [props.x] - X axis properties
   * @param {boolean} [props.x.isTime] - If X axis is time-based
   * @param {string} [props.x.unit] - The X axis unit
   * @param {string} [props.x.tickFormat] - The X axis tick format
   * @param {Object} [props.format] - Format used for line chart data manipulation
   * @param {string} [props.format.input] - Format used to parse the data input
   * @param {Object} [props.tooltip] - Tooltip properties
   * @param {boolean} [props.tooltip.isHidden] - Hide the tooltip
   * @param {Object} [props.tooltip.format] - Format necessary for representing data
   * @param {string} [props.tooltip.format.title] - Time specific format (see D3 formats)
   * @param {string} [props.tooltip.format.value] - Number specific format (see D3 formats)
   * @param {boolean} [props.hasLiveData] - Enables sliding animation used  for live data only
   */function LineChart(props){_classCallCheck(this,LineChart);this.data=props.data;this.element=props.element;this.height=props.height||250;this.margin=_objectSpread({top:25,bottom:35,right:25,left:35},props.margin);this.thresholds=props.thresholds;this.y=_objectSpread({startFromZero:true,isLogarithmic:false,unit:''},props.y);this.x=_objectSpread({isTime:true,unit:''},props.x);this.format=_objectSpread({input:'%Y-%m-%d'},props.format);this.tooltip=_objectSpread({format:{title:null,value:'.2f'},isHidden:false},props.tooltip);this.hasLiveData=props.hasLiveData||false;// params
this.axisPadding=8;this.fontSize=14;this.id=Date.now();this.firstDrawFlag=true;this.animationSpeed=980;if(this.y.unit){this.margin.top+=this.fontSize+this.axisPadding;}if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}}/**
   * Initialize the chart
   */_createClass(LineChart,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:_objectSpread({},this.margin,{left:0})});this.legend.init();this.tooltipBox=new Tooltip({element:this.element,data:this.data,hoverClass:'mouse-area',format:this.tooltip.format,isTime:this.x.isTime,unit:{value:this.y.unit,title:this.x.unit}});this.tooltipBox.init();this._sortCommonData(this.data.common,this.x.isTime);this.draw();}/**
   * Destroy method
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data
   * @param {Object[]} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){var _this116=this;this.data=data||this.data;if(!this.hasLiveData){this.data=this.legend.filter(this.data);}if(this.x.isTime){this.data.common.forEach(function(date,i){if(!(date instanceof Date)){var formatedDate=Format.formatTime(_this116.format.input)(new Date(date));_this116.data.common[i]=d3.timeParse(_this116.format.input)(formatedDate);}});}this.width=this.stage.getCanvasWidth();/**
     * X axis
     */var distanceBetween2Points=0;// Time scale: default (time series)
this.xScale=d3.scaleTime().domain(d3.extent(this.data.common)).range([0,this.width]);// Linear scale: not time series
if(!this.x.isTime){this.xScale=d3.scaleLinear().domain(d3.extent(this.data.common)).range([0,this.width]);}distanceBetween2Points=this.xScale(-this.data.common[1])-this.xScale(-this.data.common[0]);if(!this.firstDrawFlag&&this.hasLiveData){this.xScale.domain(d3.extent(this.data.common)).range([0,this.width-distanceBetween2Points]);}var xTickFormat;if(this.x.isTime&&this.x.tickFormat){xTickFormat=d3.timeFormat(this.x.tickFormat);}else if(this.x.tickFormat){xTickFormat=d3.format(this.x.tickFormat);}// Create new X axis
var xAxis=new Axis({position:'bottom',canvas:this.canvas,x:this.xScale,width:this.width,height:this.height,margin:this.margin,fontSize:14,axisPadding:8,hasDomain:true,unit:this.x.unit,tickFormat:xTickFormat,animationSpeed:this.animationSpeed});// Init X axis & append to Canvas
xAxis.init();/**
     * Y axis
     */ // Linear scale: default (linear, start from zero)
var min=d3.min(this.data.series,function(d){return d3.min(d.values);});var max=d3.max(this.data.series,function(d){return d3.max(d.values);});if(this.y.startFromZero){min=min<0?min:0;}this.yScale=d3.scaleLinear().domain([min,max]).nice().range([this.height,0]);var tScale=d3.scaleLinear().domain([min,max]).nice().range([0,100]);//  Logarithmic scale
if(this.y.isLogarithmic){min=d3.min(this.data.series,function(d){return d3.min(d.values);});this.yScale=d3.scaleLog().domain([min,max]).nice().range([this.height,0]);}var yTickFormat;if(this.y.tickFormat){yTickFormat=d3.format(this.y.tickFormat);}// Create new Y axis
var yAxis=new Axis({position:'left',canvas:this.canvas,y:this.yScale,width:this.width,height:this.height,margin:this.margin,fontSize:14,axisPadding:10,hasDomain:false,ticks:this.height/60,thresholds:this.thresholds,tickFormat:yTickFormat,unit:this.y.unit});// Init Y axis & append to Canvas
yAxis.init();/**
     * Value line (path)
     */ // Default path: date information
var valueline=d3.line().defined(function(d){return!isNaN(d);}).x(function(d,i){return _this116.xScale(_this116.data.common[i]);}).y(function(d){return _this116.yScale(d);});var onTransition=function onTransition(){_this116.xScale.domain(d3.extent(_this116.data.common)).range([0,_this116.width]);xAxis.draw();_this116.showTooltip(true);};// Append path to Canvas
var lineChart=this.canvas.classed('line-chart',true);var lines=lineChart.select('.line-group').empty()?lineChart.append('g').classed('line-group',true).attr('clip-path',"url(#".concat(this.id,")")).selectAll('.line').data(this.data.series,function(d){return d.name;}):lineChart.select('.line-group').selectAll('.line').data(this.data.series,function(d){return d.name;});// Enter
lines.enter().append('path').attr('d',function(d){return valueline(d.values);}).attr('class',function(d){return'line '+_this116.colorScale.get()(d.name);}).attr('name',function(d){return d.name;});if(this.data.series.length>0){// Update
if(this.hasLiveData){if(this.firstDrawFlag){this.canvas.append('defs').append('clipPath').attr('id',this.id).append('rect').classed('clip-rectangle',true).attr('y',-1).attr('width',this.width).attr('height',this.height+1);}else{this.canvas.selectAll('.line').attr('d',function(d){return valueline(d.values);}).attr('class',function(d){return'line '+_this116.colorScale.get()(d.name);}).attr('transform',null).transition().duration(this.animationSpeed).on('start',onTransition).attr('transform',"translate(".concat(distanceBetween2Points,")"));this.canvas.select('.clip-rectangle').attr('width',this.width);}}else{this.canvas.selectAll('.line').transition().duration(this.animationSpeed).on('start',onTransition).attr('d',function(d){return valueline(d.values);}).attr('class',function(d){return'line '+_this116.colorScale.get()(d.name);});}}// Exit
lines.exit().remove();// Threshold
if(this.thresholds){var minValue=0;if(!this.y.startFromZero){minValue=d3.min(this.data.series,function(d){return d3.min(d.values);});}var maxValue=d3.max(this.data.series,function(d){return d3.max(d.values);});var input=this.thresholds;var output=[];output.push({offset:tScale(minValue),color:'line'});input.forEach(function(element){output.push({offset:tScale(element.moreThan||element.lessThan),color:'line'});output.push({offset:tScale(element.moreThan||element.lessThan),color:'line'});});output.push({offset:tScale(maxValue),color:'line'});output.sort(function(a,b){return a.offset-b.offset;});output.forEach(function(element){element.offset=element.offset+'%';});// LessThan
var lessThanArray=input.filter(function(element){if(element.lessThan){return element;}});if(lessThanArray.length>0){lessThanArray.sort(function(a,b){return a.lessThan-b.lessThan;});var j=0;for(var i=0;i<lessThanArray.length;i+=1){output[j].color=lessThanArray[i].color;output[j+1].color=lessThanArray[i].color;j+=2;}}// MoreThan
var moreThanArray=input.filter(function(element){if(element.moreThan){return element;}});if(moreThanArray.length>0){moreThanArray.sort(function(a,b){return b.moreThan-a.moreThan;});var _j=output.length-1;for(var _i9=0;_i9<moreThanArray.length;_i9+=1){output[_j].color=moreThanArray[_i9].color;output[_j-1].color=moreThanArray[_i9].color;_j-=2;}}if(this.data.series.length>0){this.canvas.append('linearGradient').classed('linear-gradient',true).attr('id',"gradient-".concat(this.element.id)).attr('gradientUnits','userSpaceOnUse').attr('x1',0).attr('y1',this.height).attr('x2',0).attr('y2',0).selectAll('stop').data(output).enter().append('stop').attr('offset',function(d){return d.offset;}).attr('stop-color',function(d){return d.color;});// Paint the lines with threshold colors
var pathLines=this.element.querySelectorAll('path.line');Array.from(pathLines).forEach(function(line){line.setAttribute('style',"stroke: url(#gradient-".concat(_this116.element.id,")"));});}}/**
     * Tooltip & hovering
     */if(!this.tooltip.isHidden){// Append: tooltip line
this.tooltipLine=this.canvas.select('.tooltip-line').empty()?this.canvas.append('path').classed('tooltip-line',true):this.canvas.select('.tooltip-line');// Append: tooltip circles
var circlesContainer=this.canvas.select('.circles').empty()?this.canvas.append('g').classed('circles',true):this.canvas.select('.circles');var tooltipCirclesGroup=circlesContainer.selectAll('.tooltip-circle').data(this.data.series,function(d){return d.name;});tooltipCirclesGroup.enter().append('circle').attr('r',3).attr('opacity',0).attr('class',function(d){return"tooltip-circle ".concat(_this116.colorScale.get()(d.name));});// Append the mouse interaction area
var mouseArea=this.canvas.select('.mouse-area').empty()?this.canvas.append('svg:rect').classed('mouse-area',true):this.canvas.select('.mouse-area');mouseArea.attr('width',this.width).attr('height',this.height).attr('fill','blue').attr('opacity',0).attr('pointer-events','all');var _this=this;var chartParentD3=d3.select("#".concat(_this.element.id));this.chartTooltip=chartParentD3.select('.chart-tooltip');// Set even on mouse move
mouseArea.on('touchmove mousemove',function(){_this.interruptTransition();_this.coord=d3.mouse(this);_this.showTooltip();});// Set even on mouse leave
mouseArea.on('touchend mouseleave',function(){_this.coord=null;_this.hideTooltip();});tooltipCirclesGroup.exit().remove();}// end of draw
this.firstDrawFlag=false;}},{key:"showTooltip",value:function showTooltip(isSmooth){var _this117=this;if(!this.coord){return;}var _this=this;var xCommon=this.data.common.map(function(element){return _this117.xScale(element);});// const xValue = x.invert(coord[0]);
var iCommon=d3.bisect(xCommon,this.coord[0])-1;var xDistance=xCommon[iCommon]||0;// const yDistance = y(this.data.series[0].values[iCommon]);
var transition=d3.transition().duration(this.animationSpeed);if(iCommon>-1){this.canvas.selectAll('.tooltip-circle').attr('opacity',function(d){return _this117.data.series.filter(function(serie){return serie.name===d.name;}).length<1?0:1;}).each(function(){if(isSmooth){d3.select(this).transition(transition).attr('cx',xDistance).attr('cy',function(d){return _this.yScale(d.values[iCommon]);});}else{d3.select(this).attr('cx',xDistance).attr('cy',function(d){return _this.yScale(d.values[iCommon]);});}});// Position tooltip-line
this.tooltipLine.attr('opacity',1).attr('d',"M0,".concat(0,"L0,",this.height)).each(function(){if(isSmooth){d3.select(this).transition(transition).attr('transform',"translate(".concat(xDistance,",0)"));}else{d3.select(this).attr('transform',"translate(".concat(xDistance,",0)"));}});// Update tooltip (next to the mouse)
this.tooltipBox.update(iCommon,this.data);}this.chartTooltip.style('opacity',this.data.series.length>0?1:0);}},{key:"hideTooltip",value:function hideTooltip(){this.tooltipLine.attr('opacity',0);this.canvas.selectAll('.tooltip-circle').attr('opacity',0);this.chartTooltip.style('opacity',0);}},{key:"interruptTransition",value:function interruptTransition(){this.canvas.selectAll('.tooltip-circle').interrupt();this.tooltipLine.interrupt();}/**
   * Sorts the common data in increasing order (date or numerical)
   * @param {array} commonData - array of common continuous data
   * @param {boolean} isDate - specifies if the chart uses Date values
   * @private
   */},{key:"_sortCommonData",value:function _sortCommonData(commonData,isDate){// Note: to perform the bisection correctly, the array must be ordered
if(isDate){commonData.sort(function(a,b){return new Date(a)-new Date(b);});}else{commonData.sort(function(a,b){return a-b;});}}/**
   * Highlight one common element in all series
   * @param {String} key - The key matching the common element
   * @private
   */},{key:"_highlight",value:function _highlight(key){var lines=this.canvas.selectAll('.line');if(key){lines.attr('opacity',function(d){return d.name===key?'1':'.2';});}else{lines.attr('opacity','1');}}}]);return LineChart;}();var RangeSlider$1=/*#__PURE__*/function(){function RangeSlider$1(props){_classCallCheck(this,RangeSlider$1);this.element=props.element;this.options=_objectSpread({unit:''},props.options);this.margin=_objectSpread({left:0,right:0},props.margin);this.width=this.element.clientWidth-this.margin.left-this.margin.right;this.min=0;this.max=0;this.scale=function(){return'';};this.maxWidth=300;this.minCellWidth=42;}_createClass(RangeSlider$1,[{key:"init",value:function init(){// Setup containers.
this.slider=d3.select(this.element).append('div').classed('chart-range-slider',true).style('padding-left',"".concat(this.margin.left,"px")).style('padding-right',"".concat(this.margin.right,"px"));this.sliderAlign=this.slider.append('div').classed('chart-range-slider-align',true);this.sliderUnit=this.sliderAlign.append('div').classed('chart-range-slider-unit',true).style('width',"".concat(this.margin.left-30,"px")).text(this.options.unit);}},{key:"update",value:function update(scale,min,max){var _this118=this;this.min=min||this.min;this.max=max||this.max;this.scale=scale||this.scale;this.width=this.element.clientWidth-this.margin.left-this.margin.right;var sliderWidth=Math.min(this.maxWidth,this.width);var cellCountSuggestion=Math.floor(sliderWidth/this.minCellWidth);scale.nice(cellCountSuggestion);var texts=scale.ticks(cellCountSuggestion);var cellCount=texts.length-1;var values=[];for(var i=0;i<texts.length-1;i+=1){values.push(this.min+(this.max-this.min)*i/(cellCount-1));}this.sliderAlign.style('width',"".concat(sliderWidth,"px"));var cellUpdate=this.sliderAlign.selectAll('div.chart-range-slider-cell').data(values);var cellEnter=cellUpdate.enter().append('div').classed('chart-range-slider-cell',true);cellUpdate.exit().remove();cellUpdate.merge(cellEnter).style('background-color',function(d){return _this118.scale(d);}).style('width',"".concat(sliderWidth/cellCount-1,"px")).style('left',function(_,i){return"".concat(i*(sliderWidth/cellCount)+1,"px");});var textUpdate=this.sliderAlign.selectAll('span.chart-range-slider-text').data(texts);var textEnter=textUpdate.enter().append('span').classed('chart-range-slider-text',true);textUpdate.exit().remove();textUpdate.merge(textEnter).style('left',function(_,i){return"".concat(i*(sliderWidth/cellCount),"px");}).text(function(d){return d3.format('.2s')(d);});}}]);return RangeSlider$1;}();var Heatmap=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {Object} [props.format] - Format used for line chart data manipulation
   * @param {string} [props.format.inputX] - Format used to parse the X data input
   * @param {string} [props.format.inputY] - Format used to parse the Y data input
   * @param {Object} [props.y] - Y axis properties
   * @param {string} [props.y.tickFormat] - The tick format for the Y axis
   * @param {boolean} [props.y.isTime] - If Y axis is time-based
   * @param {string} [props.y.unit] - The Y axis unit
   * @param {Object} [props.x] - X axis properties
   * @param {string} [props.x.unit] - The X axis unit
   * @param {string} [props.x.tickFormat] - The tick format for the X axis
   * @param {boolean} [props.x.isTime] - If X axis is time-based
   * @param {string} [props.x.unit] - The X axis unit
   * @param {Object} [props.tooltip] - Tooltip properties
   * @param {boolean} [props.tooltip.isHidden] - Hide the tooltip
   * @param {Object} [props.tooltip.format] - Format necessary for representing data
   * @param {string} [props.tooltip.format.title] - Time specific format (see D3 formats)
   * @param {string} [props.tooltip.format.label] - Time specific format (see D3 formats)
   * @param {string} [props.tooltip.format.value] - Number specific format (see D3 formats)
   * @param {string} [props.palette] - The color palette to use for the chart
   */function Heatmap(props){_classCallCheck(this,Heatmap);this.element=props.element;this.data=props.data;this.height=props.height||150;this.margin=_objectSpread({bottom:50,left:100,right:25,top:25},props.margin);this.format=_objectSpread({inputX:'%Y-%m-%d %H:%M:%S',inputY:'%Y-%m-%d %H:%M:%S'},props.format);this.x=_objectSpread({unit:''},props.x);this.y=_objectSpread({unit:''},props.y);this.tooltip=_objectSpread({format:{title:null,label:'%Y-%m-%d %H:%M:%S',value:'.2f'},isHidden:false},props.tooltip);this.rangeOptions=_objectSpread({title:'',reverse:false},props.range);this.axisPadding=8;this.fontSize=14;if(this.y.unit){this.margin.top+=this.fontSize+this.axisPadding;}if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}this.theme=document.querySelector('body').classList;this.colorPalette=ColorScale.getRangePaletteClass(props.palette||'sequential 1');this.range=[];this.cellSpacing=2;this.firstDrawFlag=true;}_createClass(Heatmap,[{key:"init",value:function init(){var _this119=this;this.colors={light:{'sequential-1':['#7F7F7F','#2B2B2B'],'sequential-2':['#E75FA0','#88144C'],'sequential-3':['#23969A','#071D1D'],'sequential-4':['#B98327','#2D2009'],'sequential-5':['#976CF4','#3E0DA9'],'sequential-6':['#E75D34','#561B0A'],'sequential-7':['#6688A5','#24323E'],'sequential-8':['#C86F6D','#652726'],'sequential-9':['#7F87AD','#33384F'],'sequential-10':['#E24F72','#74132A'],'diverging-1':['#A80D00','#A08209','#329864'],'diverging-2':['#A80D00','#A08209','#329864','#1F78C7'],'diverging-3':['#75172E','#8087AD','#26959A'],'diverging-4':['#ED0E00','#8087AD','#329864'],'diverging-5':['#333333','#8087AD','#4B677F'],'diverging-6':['#A08209','#339864','#3D1EA1']},dark:{'sequential-1':['#FFFFFF','#808080'],'sequential-2':['#F6D7E7','#D84B92'],'sequential-3':['#C7F1F2','#239497'],'sequential-4':['#FEFAD4','#D4C407'],'sequential-5':['#E7DDFD','#7E4AF2'],'sequential-6':['#F2AF99','#C94319'],'sequential-7':['#BACAD6','#557791'],'sequential-8':['#E9C5C4','#BF5652'],'sequential-9':['#CACDDE','#68709E'],'sequential-10':['#F8D5DD','#E04367'],'diverging-1':['#DC2D37','#DCAF01','#288964'],'diverging-2':['#DC2D37','#DCAF01','#288964','#0077DB'],'diverging-3':['#E04367','#A6ABC6','#74DCDF'],'diverging-4':['#DC2D37','#A6ABC6','#288964'],'diverging-5':['#68709E','#A6ABC6','#FFFFFF'],'diverging-6':['#DCAF01','#288964','#7E4AF2']}};this.element.classList.add('heatmap');this.legend=new Legend({element:this.element,data:{common:this.data.commonX,series:this.data.series},draw:this._filterLegend.bind(this),margin:_objectSpread({},this.margin,{left:0})});this.legend.init();this.stage=new Stage({element:this.element,height:this.height,margin:this.margin});this.stage.init();this.stage.onResize(this.draw.bind(this));this.rangeSlider=new RangeSlider$1({element:this.element,margin:this.margin,options:this.rangeOptions});this.rangeSlider.init();this.tooltipBox=new Tooltip({element:this.element,data:this.data,hoverClass:'mouse-area',format:this.tooltip.format,isTime:this.x.isTime,unit:{title:this.x.unit,value:this.rangeOptions&&this.rangeOptions.unit?this.rangeOptions.unit:''}});this.tooltipBox.init();this.canvas=this.stage.getCanvas();this.svg=d3.select(this.canvas.node().parentNode);this.listeners={switchTheme:function switchTheme(){_this119.theme=event.detail.theme;_this119.draw();}};this._addEventListeners();this.draw();}},{key:"_filterLegend",value:function _filterLegend(data){if(data!==undefined&&data.series.length===0){this.containerGroup.classed('hidden',true);}else{this.containerGroup.classed('hidden',false);}}},{key:"draw",value:function draw(data){var _this120=this;this.data=data||this.data;this.width=this.stage.getCanvasWidth();var xLength=this.data.commonX.length;var yLength=this.data.commonY.length;var isXNumber=typeof this.data.commonX[0]==='number';var isYNumber=typeof this.data.commonY[0]==='number';// Convert text dates to actual date objects.
if(this.x.isTime){this.data.commonX.forEach(function(date,i){if(!(date instanceof Date)){var formatedDate=Format.formatTime(_this120.format.inputX)(new Date(date));_this120.data.commonX[i]=d3.timeParse(_this120.format.inputX)(formatedDate);}});}if(this.y.isTime){this.data.commonY.forEach(function(date,i){if(!(date instanceof Date)){var formatedDate=Format.formatTime(_this120.format.inputY)(new Date(date));_this120.data.commonY[i]=d3.timeParse(_this120.format.inputY)(formatedDate);}});}// Define ranges and colors.
var minValues=this.data.series.map(function(d0){return d3.min(d0.values,function(d1){return d3.min(d1);});});var maxValues=this.data.series.map(function(d0){return d3.max(d0.values,function(d1){return d3.max(d1);});});var globalMinValue=d3.min(minValues);var globalMaxValue=d3.max(maxValues);this.range=[globalMinValue,globalMaxValue];var colorScales=this.data.series.map(function(){var domain=[globalMinValue,globalMaxValue];var domainWithPivot=[];var colorRange=JSON.parse(JSON.stringify(_this120.colors[_this120.theme][_this120.colorPalette]));if(_this120.rangeOptions.reverse===true){colorRange.reverse();}var colorRangeLength=colorRange.length;colorRange.forEach(function(color,index){var val=domain[1]+(domain[0]-domain[1])*(colorRangeLength-index-1)/(colorRangeLength-1);domainWithPivot.push(val);});return d3.scaleLinear().domain(domainWithPivot).range(colorRange);});this.rangeSlider.update(colorScales[0],globalMinValue,globalMaxValue);// Setup scales.
var xExtent;var yExtent;var xScale;var yScale;var cellHeight=0;var cellWidth=0;if(this.x.isTime){xExtent=d3.extent(this.data.commonX);var xStep=(xExtent[1]-xExtent[0])/(xLength-1);xExtent[1]=new Date(xExtent[1].getTime()+xStep);xScale=d3.scaleTime().range([0,this.width]).domain(xExtent);cellWidth=(xScale(xExtent[1])-xScale(xExtent[0]))/xLength;}else if(isXNumber){xExtent=d3.extent(this.data.commonX);var _xStep=(xExtent[1]-xExtent[0])/(xLength-1);xExtent[1]=xExtent[1]+_xStep;xScale=d3.scaleLinear().range([0,this.width]).domain(xExtent);cellWidth=(xScale(xExtent[1])-xScale(xExtent[0]))/xLength;}else{xScale=d3.scaleBand().range([0,this.width]).domain(this.data.commonX);}if(this.y.isTime){yExtent=d3.extent(this.data.commonY);var yStep=(yExtent[1]-yExtent[0])/(yLength-1);yExtent[1]=new Date(yExtent[1].getTime()+yStep);yScale=d3.scaleTime().range([0,this.height]).domain(yExtent);cellHeight=Math.abs(yScale(yExtent[1])-yScale(yExtent[0]))/yLength;}else if(isYNumber){yExtent=d3.extent(this.data.commonY);var _yStep=(yExtent[1]-yExtent[0])/(yLength-1);yExtent[0]=yExtent[0]-_yStep;yScale=d3.scaleLinear().range([this.height,0]).domain(yExtent);cellHeight=Math.abs(yScale(yExtent[1])-yScale(yExtent[0]))/yLength;}else{yScale=d3.scaleBand().range([this.height,0]).domain(this.data.commonY);}// Draw axis.
var xTickFormat;var yTickFormat;if(this.x.isTime&&this.x.tickFormat){xTickFormat=d3.timeFormat(this.x.tickFormat);}else if(this.x.tickFormat){xTickFormat=d3.format(this.x.tickFormat);}if(this.y.isTime&&this.y.tickFormat){yTickFormat=d3.timeFormat(this.y.tickFormat);}else if(this.y.tickFormat){yTickFormat=d3.format(this.y.tickFormat);}var xAxis=new Axis({position:'bottom',canvas:this.canvas,x:xScale,width:this.width,height:this.height,margin:this.margin,fontSize:14,axisPadding:8,hasDomain:true,tickFormat:xTickFormat,animationSpeed:980,unit:this.x.unit});xAxis.init();var yAxis=new Axis({position:'left',canvas:this.canvas,y:yScale,width:this.width,height:this.height,margin:this.margin,fontSize:14,axisPadding:10,hasDomain:true,tickFormat:yTickFormat,ticks:this.height/60,unit:this.y.unit});yAxis.init();// Hide x labels if space it not sufficient.
var hasLabelSpace=true;if(this.x.isTime!==true&&isXNumber!==true){var seriesDistance=xScale(this.data.commonX[1])-xScale(this.data.commonX[0]);this.data.commonX.forEach(function(d){if(hasLabelSpace){hasLabelSpace=d.length*_this120.fontSize/1.5<seriesDistance;}});if(hasLabelSpace){this.canvas.selectAll('.bottom.axis text:not(.unit)').style('opacity',1);}else{this.canvas.selectAll('.bottom.axis text:not(.unit)').style('opacity',0);}}// Create container group.
this.containerGroup=this.canvas.select('g.container').empty()?this.canvas.append('g').classed('container',true):this.canvas.select('g.container');// Draw matrix.
// Matrix container.
var matrixGroup;if(this.firstDrawFlag){matrixGroup=this.containerGroup.append('g').classed('matrix',true);}else{matrixGroup=this.containerGroup.select('g.matrix');}// Series container.
var serieGroupsUpdate=matrixGroup.selectAll('g.serie').data(this.data.series,function(d){return d.name;});var serieGroupsEnter=serieGroupsUpdate.enter().append('g').classed('serie',true);serieGroupsUpdate.exit().remove();var serieGroups=serieGroupsUpdate.merge(serieGroupsEnter);// Define getters.
var getX=function getX(d,i){return"translate(".concat(xScale(_this120.data.commonX[i])+1,",0)");};var getY=function getY(d,i){return yScale(_this120.data.commonY[i])+1;};var getWidth=function getWidth(){if(_this120.x.isTime||isXNumber){return Math.max(0,cellWidth-1);}else{return Math.max(0,xScale.bandwidth()-1);}};var getHeight=function getHeight(){if(_this120.y.isTime||isYNumber){return Math.max(0,cellHeight-1);}else{return Math.max(0,yScale.bandwidth()-1);}};// Create grid.
var gridXUpdate=this.containerGroup.selectAll('line.grid-horizontal').data(this.data.commonX,function(d){return d;});var gridXEnter=gridXUpdate.enter().append('line').classed('grid-horizontal',true);gridXUpdate.exit().remove();gridXUpdate.merge(gridXEnter).attr('x1',function(d){return xScale(d)+getWidth()+1;}).attr('x2',function(d){return xScale(d)+getWidth()+1;}).attr('y1',0).attr('y2',this.height);var gridYUpdate=this.containerGroup.selectAll('line.grid-vertical').data(this.data.commonY,function(d){return d;});var gridYEnter=gridYUpdate.enter().append('line').classed('grid-vertical',true);gridYUpdate.exit().remove();gridYUpdate.merge(gridYEnter).attr('x1',0).attr('x2',this.width).attr('y1',function(d){return yScale(d);}).attr('y2',function(d){return yScale(d);});// Column container.
var columnGroupsUpdate=serieGroups.selectAll('g.column').data(function(d){return d.values;}).attr('transform',getX);var columnGroupsEnter=columnGroupsUpdate.enter().append('g').classed('column',true).attr('transform',getX);columnGroupsUpdate.exit().remove();var columnGroups=columnGroupsUpdate.merge(columnGroupsEnter);// Rectangles.
var rectsUpdate=columnGroups.selectAll('rect').data(function(d){return d;}).classed('rect',true).style('fill',function(d){return colorScales[0](d);}).attr('y',getY).attr('width',getWidth).attr('height',getHeight);rectsUpdate.enter().append('rect').classed('rect',true).style('fill',function(d){return colorScales[0](d);}).attr('y',getY).attr('width',getWidth).attr('height',getHeight);rectsUpdate.exit().remove();// Tooltip.
var mouseArea=this.canvas.select('.mouse-area').empty()?this.canvas.append('svg:rect').classed('mouse-area',true):this.canvas.select('.mouse-area');mouseArea.attr('width',this.width).attr('height',this.height).attr('fill','blue').attr('opacity',0).attr('pointer-events','all');var _this=this;mouseArea.on('touchmove mousemove',function(){var coords=d3.mouse(this);var xCommon;var yCommon;if(_this.x.isTime||isXNumber){xCommon=Math.floor(coords[0]/cellWidth);}else{xCommon=Math.floor(coords[0]/xScale.bandwidth());}if(_this.y.isTime){yCommon=Math.floor(coords[1]/cellHeight);}else if(isYNumber){yCommon=yLength-Math.floor(coords[1]/cellHeight)-1;}else{yCommon=yLength-Math.floor(coords[1]/yScale.bandwidth())-1;}if(xCommon<0)xCommon=0;if(xCommon>=_this.data.commonX.length)xCommon=_this.data.commonX.length-1;if(yCommon<0)yCommon=0;if(yCommon>=_this.data.commonY.length)yCommon=_this.data.commonY.length-1;_this.canvas.selectAll('g.column').style('opacity',function(d,i){return i===xCommon?'':0.2;}).filter(function(d,i){return i!==xCommon;}).selectAll('rect.rect').style('opacity',1);_this.canvas.selectAll('g.column').filter(function(d,i){return i===xCommon;}).selectAll('rect.rect').style('opacity',function(d,i){return yCommon===i?'':0.2;});var valueX=_this.data.commonX[xCommon];var valueY=_this.data.commonY[yCommon];var value=_this.data.series[0].values[xCommon][yCommon];if(_this.y.isTime&&_this.tooltip.format.label){valueY=d3.timeFormat(_this.tooltip.format.label)(valueY);}else if(_this.y.isTime&&yTickFormat){valueY=yTickFormat(valueY);}else if(_this.y.isTime){valueY=d3.timeFormat('%Y-%m-%d %H:%M:%S')(valueY);}else if(isYNumber&&_this.tooltip.format.label){valueY=d3.format(_this.tooltip.format.label)(value);}_this.tooltipBox.updateSingle(valueX,valueY,value);});mouseArea.on('touchend mouseleave',function(){_this.canvas.selectAll('g.column').style('opacity','').selectAll('rect.rect').style('opacity','');});// Set draw flag.
this.firstDrawFlag=false;}},{key:"_addEventListeners",value:function _addEventListeners(){document.addEventListener('switchTheme',this.listeners.switchTheme);}},{key:"_removeEventListeners",value:function _removeEventListeners(){document.removeEventListener('switchTheme',this.listeners.switchTheme);}},{key:"destroy",value:function destroy(){this._removeEventListeners();this.stage.destroy();this.element.innerHTML='';}}]);return Heatmap;}();/**
 * @file Component to create histogram
 */var Histogram=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object[]} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {Object[]} [props.thresholds] - Thresholds that can be added to a chart
   * @param {number} [props.thresholds[].moreThan] - Sets the positive threshold
   * @param {number} [props.thresholds[].lessThan] - Sets the negative threshold
   * @param {string} [props.thresholds[].color] - Threshold color (green, red)
   * @param {string} [props.y] - The Y axis properties
   * @param {string} [props.y.unit] - The unit of the Y axis
   * @param {string} [props.x] - The X axis properties
   * @param {string} [props.x.unit] - The unit of the X axis
   */function Histogram(props){_classCallCheck(this,Histogram);this.data=props.data;this.element=props.element;this.height=props.height||250;this.margin=_objectSpread({top:16,bottom:32,right:24,left:40},props.margin);this.thresholds=props.thresholds;this.y=_objectSpread({unit:''},props.y);this.x=_objectSpread({unit:'',binSize:props.x.binSize||'medium'},props.x);this.axisPadding=8;this.fontSize=14;if(this.thresholds){this.margin.right+=this.axisPadding;}if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}}/**
   * Initialize the chart
   */_createClass(Histogram,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:{left:0}});this.legend.init();this.tooltip=new Tooltip({element:this.element,data:this.data,hoverClass:'line-hover',unit:{value:this.x.unit}});this.tooltip.init();this.draw();}/**
   * Destroy the cart
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}/**
   * Draw the chart based on data
   * @param {Object} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){var _this121=this;this.data=data||this.data;this.data=this.legend.filter(this.data);this.width=this.stage.getCanvasWidth();this.canvas.classed('histogram',true);// Number of bars (resolution of histogram)
var dividend=25;var size={small:15,medium:25,large:50};var binSize=this.x.binSize;if(!isNaN(binSize)){dividend=binSize;}else{if(size[binSize]!==undefined){dividend=size[binSize];}}var count=Math.round(this.width/dividend);var x=d3.scaleLinear().domain([d3.min(this.data.series,function(d){return d3.min(d.values);}),d3.max(this.data.series,function(d){return d3.max(d.values);})]).nice().range([0,this.width]);var histogram=d3.histogram().domain(x.domain()).thresholds(x.ticks(count));var bins=[];this.data.series.forEach(function(serie){return bins.push(histogram(serie.values));});var xAxis=new Axis({position:'bottom',canvas:this.canvas,x:x,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,hasDomain:true,tickFormat:function tickFormat(d){return d3.format('.2s')(d).replace('.0','');},unit:this.x.unit});xAxis.init();var y=d3.scaleLinear().domain([0,d3.max(bins,function(d){return d3.max(d,function(e){return e.length;});})]).nice().range([this.height,0]);var yAxis=new Axis({position:'left',canvas:this.canvas,y:y,width:this.width,height:this.height,fontSize:this.fontSize,axisPadding:this.axisPadding,ticks:this.height/60,thresholds:this.thresholds});yAxis.init();var barGroups=this.canvas.selectAll('.bar-group').data(bins[0]||[]);var barGroupsEnter=barGroups.enter().append('g').classed('bar-group',true);barGroupsEnter=barGroupsEnter.merge(barGroups).attr('transform',function(d){return"translate(".concat(x(d.x0)," ,0)");});var bars=barGroupsEnter.merge(barGroups).selectAll('.bar').data(function(d,i){var histogramSeries=[];bins.forEach(function(bin,k){return histogramSeries.push({name:_this121.data.series[k].name,histogram:bin[i]});});return histogramSeries;});var getThresholdsClass=function getThresholdsClass(d){var color='';if(_this121.thresholds){_this121.thresholds.sort(function(a,b){return a.moreThan-b.moreThan||b.lessThan-a.lessThan;}).forEach(function(t){if(t.moreThan&&d>=t.moreThan||t.lessThan&&d<=t.lessThan){color=t.color;}});}return color;};bars.enter().append('rect').merge(bars).attr('class',function(d){return'bar '+_this121.colorScale.get()(d.name)+' '+getThresholdsClass(d.histogram.length);}).style('pointer-events','none').transition().duration(400).attr('x',function(d,i){return i*6;}).attr('width',function(d){return Math.max(0,x(d.histogram.x1)-x(d.histogram.x0)-bins.length*5);}).attr('y',function(d){return y(d.histogram.length);}).attr('height',function(d){return y(0)-y(d.histogram.length);});var barsHover=barGroupsEnter.merge(barGroups).selectAll('.line-hover').data(function(d){return[d];});barsHover.enter().append('rect').merge(barsHover).classed('line-hover',true).attr('width',function(d){return x(d.x1)-x(d.x0);}).attr('stroke-width',1).attr('stroke','red').attr('fill','blue').attr('opacity','0').attr('height',this.height).attr('y',0).on('mouseover',function(group,i,selection){var all=barGroupsEnter.selectAll('.bar');all.attr('opacity','.2');var histogramSeries=[];d3.select(selection[i].parentNode).selectAll('.bar').attr('opacity',function(d){histogramSeries.push({name:d.name,values:[d.histogram.length]});return 1;});var newData={common:["[".concat(group.x0,", ").concat(group.x1,"]")],series:histogramSeries};_this121.tooltip.update(0,newData);}).on('mouseout',function(){var all=barGroupsEnter.selectAll('.bar');all.attr('opacity','1');});barGroups.exit().remove();bars.exit().transition().duration(400).attr('y',y(0)).attr('height',0).remove();barsHover.exit().remove();}/**
   * Highlight one common element in all series
   * @param {String} key - The key matching the common element
   * @private
   */},{key:"_highlight",value:function _highlight(key){var barGroups=this.canvas.selectAll('.bar-group');if(key){var idx=0;this.data.series.forEach(function(serie,i){if(serie.name===key){idx=i;}});barGroups.selectAll('.bar').attr('opacity',function(d,i){return i===idx?'1':'.2';});}else{barGroups.selectAll('.bar').attr('opacity','1');}}}]);return Histogram;}();var TooltipDot=/*#__PURE__*/function(){/**
   * Common tooltip component for charts
   * @param {Object} props - The properties to initialize the tooltip
   * @param {HTMLElement} props.element - The DOM element to append the tooltip
   * @param {Object} props.data - The data necessary to populate the legend
   * @param {string} props.hoverClass - The class of the element you hover to show the tooltip
   * @param {array} props.items - List of items that are displayed below title
   */function TooltipDot(props){_classCallCheck(this,TooltipDot);this.element=props.element;this.data=props.data;this.hoverClass=props.hoverClass;this.items=props.items||[];this.seriesList=this.data.series.map(function(s){return s.name;});this.colorScale=new ColorScale({length:this.seriesList.length});this.colorScale.init();}/**
   * Creates the tooltip and adds the mousemove behavior
   */_createClass(TooltipDot,[{key:"init",value:function init(){var _this122=this;this.tooltip=d3.select(this.element).append('div').classed('chart-tooltip',true);this.content=this.tooltip.append('div').classed('content',true);var title=this.content.append('div').classed('title',true);title.append('span').classed('unit-title',true);var item=this.content.selectAll('.item').data(this.items).enter().append('div').classed('item',true).attr('data-item',function(d){return d;});item.filter(function(d){return d==='series';}).append('i');item.append('span').classed('key',true);item.append('span').classed('value',true);d3.select(this.element).select('svg')/*
       * Use optional name to allow multiple callbacks to be registered
       * https://github.com/d3/d3-selection/blob/master/README.md#handling-events
       */.on("mousemove.".concat(this.hoverClass),function(){var mouseDistance=16;_this122.tooltip.classed('visible',d3.event.target.classList.contains(_this122.hoverClass)).style('top',function(){if(d3.event.clientY+_this122.tooltip.node().offsetHeight+mouseDistance>window.innerHeight){return d3.event.clientY-_this122.tooltip.node().offsetHeight-mouseDistance/2+'px';}else{return d3.event.clientY+16+'px';}}).style('left',function(){if(d3.event.clientX+_this122.tooltip.node().offsetWidth+mouseDistance*2>window.innerWidth){return d3.event.clientX-_this122.tooltip.node().offsetWidth-mouseDistance+'px';}else{return d3.event.clientX+16+'px';}});}).on('mouseleave',function(){_this122.tooltip.classed('visible',false);});}/**
   * Updates the data of the tooltip
   * @param {Object} data - The updated data from the chart
   */},{key:"update",value:function update(data){var title=this.content.select('.title');var unitTitle=title.select('.unit-title');unitTitle.text(data.title);var div=this.content.selectAll('.item');if(data.series){var sIndex=this.seriesList.indexOf(data.series.label);div.select('i').attr('class',"icon icon-alarm-level6 ".concat(this.colorScale.getColors()[sIndex]));}div.select('.key').text(function(d){return data[d].label;});div.select('.value').text(function(d){return data[d].value;});}}]);return TooltipDot;}();/**
 * Calculate linear regression coefficients using the method of least squares.
 * Linear regression equation: y = ax + b
 * @private
 * @param {Array} data
 * @return {Array} - Coefficients a, b and R-squared value
 */function regressionLinear(data){var xValues=data.map(function(d){return d.x;});var yValues=data.map(function(d){return d.y;});if(!xValues.length||!yValues.length){return[];}var reduceSumFunc=function reduceSumFunc(prev,cur){return prev+cur;};var xBar=xValues.reduce(reduceSumFunc)*1.0/xValues.length;var yBar=yValues.reduce(reduceSumFunc)*1.0/yValues.length;var ssXX=xValues.map(function(d){return Math.pow(d-xBar,2);}).reduce(reduceSumFunc);var ssYY=yValues.map(function(d){return Math.pow(d-yBar,2);}).reduce(reduceSumFunc);var ssXY=xValues.map(function(d,i){return(d-xBar)*(yValues[i]-yBar);}).reduce(reduceSumFunc);var slope=ssXY/ssXX;var intercept=yBar-xBar*slope;var rSquare=Math.pow(ssXY,2)/(ssXX*ssYY);return[slope,intercept,rSquare];}/**
 * @file Module to create Scatter Plot.
 * @requires d3
 * @requires Stage
 * @requires Axis
 * @requires Legend
 * @requires ColorScale
 * @requires TooltipDot
 */ /**
 * Class representing an scatter plot.
 */var ScatterPlot=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {string} [props.x] - The X axis properties
   * @param {string} [props.x.unit] - The unit of the X axis
   * @param {string} [props.x.tickFormat] - Format used for X axis (see D3 formats)
   * @param {boolean} [props.x.startFromZero] - If X axis starts on zero
   * @param {boolean} [props.x.isLogarithmic] - If X axis is logarithmic
   * @param {string} [props.y] - The Y axis properties
   * @param {string} [props.y.unit] - The unit of the Y axis
   * @param {string} [props.y.tickFormat] - Format used for Y axis (see D3 formats)
   * @param {boolean} [props.y.startFromZero] - If Y axis starts on zero
   * @param {boolean} [props.y.isLogarithmic] - If Y axis is logarithmic
   * @param {Object} [props.trendline] - The trendline properties
   * @param {boolean} [props.trendline.show] - If trendline should be displayed
   * @param {string} [props.trendline.type] - The type of trendline (currently only 'linear')
   * @param {number} [props.diameter] - Dot diameter
   */function ScatterPlot(props){_classCallCheck(this,ScatterPlot);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:32,right:24,top:24,bottom:32},props.margin);this.height=props.height||250;this.trendline=_objectSpread({show:false,type:'linear'},props.trendline);this.x=_objectSpread({unit:'',tickFormat:'',startFromZero:false,isLogarithmic:false},props.x);this.y=_objectSpread({unit:'',tickFormat:'',startFromZero:false,isLogarithmic:false},props.y);this.axisPadding=8;this.fontSize=14;this.animationSpeed=400;this.yScale=null;this.xScale=null;// Default dot size 14x14, same as icon in legend pill
this.radius=(props.diameter||14)/2;this.radiusHover=Math.max(this.radius,7);if(this.y.unit){this.margin.top+=this.fontSize+this.axisPadding;}if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}this.id=Date.now();this.values=[];}/**
   * Initialize the chart
   * @public
   */_createClass(ScatterPlot,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.canvas.classed('scatter-plot',true);this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:this.margin});this.legend.init();this._drawTooltip();this.draw();}/**
   * Draw the chart based on data
   * @public
   * @param {Object} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){this.data=data||this.data;this.data=this.legend.filter(this.data);this.values=this._getValues();this.width=this.stage.getCanvasWidth();this._createX();this._createY();this._drawCrosshair();if(this.trendline.show){this._drawTrendlines();}// Dots should be above crosshair for proper display of tooltip
this._drawDots();}/**
   * Create X axis
   * @private
   */},{key:"_createX",value:function _createX(){var _this123=this;var xMin=d3.min(this.values,function(d){return d.x;});var xMax=d3.max(this.values,function(d){return d.x;});// Logarithmic scale can't start with 0
if(this.x.startFromZero&&!this.x.isLogarithmic){xMin=xMin<0?xMin:0;}this.xScale=this.y.isLogarithmic?d3.scaleLog():d3.scaleLinear();this.xScale.domain([xMin,xMax]).range([0,this.width]).nice();this.xAxis=new Axis({position:'bottom',canvas:this.canvas,x:this.xScale,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,tickFormat:function tickFormat(d){return d3.format(_this123.x.tickFormat)(d);},unit:this.x.unit,hasDomain:true,hasGrid:true});this.xAxis.init();}/**
   * Create Y axis
   * @private
   */},{key:"_createY",value:function _createY(){var _this124=this;var yMin=d3.min(this.values,function(d){return d.y;});var yMax=d3.max(this.values,function(d){return d.y;});// Logarithmic scale can't start with 0
if(this.y.startFromZero&&!this.y.isLogarithmic){yMin=yMin<0?yMin:0;}this.yScale=this.y.isLogarithmic?d3.scaleLog():d3.scaleLinear();this.yScale.domain([yMin,yMax]).range([this.height,0]).nice();this.yAxis=new Axis({position:'left',canvas:this.canvas,y:this.yScale,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,ticks:this.height/80,tickFormat:function tickFormat(d){return d3.format(_this124.y.tickFormat)(d);},unit:this.y.unit,hasDomain:true,hasGrid:true});this.yAxis.init();}/**
   * Dot tooltip
   * @private
   */},{key:"_drawTooltip",value:function _drawTooltip(){this.tooltip=new TooltipDot({element:this.element,data:this.data,// List of keys by which we update the tooltip items
items:['series','x','y'],hoverClass:'dot-hover'});this.tooltip.init();}/**
   * Returns merged array of values.
   * @private
   * @return {{name: string, x: number, y: number, series: string}[]} - Array of objects
   */},{key:"_getValues",value:function _getValues(){var data=[];if(this.data.series){var _ref13;data=(_ref13=[]).concat.apply(_ref13,_toConsumableArray(this.data.series.map(function(ser){return ser.values.map(function(val){return _objectSpread({},val,{series:ser.name});});})));}return data;}/**
   * Dots
   * @private
   */},{key:"_drawDots",value:function _drawDots(){var _this125=this;var dotsContainer=this.canvas.select('.dots').empty()?this.canvas.append('g').classed('dots',true):this.canvas.select('.dots');var dotGroups=dotsContainer.selectAll('.dot-group').data(this.values,function(d){return d.name;});// Enter new elements presented in new data
var dotGroupsEnter=dotGroups.enter().append('g').attr('class','dot-group');dotGroupsEnter.append('circle').style('pointer-events','none').attr('class',function(d){return'dot '+_this125.colorScale.get()(d.series);}).attr('cx',function(d){return _this125.xScale(d.x);}).attr('cy',function(d){return _this125.yScale(d.y);}).attr('r',0).transition().duration(this.animationSpeed).attr('r',this.radius);dotGroupsEnter.append('circle').attr('class','dot-hover').attr('fill','blue').attr('opacity',0).attr('cx',function(d){return _this125.xScale(d.x);}).attr('cy',function(d){return _this125.yScale(d.y);}).attr('r',this.radiusHover).on('mouseover',function(group,i,selection){var all=dotsContainer.selectAll('.dot');var newData={title:group.name,series:{label:group.series,value:''},x:{label:_this125.x.unit,value:group.x},y:{label:_this125.y.unit,value:group.y}};/**
         * | Dot name           |
         * | __________________ |
         * | () Series          |
         * | x label          1 |
         * | y label          2 |
         * |                    |
         *  --------------------
         */_this125.tooltip.update(newData);all.attr('opacity','.2');_this125.canvas.selectAll('.trendline').attr('opacity','.2');d3.select(d3.select(selection[i].parentNode).selectAll('.dot').nodes()[0]).attr('opacity',1);// Show crosshair intersecting dot center, text is hidden
_this125.crosshair.select('.crosshair-line-x').attr('x1',_this125.xScale(group.x)).attr('y1',0).attr('x2',_this125.xScale(group.x)).attr('y2',_this125.height);_this125.crosshair.select('.crosshair-line-y').attr('x1',0).attr('y1',_this125.yScale(group.y)).attr('x2',_this125.width).attr('y2',_this125.yScale(group.y));_this125.crosshair.attr('opacity',1);_this125.crosshair.select('.crosshair-text').attr('opacity',0);}).on('mouseout',function(){var all=dotsContainer.selectAll('.dot');all.attr('opacity','1');_this125.canvas.selectAll('.trendline').attr('opacity','1');// Hide crosshair
_this125.crosshair.attr('opacity',0);_this125.crosshair.select('.crosshair-text').attr('opacity',1);});// Update old elements presented in new data
dotGroups.select('.dot').transition().duration(this.animationSpeed).attr('cx',function(d){return _this125.xScale(d.x);}).attr('cy',function(d){return _this125.yScale(d.y);});dotGroups.select('.dot-hover').transition().duration(this.animationSpeed).attr('cx',function(d){return _this125.xScale(d.x);}).attr('cy',function(d){return _this125.yScale(d.y);});// Exit old elements not presented in new data
dotGroups.exit().remove();}/**
   * Trendlines
   * @private
   */},{key:"_drawTrendlines",value:function _drawTrendlines(){var _this126=this;if(!this.trendTooltip){this.trendTooltip=new TooltipDot({element:this.element,data:this.data,// List of keys by which we update the tooltip items
items:['series','equation','r2'],hoverClass:'trendline-hover'});this.trendTooltip.init();}// Create a clip path
var clipPath=this.canvas.select('defs');if(clipPath.empty()){clipPath=this.canvas.append('defs');clipPath.append('clipPath').attr('id',this.id).append('rect').classed('clip-rectangle',true).attr('y',-1);}clipPath.select('rect').attr('width',this.width).attr('height',this.height+1);var xMin=d3.min(this.values,function(val){return val.x;});var xMax=d3.max(this.values,function(val){return val.x;});var trendData=[];this.data.series.forEach(function(series){var coeff=regressionLinear(series.values);if(coeff.length){trendData.push({name:series.name,a:coeff[0],b:coeff[1],rSquared:coeff[2],coords:[xMin,coeff[0]*xMin+coeff[1],xMax,coeff[0]*xMax+coeff[1]]});}});var trendsContainer=this.canvas.select('.trendlines').empty()?this.canvas.append('g').classed('trendlines',true).attr('clip-path',"url(#".concat(this.id,")")):this.canvas.select('.trendlines');var trendGroups=trendsContainer.selectAll('.trendline-group').data(trendData,function(d){return d.name;});var trendGroupsEnter=trendGroups.enter().append('g').classed('trendline-group',true);trendGroupsEnter.append('line').attr('class',function(d){return"trendline ".concat(_this126.colorScale.get()(d.name));}).attr('x1',function(d){return _this126.xScale(d.coords[0]);}).attr('y1',function(d){return _this126.yScale(d.coords[1]);}).attr('x2',function(d){return _this126.xScale(d.coords[2]);}).attr('y2',function(d){return _this126.yScale(d.coords[3]);}).attr('stroke-width',1);trendGroupsEnter.append('line').attr('class','trendline-hover').attr('x1',function(d){return _this126.xScale(d.coords[0]);}).attr('y1',function(d){return _this126.yScale(d.coords[1]);}).attr('x2',function(d){return _this126.xScale(d.coords[2]);}).attr('y2',function(d){return _this126.yScale(d.coords[3]);}).attr('stroke','blue').attr('stroke-width',8).attr('opacity',0).on('mouseover',function(d){// Linear regression equation: y = ax + b
var newData={title:'Linear trend',series:{label:d.name,value:''},equation:{label:"y = ".concat(d['a'].toFixed(3)," x ").concat(d['b']>=0?'+':'-'," ").concat(Math.abs(d['b'].toFixed(3))),value:''},r2:{label:'R-squared',value:d['rSquared'].toFixed(3)}};_this126.trendTooltip.update(newData);// Highlight trend line and corresponding dots
_this126.canvas.selectAll('.dot').each(function(dd,i,selection){d3.select(selection[i]).attr('opacity',dd.series===d.name?'1':'.2');});_this126.canvas.selectAll('.trendline').each(function(dd,i,selection){d3.select(selection[i]).attr('opacity',dd.name===d.name?'1':'.2');});}).on('mouseout',function(){_this126.canvas.selectAll('.dot').attr('opacity','1');_this126.canvas.selectAll('.trendline').attr('opacity','1');});trendGroups.select('.trendline').attr('x1',function(d){return _this126.xScale(d.coords[0]);}).attr('y1',function(d){return _this126.yScale(d.coords[1]);}).attr('x2',function(d){return _this126.xScale(d.coords[2]);}).attr('y2',function(d){return _this126.yScale(d.coords[3]);});trendGroups.select('.trendline-hover').attr('x1',function(d){return _this126.xScale(d.coords[0]);}).attr('y1',function(d){return _this126.yScale(d.coords[1]);}).attr('x2',function(d){return _this126.xScale(d.coords[2]);}).attr('y2',function(d){return _this126.yScale(d.coords[3]);});trendGroups.exit().remove();}/**
   * Crosshair
   * @private
   */},{key:"_drawCrosshair",value:function _drawCrosshair(){var _this127=this;this.crosshair=this.canvas.select('.crosshair');if(this.crosshair.empty()){this.crosshair=this.canvas.append('g').attr('class','crosshair');this.crosshair.append('line').attr('class','crosshair-line-x');this.crosshair.append('line').attr('class','crosshair-line-y');this.crosshair.append('text').attr('class','crosshair-text');}// Mouse area should be above crosshair for proper mouseenter / mouseleave
this.mouseArea=this.canvas.select('.mouse-area').empty()?this.canvas.append('svg:rect').classed('mouse-area',true):this.canvas.select('.mouse-area');this.mouseArea.attr('width',this.width).attr('height',this.height).attr('fill','blue').attr('opacity','0').attr('pointer-events','all').on('mouseenter',function(){return _this127.crosshair.attr('opacity',1);}).on('mouseleave',function(){return _this127.crosshair.attr('opacity',0);}).on('mousemove',this._onMousemove.bind(this));}/**
   * Handle mouse move over `.mouse-area`.
   * @private
   */},{key:"_onMousemove",value:function _onMousemove(){var mouse=d3.mouse(this.mouseArea.node());var mouseX=this.xScale.invert(mouse[0]);var mouseY=this.yScale.invert(mouse[1]);this.crosshair.select('.crosshair-line-x').attr('x1',mouse[0]).attr('y1',0).attr('x2',mouse[0]).attr('y2',this.height);this.crosshair.select('.crosshair-line-y').attr('x1',0).attr('y1',mouse[1]).attr('x2',this.width).attr('y2',mouse[1]);this.crosshair.select('.crosshair-text').attr('x',mouse[0]+3).attr('y',mouse[1]-4).text("".concat(mouseX.toFixed(2),", ").concat(mouseY.toFixed(2)));}/**
   * Highlight one common element in all series
   * @private
   * @param {String} key - The key matching the common element
   */},{key:"_highlight",value:function _highlight(key){var dots=this.canvas.selectAll('.dot');var trendlines=this.canvas.selectAll('.trendline');if(key){dots.attr('opacity',function(d){return d.series===key?'1':'.2';});trendlines.attr('opacity',function(d){return d.name===key?'1':'.2';});}else{dots.attr('opacity','1');trendlines.attr('opacity','1');}}/**
   * Destroy component
   * @public
   */},{key:"destroy",value:function destroy(){}}]);return ScatterPlot;}();/**
 * @file Module to create Bubble Chart.
 * @requires d3
 * @requires Stage
 * @requires Axis
 * @requires Legend
 * @requires ColorScale
 * @requires TooltipDot
 */ /**
 * Class representing a bubble chart.
 */var BubbleChart=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {string} [props.x] - The X axis properties
   * @param {string} [props.x.unit] - The unit of the X axis
   * @param {string} [props.x.label] - The title of the X axis
   * @param {string} [props.x.tickFormat] - Format used for X axis (see D3 formats)
   * @param {boolean} [props.x.startFromZero] - If X axis starts on zero
   * @param {boolean} [props.x.isLogarithmic] - If X axis is logarithmic
   * @param {string} [props.y] - The Y axis properties
   * @param {string} [props.y.unit] - The unit of the Y axis
   * @param {string} [props.y.label] - The title of the X axis
   * @param {string} [props.y.tickFormat] - Format used for Y axis (see D3 formats)
   * @param {boolean} [props.y.startFromZero] - If Y axis starts on zero
   * @param {boolean} [props.y.isLogarithmic] - If Y axis is logarithmic
   * @param {string} [props.r] - The R axis properties
   * @param {string} [props.tickFormat] - Format used for R legend and tooltip (see D3 formats)
   * @param {string} [props.diameter.min] - Min diameter or circle
   * @param {string} [props.diameter.max] - Max diameter or circle
   * @param {Object} [props.trendline] - The trendline properties
   * @param {boolean} [props.trendline.show] - If trendline should be displayed
   * @param {string} [props.trendline.type] - The type of trendline (currently only 'linear')
   */function BubbleChart(props){_classCallCheck(this,BubbleChart);this.data=props.data;this.element=props.element;this.margin=_objectSpread({left:32,right:24,top:24,bottom:32},props.margin);this.height=props.height||250;this.trendline=_objectSpread({show:false,type:'linear'},props.trendline);this.x=_objectSpread({unit:'',tickFormat:'',startFromZero:false,isLogarithmic:false},props.x);this.y=_objectSpread({unit:'',tickFormat:'',startFromZero:false,isLogarithmic:false},props.y);this.r=_objectSpread({unit:'',tickFormat:'',min:14,max:64},props.r);this.axisPadding=8;this.fontSize=14;this.animationSpeed=400;this.yScale=null;this.xScale=null;// Default dot diameter 14x14, same as icon in legend pill. Maximum dot diameter 64x64
this.diameter=_objectSpread({min:14,max:64},props.diameter);this.radiusMin=this.diameter.min/2;this.radiusMinHover=Math.max(this.radiusMin,7);this.radiusMax=this.diameter.max/2;// this.radiusMax = +(this.height * 0.1).toFixed(); - alternative
if(this.y.unit){this.margin.top+=this.fontSize+this.axisPadding;}if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}this.id=Date.now();this.values=[];}/**
   * Initialize the chart
   * @public
   */_createClass(BubbleChart,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:this.margin,height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.canvas.classed('bubble-chart',true);this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();// Fix domain so colors order stays correct when values are sorted
this.colorScale.colorScale.domain(this.data.series.map(function(s){return s.name;}));this.legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:this.margin});this.legend.init();this._drawTooltip();this.draw();}/**
   * Draw the chart based on data
   * @public
   * @param {Object} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){this.data=data||this.data;this.data=this.legend.filter(this.data);// Order by size, so smaller circle whould be above large
this.values=this._getValues().sort(function(a,b){return b.r-a.r;});this.width=this.stage.getCanvasWidth();this._createX();this._createY();this._createSizeLegend();this._drawCrosshair();if(this.trendline.show){this._drawTrendlines();}// Dots should be above crosshair for proper display of tooltip
this._drawDots();}/**
   * Create X axis
   * @private
   */},{key:"_createX",value:function _createX(){var _this128=this;var xMin=d3.min(this.values,function(d){return d.x;});var xMax=d3.max(this.values,function(d){return d.x;});/*
     * Solution taken from stackoverflow
     * https://stackoverflow.com/questions/20960797
     */var xMinRange=0;var xMaxRange=this.width;// Create temporary scale with extended range
var xScaleTemp=this.x.isLogarithmic?d3.scaleLog():d3.scaleLinear();xScaleTemp.domain([xMin,xMax]).range([xMinRange+this.radiusMax,xMaxRange-this.radiusMax]);// Get new domain values
xMin=xScaleTemp.invert(xMinRange);xMax=xScaleTemp.invert(xMaxRange);// Logarithmic scale can't start with 0
if(this.x.startFromZero&&!this.x.isLogarithmic){xMin=xMin<0?xMin:0;}// Create the scale with extended domain
this.xScale=this.x.isLogarithmic?d3.scaleLog():d3.scaleLinear();this.xScale.domain([xMin,xMax]).range([xMinRange,xMaxRange]).nice();this.xAxis=new Axis({position:'bottom',canvas:this.canvas,x:this.xScale,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,tickFormat:function tickFormat(d){return d3.format(_this128.x.tickFormat)(d);},unit:this.x.unit,hasDomain:true,hasGrid:true});this.xAxis.init();}/**
   * Create Y axis
   * @private
   */},{key:"_createY",value:function _createY(){var _this129=this;var yMin=d3.min(this.values,function(d){return d.y;});var yMax=d3.max(this.values,function(d){return d.y;});/*
     * Solution taken from stackoverflow
     * https://stackoverflow.com/questions/20960797
     */var yMinRange=this.height;var yMaxRange=0;// Create temporary scale with extended range
var yScaleTemp=this.y.isLogarithmic?d3.scaleLog():d3.scaleLinear();yScaleTemp.domain([yMin,yMax]).range([yMinRange-this.radiusMax,yMaxRange+this.radiusMax]);// Get new domain values
yMin=yScaleTemp.invert(yMinRange);yMax=yScaleTemp.invert(yMaxRange);// Logarithmic scale can't start with 0
if(this.y.startFromZero&&!this.y.isLogarithmic){yMin=yMin<0?yMin:0;}// Create the scale with extended domain
this.yScale=this.y.isLogarithmic?d3.scaleLog():d3.scaleLinear();this.yScale.domain([yMin,yMax]).range([yMinRange,yMaxRange]).nice();this.yAxis=new Axis({position:'left',canvas:this.canvas,y:this.yScale,width:this.width,height:this.height,margin:this.margin,fontSize:this.fontSize,axisPadding:this.axisPadding,ticks:this.height/80,tickFormat:function tickFormat(d){return d3.format(_this129.x.tickFormat)(d);},unit:this.y.unit,hasDomain:true,hasGrid:true});this.yAxis.init();}/**
   * Legend for size of bubble
   * @private
   */},{key:"_createSizeLegend",value:function _createSizeLegend(){var min=d3.min(this.values,function(d){return d.r;});var max=d3.max(this.values,function(d){return d.r;});var sizeLegend=this.canvas.select('.size-legend').empty()?this.canvas.append('g').classed('size-legend',true):this.canvas.select('.size-legend');// Same as Y label position
sizeLegend.attr('transform',"translate(".concat(this.width,", -").concat(this.fontSize+this.axisPadding,")"));sizeLegend.select('text').remove();var text=sizeLegend.append('text').attr('text-anchor','end');var icon=text.append('tspan').attr('class','icon icon-sizes').attr('font-size','16px');// Use content value of ':before' because icon code can change
icon.text(getComputedStyle(icon.nodes()[0],':before').content.slice(1,-1));text.append('tspan').attr('dx','8').attr('dy','-1').text("".concat(this.r.unit));text.append('tspan').attr('dx','16').text("Min: ".concat(min?d3.format(this.r.tickFormat)(min):'-'));text.append('tspan').attr('dx','16').text("Max: ".concat(max?d3.format(this.r.tickFormat)(max):'-'));}/**
   * Dot tooltip
   * @private
   */},{key:"_drawTooltip",value:function _drawTooltip(){this.tooltip=new TooltipDot({element:this.element,data:this.data,// List of keys by which we update the tooltip items
items:['series','x','y','r'],hoverClass:'dot-hover'});this.tooltip.init();}/**
   * Returns merged array of values.
   * @private
   * @return {{name: string, x: number, y: number, r: number, series: string}[]} - Array of objects
   */},{key:"_getValues",value:function _getValues(){var data=[];if(this.data.series){var _ref14;data=(_ref14=[]).concat.apply(_ref14,_toConsumableArray(this.data.series.map(function(ser){return ser.values.map(function(val){return _objectSpread({},val,{series:ser.name});});})));}return data;}/**
   * Dots
   * @private
   */},{key:"_drawDots",value:function _drawDots(){var _this130=this;var rScale=d3.scaleSqrt().domain(d3.extent(this.values.map(function(d){return d.r;}))).range([this.radiusMin,this.radiusMax]);var dotsContainer=this.canvas.select('.dots').empty()?this.canvas.append('g').classed('dots',true):this.canvas.select('.dots');var dotGroups=dotsContainer.selectAll('.dot-group').data(this.values,function(d){return d.name;});// Enter new elements presented in new data
var dotGroupsEnter=dotGroups.enter().append('g').classed('dot-group',true);dotGroupsEnter.append('circle').style('pointer-events','none').attr('class',function(d){return'dot '+_this130.colorScale.get()(d.series);}).attr('cx',function(d){return _this130.xScale(d.x);}).attr('cy',function(d){return _this130.yScale(d.y);}).attr('r',0).transition().duration(this.animationSpeed).attr('r',function(d){return rScale(d.r);});dotGroupsEnter.append('circle').attr('class','dot-hover').attr('cx',function(d){return _this130.xScale(d.x);}).attr('cy',function(d){return _this130.yScale(d.y);}).attr('r',function(d){return Math.max(_this130.radiusMinHover,rScale(d.r));}).attr('fill','blue').attr('opacity',0).on('mouseover',function(group,i,selection){var all=dotsContainer.selectAll('.dot');var newData={title:group.name,series:{label:group.series,value:''},x:{label:_this130.x.unit,value:group.x},y:{label:_this130.y.unit,value:group.y},r:{label:_this130.r.unit,value:group.r}};/**
         * | Dot name           |
         * | __________________ |
         * | () Series          |
         * | x label      dot.x |
         * | y label      dot.y |
         * | r label      dot.r |
         * |                    |
         *  --------------------
         */_this130.tooltip.update(newData);all.attr('opacity','.2');_this130.canvas.selectAll('.trendline').attr('opacity','.2');d3.select(d3.select(selection[i].parentNode).selectAll('.dot').nodes()[0]).attr('opacity',1);// Show crosshair intersecting dot center, text is hidden
_this130.crosshair.select('.crosshair-line-x').attr('x1',_this130.xScale(group.x)).attr('y1',0).attr('x2',_this130.xScale(group.x)).attr('y2',_this130.height);_this130.crosshair.select('.crosshair-line-y').attr('x1',0).attr('y1',_this130.yScale(group.y)).attr('x2',_this130.width).attr('y2',_this130.yScale(group.y));_this130.crosshair.attr('opacity',1);_this130.crosshair.select('.crosshair-text').attr('opacity',0);}).on('mouseout',function(){var all=dotsContainer.selectAll('.dot');all.attr('opacity','1');_this130.canvas.selectAll('.trendline').attr('opacity','1');// Hide crosshair
_this130.crosshair.attr('opacity',0);_this130.crosshair.select('.crosshair-text').attr('opacity',1);});// Update old elements presented in new data
dotGroups.select('.dot').transition().duration(this.animationSpeed).attr('cx',function(d){return _this130.xScale(d.x);}).attr('cy',function(d){return _this130.yScale(d.y);});dotGroups.select('.dot-hover').transition().duration(this.animationSpeed).attr('cx',function(d){return _this130.xScale(d.x);}).attr('cy',function(d){return _this130.yScale(d.y);});// Exit old elements not presented in new data
dotGroups.exit().remove();}/**
   * Trendline
   * @private
   */},{key:"_drawTrendlines",value:function _drawTrendlines(){var _this131=this;if(!this.trendTooltip){this.trendTooltip=new TooltipDot({element:this.element,data:this.data,// List of keys by which we update the tooltip items
items:['series','equation','r2'],hoverClass:'trendline-hover'});this.trendTooltip.init();}// Create a clip path
var clipPath=this.canvas.select('defs');if(clipPath.empty()){clipPath=this.canvas.append('defs');clipPath.append('clipPath').attr('id',this.id).append('rect').classed('clip-rectangle',true).attr('y',-1);}clipPath.select('rect').attr('width',this.width).attr('height',this.height+1);var xMin=d3.min(this.values,function(val){return val.x;});var xMax=d3.max(this.values,function(val){return val.x;});var trendData=[];this.data.series.forEach(function(series){var coeff=regressionLinear(series.values);if(coeff.length){trendData.push({name:series.name,a:coeff[0],b:coeff[1],rSquared:coeff[2],coords:[xMin,coeff[0]*xMin+coeff[1],xMax,coeff[0]*xMax+coeff[1]]});}});var trendsContainer=this.canvas.select('.trendlines').empty()?this.canvas.append('g').classed('trendlines',true).attr('clip-path',"url(#".concat(this.id,")")):this.canvas.select('.trendlines');var trendGroups=trendsContainer.selectAll('.trendline-group').data(trendData,function(d){return d.name;});var trendGroupsEnter=trendGroups.enter().append('g').attr('class','trendline-group');trendGroupsEnter.append('line').attr('class',function(d){return"trendline ".concat(_this131.colorScale.get()(d.name));}).attr('stroke-width',1).attr('x1',function(d){return _this131.xScale(d.coords[0]);}).attr('y1',function(d){return _this131.yScale(d.coords[1]);}).attr('x2',function(d){return _this131.xScale(d.coords[2]);}).attr('y2',function(d){return _this131.yScale(d.coords[3]);});trendGroupsEnter.append('line').attr('class','trendline-hover').attr('x1',function(d){return _this131.xScale(d.coords[0]);}).attr('y1',function(d){return _this131.yScale(d.coords[1]);}).attr('x2',function(d){return _this131.xScale(d.coords[2]);}).attr('y2',function(d){return _this131.yScale(d.coords[3]);}).attr('stroke','blue').attr('stroke-width',8).attr('opacity',0).on('mouseover',function(d){// Linear regression equation: y = ax + b
var newData={title:'Linear trend',series:{label:d.name,value:''},equation:{label:"y = ".concat(d['a'].toFixed(3)," x ").concat(d['b']>=0?'+':'-'," ").concat(Math.abs(d['b'].toFixed(3))),value:''},r2:{label:'R-squared',value:d['rSquared'].toFixed(3)}};_this131.trendTooltip.update(newData);// Highlight trend line and corresponding dots
_this131.canvas.selectAll('.dot').each(function(dd,i,selection){d3.select(selection[i]).attr('opacity',dd.series===d.name?'1':'.2');});_this131.canvas.selectAll('.trendline').each(function(dd,i,selection){d3.select(selection[i]).attr('opacity',dd.name===d.name?'1':'.2');});}).on('mouseout',function(){_this131.canvas.selectAll('.dot').attr('opacity','1');_this131.canvas.selectAll('.trendline').attr('opacity','1');});trendGroups.select('.trendline').transition().duration(this.animationSpeed).attr('x1',function(d){return _this131.xScale(d.coords[0]);}).attr('y1',function(d){return _this131.yScale(d.coords[1]);}).attr('x2',function(d){return _this131.xScale(d.coords[2]);}).attr('y2',function(d){return _this131.yScale(d.coords[3]);});trendGroups.select('.trendline-hover').transition().duration(this.animationSpeed).attr('x1',function(d){return _this131.xScale(d.coords[0]);}).attr('y1',function(d){return _this131.yScale(d.coords[1]);}).attr('x2',function(d){return _this131.xScale(d.coords[2]);}).attr('y2',function(d){return _this131.yScale(d.coords[3]);});trendGroups.exit().remove();}/**
   * Crosshair
   * @private
   */},{key:"_drawCrosshair",value:function _drawCrosshair(){var _this132=this;this.crosshair=this.canvas.select('.crosshair');if(this.crosshair.empty()){this.crosshair=this.canvas.append('g').attr('class','crosshair');this.crosshair.append('line').attr('class','crosshair-line-x');this.crosshair.append('line').attr('class','crosshair-line-y');this.crosshair.append('text').attr('class','crosshair-text');}// Mouse area should be above crosshair for proper mouseenter / mouseleave
this.mouseArea=this.canvas.select('.mouse-area').empty()?this.canvas.append('svg:rect').classed('mouse-area',true):this.canvas.select('.mouse-area');this.mouseArea.attr('width',this.width).attr('height',this.height).attr('fill','blue').attr('opacity','0').attr('pointer-events','all').on('mouseenter',function(){return _this132.crosshair.attr('opacity',1);}).on('mouseleave',function(){return _this132.crosshair.attr('opacity',0);}).on('mousemove',this._onMousemove.bind(this));}/**
   * Handle mouse move over `.mouse-area`.
   * @private
   */},{key:"_onMousemove",value:function _onMousemove(){var mouse=d3.mouse(this.mouseArea.node());var mouseX=this.xScale.invert(mouse[0]);var mouseY=this.yScale.invert(mouse[1]);this.crosshair.select('.crosshair-line-x').attr('x1',mouse[0]).attr('y1',0).attr('x2',mouse[0]).attr('y2',this.height);this.crosshair.select('.crosshair-line-y').attr('x1',0).attr('y1',mouse[1]).attr('x2',this.width).attr('y2',mouse[1]);this.crosshair.select('.crosshair-text').attr('x',mouse[0]+3).attr('y',mouse[1]-4).text("".concat(mouseX.toFixed(2),", ").concat(mouseY.toFixed(2)));}/**
   * Highlight one common element in all series
   * @private
   * @param {String} key - The key matching the common element
   */},{key:"_highlight",value:function _highlight(key){var dots=this.canvas.selectAll('.dot');var trendlines=this.canvas.selectAll('.trendline');if(key){dots.attr('opacity',function(d){return d.series===key?'1':'.2';});trendlines.attr('opacity',function(d){return d.name===key?'1':'.2';});}else{dots.attr('opacity','1');trendlines.attr('opacity','1');}}/**
   * Destroy component
   * @public
   */},{key:"destroy",value:function destroy(){}}]);return BubbleChart;}();var RadarChart=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {Object} [props.y] - Y axis properties
   * @param {string} [props.y.unit] - The Y axis unit
   * @param {boolean} [props.y.hideLabel] - If the y labels should be hidden
   * @param {Object} [props.x] - X axis properties
   * @param {string} [props.x.unit] - The X axis unit
   * @param {boolean} [props.x.hideLabel] - If the x labels should be hidden
   * @param {Tooltip} [props.tooltip] - Options for the tooltip
   */function RadarChart(props){_classCallCheck(this,RadarChart);this.data=props.data;this.element=props.element;this.height=props.height||250;this.margin=_objectSpread({top:25,bottom:25,right:25,left:25},props.margin);this.breakpointLimit=props.breakpoint||400;this.y=_objectSpread({unit:'',hideLabel:false},props.y);this.x=_objectSpread({unit:'',hideLabel:false},props.x);this.tooltip=_objectSpread({format:{title:null,value:'.2f'},isHidden:false},props.tooltip);}/**
   * Initialize the chart
   */_createClass(RadarChart,[{key:"init",value:function init(){this.stage=new Stage({element:this.element,margin:{bottom:0,left:0,right:0,top:0},height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));this.canvas=this.stage.getCanvas();this.colorScale=new ColorScale({length:this.data.series.length});this.colorScale.init();var legend=new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:_objectSpread({},this.margin,{left:0})});legend.init();this.tooltipBox=new Tooltip({element:this.element,data:this.data,hoverClass:['mouse-area','label'],format:this.tooltip.format,isTime:false,unit:{value:this.y.unit,title:this.x.unit}});this.tooltipBox.init();this.animationSpeed=950;this.outerLabelMargin=14;this.firstDrawFlag=true;this.draw();}/**
   * Draw the chart based on data
   * @param {Object[]} data - The data necessary to draw the chart
   */},{key:"draw",value:function draw(data){var _this133=this;var _this=this;this.data=data||this.data;this.width=this.stage.getCanvasWidth();var isBreakpointDraw=this.width<=this.breakpointLimit;var numberOfCommons=this.data.common.length;var angles=this.data.common.map(function(_,i){return Math.PI*2/numberOfCommons*i-Math.PI/2;});var rMin=d3.min(this.data.series,function(d){return d3.min(d.values);});var rMax=d3.max(this.data.series,function(d){return d3.max(d.values);});var effectiveWidth=this.width-this.margin.left-this.margin.right;var effectiveHeight=this.height-this.margin.top-this.margin.bottom;this.canvas.attr('transform',"translate(".concat(this.margin.left,",").concat(this.margin.top,")"));/**
     * Begin adjustment of margin so labels fit.
     */var autoMargin=0;this.canvas.selectAll('text.temp').data(this.data.common).enter().append('text').classed('temp',true).text(function(d){return d;}).each(function(d,i){var _this$getBBox=this.getBBox(),width=_this$getBBox.width,height=_this$getBBox.height;var rangeRadius;if(!isBreakpointDraw){rangeRadius=Math.max(0,Math.min(effectiveWidth,effectiveHeight)/2);}else{rangeRadius=Math.min(_this.width,_this.height)/2;}var labelUnitX=Math.cos(angles[i]);var labelUnitY=Math.sin(angles[i]);var labelPositionX=(rangeRadius+_this.outerLabelMargin)*labelUnitX;var labelPositionY=(rangeRadius+_this.outerLabelMargin)*labelUnitY;var textOffsetPositionX=labelPositionX;var textOffsetPositionY=labelPositionY;if(i===0){textOffsetPositionX+=width;}else if(angles.length%2===0&&i===angles.length/2){textOffsetPositionX+=width;}else{textOffsetPositionX+=angles[i]>Math.PI/2?-width:+width;}if(angles[i]>0&&angles[i]<Math.PI){textOffsetPositionY+=height;}else{textOffsetPositionY-=height;}if(textOffsetPositionX>effectiveWidth/2){autoMargin=Math.max(autoMargin,textOffsetPositionX-effectiveWidth/2);}else if(textOffsetPositionX<-effectiveWidth/2){autoMargin=Math.max(autoMargin,-textOffsetPositionX-effectiveWidth/2);}if(textOffsetPositionY>effectiveHeight/2){autoMargin=Math.max(autoMargin,textOffsetPositionY-effectiveHeight/2);}else if(textOffsetPositionY<-effectiveHeight/2){autoMargin=Math.max(autoMargin,-textOffsetPositionY-effectiveHeight/2);}this.remove();});/**
     * End adjustment of margin so labels fit.
     */var rangeRadius;if(!isBreakpointDraw){rangeRadius=Math.max(0,Math.min(effectiveWidth-2*autoMargin,effectiveHeight-2*autoMargin)/2);}else{rangeRadius=Math.min(this.width,this.height)/2;}var rScale=d3.scaleLinear().domain([rMin,rMax]).nice(Math.max(1,Math.round(rangeRadius/60))).range([0,rangeRadius]);var lineGenerator=d3.line().x(function(d,i){return rScale(d)*Math.cos(angles[i]);}).y(function(d,i){return rScale(d)*Math.sin(angles[i]);});this.canvas.classed('radar-chart',true);var radarChart=this.firstDrawFlag?this.canvas.append('g').classed('container',true).attr('transform',"translate(".concat(effectiveWidth/2,",").concat(effectiveHeight/2,")")):this.canvas.selectAll('g.container').attr('transform',"translate(".concat(effectiveWidth/2,",").concat(effectiveHeight/2,")"));/**
     * Draw the axis.
     */var suggestedTicks=Math.max(1,Math.round(rangeRadius/60));var axisTicks=rScale.ticks(suggestedTicks).reverse();if(axisTicks[axisTicks.length-1]!==rScale.domain()[0]){axisTicks.push(rScale.domain()[0]);}if(axisTicks[0]!==rScale.domain()[1]){axisTicks.unshift(rScale.domain()[1]);}var axisLineGenerator=d3.line().x(function(d,i){return d*Math.cos(angles[i]);}).y(function(d,i){return d*Math.sin(angles[i]);});var axisGroup=this.firstDrawFlag?radarChart.append('g').classed('axis',true).classed('axis-bottom',true):radarChart.selectAll('g.axis-bottom');if(numberOfCommons>0){var axisGroupCirclesUpdate=axisGroup.selectAll('path').data(axisTicks.map(function(d){return _this133.data.common.map(function(){return d;});}));axisGroupCirclesUpdate.transition().duration(this.animationSpeed).attr('d',function(d){return lineGenerator(d)+'Z';});axisGroupCirclesUpdate.enter().append('path').classed('domain',true).attr('fill','none').attr('d',function(d){return lineGenerator(d)+'Z';});axisGroupCirclesUpdate.exit().remove();if(!this.y.hideLabel){var circlesTicksUpdate=axisGroup.selectAll('text.tick').data(axisTicks).attr('x',0);circlesTicksUpdate.transition().duration(this.animationSpeed).attr('y',function(d){return-rScale(d);}).text(function(d){return d;});circlesTicksUpdate.enter().append('text').classed('tick',true).attr('x',0).attr('y',function(d){return-rScale(d);}).attr('dominant-baseline','hanging').text(function(d){return d;});circlesTicksUpdate.exit().remove();}// Update existing axis.
if(!this.firstDrawFlag){axisGroup.selectAll('line.line').data(this.data.common).transition().duration(this.animationSpeed).attr('x1',function(_,i){return rangeRadius*Math.cos(angles[i]);}).attr('y1',function(_,i){return rangeRadius*Math.sin(angles[i]);});if(!this.x.hideLabel){axisGroup.selectAll('text.label').data(this.data.common).attr('opacity',function(){return isBreakpointDraw?0:1;}).transition().duration(this.animationSpeed).attr('x',function(_,i){return(rangeRadius+_this133.outerLabelMargin)*Math.cos(angles[i]);}).attr('y',function(_,i){return(rangeRadius+_this133.outerLabelMargin)*Math.sin(angles[i]);});}}// Add new axis components.
if(this.firstDrawFlag){var axisTicksEnter=axisGroup.selectAll('g.tick').data(this.data.common).enter().append('g').classed('tick',true);axisTicksEnter.append('line').classed('line',true).attr('x0','0').attr('y0','0').attr('x1',function(_,i){return rangeRadius*Math.cos(angles[i]);}).attr('y1',function(_,i){return rangeRadius*Math.sin(angles[i]);});if(!this.x.hideLabel){axisTicksEnter.append('text').classed('label',true).attr('opacity',function(){return isBreakpointDraw?0:1;}).attr('x',function(_,i){return(rangeRadius+_this133.outerLabelMargin)*Math.cos(angles[i]);}).attr('y',function(_,i){return(rangeRadius+_this133.outerLabelMargin)*Math.sin(angles[i]);}).attr('text-anchor',function(_,i){if(i===0){return'middle';}else if(angles.length%2===0&&i===angles.length/2){return'middle';}else{return angles[i]>Math.PI/2?'end':'start';}}).attr('dominant-baseline',function(_,i){return angles[i]>0&&angles[i]<Math.PI?'hanging':'baseline';}).text(function(d){return d;});}}}/**
     * Draw the data points.
     */var lineGroup=this.firstDrawFlag?radarChart.append('g').classed('line-group',true):radarChart.selectAll('g.line-group');var pathsUpdate=lineGroup.selectAll('path.line').data(this.data.series,function(d){return d.name;});var pathsEnter=pathsUpdate.enter().append('path').attr('class',function(d){return'line '+_this133.colorScale.get()(d.name);});pathsUpdate.exit().remove();pathsUpdate.merge(pathsEnter).transition().duration(this.animationSpeed).attr('d',function(d){return lineGenerator(d.values)+'Z';});/**
     * Draw the value labels.
     */var valueGroupsContainer=this.firstDrawFlag?radarChart.append('g').classed('axis',true).classed('axis-top',true):radarChart.selectAll('g.axis-top');var valueGroupsUpdate=valueGroupsContainer.selectAll('g.values').data(this.data.series,function(d){return d.name;});var valueGroupsEnter=valueGroupsUpdate.enter().append('g').classed('values',true).attr('opacity',0);valueGroupsUpdate.exit().remove();var valueGroups=valueGroupsUpdate.merge(valueGroupsEnter);var valueTextUpdate=valueGroups.selectAll('text.value').data(function(d){return d.values;});var valueText=valueTextUpdate.enter().append('text').classed('value',true).merge(valueTextUpdate);valueTextUpdate.exit().remove();var calculateTextValuePosition=function calculateTextValuePosition(d,i,tw,th,direction){var labelUnitX=Math.cos(angles[i]);var labelUnitY=Math.sin(angles[i]);var labelPositionX=(rScale(d)+5)*labelUnitX;var labelPositionY=(rScale(d)+5)*labelUnitY;var textOffsetPositionX=labelPositionX;var textOffsetPositionY=labelPositionY;if(i===0){textOffsetPositionX+=tw;}else if(angles.length%2===0&&i===angles.length/2){textOffsetPositionX+=tw;}else{textOffsetPositionX+=angles[i]>Math.PI/2?-tw:+tw;}if(angles[i]>0&&angles[i]<Math.PI){textOffsetPositionY+=th;}else{textOffsetPositionY-=th;}var angle;if(textOffsetPositionX>=0){angle=Math.atan(textOffsetPositionY/textOffsetPositionX);}else{angle=Math.atan(textOffsetPositionY/textOffsetPositionX)+Math.PI;}angle+=Math.PI/2;var tooltipDeltaAngle=Math.PI*2/numberOfCommons;var iCommon1=Math.floor(angle/tooltipDeltaAngle)%numberOfCommons;var iCommon2=(iCommon1+1)%numberOfCommons;var outerCircleX1=rangeRadius*Math.cos(angles[iCommon1]);var outerCircleX2=rangeRadius*Math.cos(angles[iCommon2]);var outerCircleY1=rangeRadius*Math.sin(angles[iCommon1]);var outerCircleY2=rangeRadius*Math.sin(angles[iCommon2]);var lineVectorX=outerCircleX2-outerCircleX1;var lineVectorY=outerCircleY2-outerCircleY1;var deltaVectorX=textOffsetPositionX-outerCircleX1;var deltaVectorY=textOffsetPositionY-outerCircleY1;var crossProduct=lineVectorX*deltaVectorY-lineVectorY*deltaVectorX;var projectionFactor=(lineVectorY*(textOffsetPositionX-outerCircleX1)-lineVectorX*(textOffsetPositionY-outerCircleY1))/(labelUnitX*lineVectorY-labelUnitY*lineVectorX);if(crossProduct<0){if(direction==='x'){return labelPositionX-projectionFactor*labelUnitX;}else{return labelPositionY-projectionFactor*labelUnitY;}}else{if(direction==='x'){return labelPositionX;}else{return labelPositionY;}}};valueText.text(function(d){return d;}).attr('text-anchor',function(d,i){if(i===0){return'middle';}else if(angles.length%2===0&&i===angles.length/2){return'middle';}else{return angles[i]>Math.PI/2?'end':'start';}}).attr('dominant-baseline',function(d,i){if(angles[i]>0&&angles[i]<Math.PI){return'hanging';}else{return'baseline';}}).attr('x',function(d,i){var _this$getBBox2=this.getBBox(),width=_this$getBBox2.width,height=_this$getBBox2.height;return calculateTextValuePosition(d,i,width,height,'x');}).attr('y',function(d,i){var _this$getBBox3=this.getBBox(),width=_this$getBBox3.width,height=_this$getBBox3.height;return calculateTextValuePosition(d,i,width,height,'y');});/**
     * Draw the tooltip points.
     */var groupCircles=this.firstDrawFlag?radarChart.append('g').classed('circles',true):radarChart.selectAll('g.circles');var groupCirclesUpdate=groupCircles.selectAll('circle').data(this.data.series,function(d){return d.name;});groupCirclesUpdate.enter().append('circle').attr('r',3).attr('class',function(d){return'tooltip-circle '+_this133.colorScale.get()(d.name);}).attr('opacity',0);groupCirclesUpdate.exit().remove();/**
     * Handle mouse hover effects.
     */var handleMousemove=function handleMousemove(iCommon){if(iCommon>-1){radarChart.selectAll('circle.tooltip-circle').attr('opacity',1).attr('cx',function(d){return rScale(d.values[iCommon])*Math.cos(angles[iCommon]);}).attr('cy',function(d){return rScale(d.values[iCommon])*Math.sin(angles[iCommon]);});radarChart.selectAll('text.label').style('font-weight',function(d,i){return i===iCommon?'bold':null;});radarChart.selectAll('text.tick').style('opacity','0');radarChart.selectAll('line.line').classed('selected',function(d,i){return i===iCommon;});_this.tooltipBox.update(iCommon,_this.data);}};var handleMouseleave=function handleMouseleave(){radarChart.selectAll('circle.tooltip-circle').attr('opacity',0);radarChart.selectAll('text.label').style('font-weight',null);radarChart.selectAll('text.tick').style('opacity',null);radarChart.selectAll('line.line').classed('selected',false);};var mouseArea=this.firstDrawFlag?radarChart.append('path').classed('mouse-area',true):radarChart.selectAll('path.mouse-area');mouseArea.attr('d',axisLineGenerator(this.data.common.map(function(){return rangeRadius*1;}))+'Z');var labelArea=radarChart.selectAll('text.label');mouseArea.on('touchmove mousemove',function(){var coord=d3.mouse(this);var x=coord[0];var y=coord[1];var angle;if(x>=0){angle=Math.atan(y/x);}else{angle=Math.atan(y/x)+Math.PI;}angle+=Math.PI/2;var tooltipDeltaAngle=Math.PI*2/numberOfCommons;var iCommon=Math.round(angle/tooltipDeltaAngle)%numberOfCommons;handleMousemove(iCommon);});mouseArea.on('touchend mouseleave',function(){handleMouseleave();});labelArea.on('touchmove mousemove',function(d,i){handleMousemove(i);});labelArea.on('touchend mouseleave',function(){handleMouseleave();});this.firstDrawFlag=false;}/**
   * Highlight one common element in all series
   * @param {String} key - The key matching the common element
   */},{key:"_highlight",value:function _highlight(key){var lines=this.canvas.selectAll('.line-group .line');var ticks=this.canvas.selectAll('.axis-bottom text.tick');var values=this.canvas.selectAll('.axis-top .values');if(key){lines.attr('opacity',function(d){return d.name===key?'0.6':'.2';}).classed('line-focus',function(d){return d.name===key;});ticks.attr('opacity','0');values.attr('opacity',function(d){return d.name===key?'1':'0';});}else{lines.attr('opacity','1').classed('line-focus',false);ticks.attr('opacity','1');values.attr('opacity','0');}}/**
   * Destroy method
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}}]);return RadarChart;}();/**
 * Setup chart properties.
 * @param {Object}      props - The properties to initialize the stage
 * @param {Object}      props.data - The data necessary to draw the chart
 * @param {HTMLElement} props.element - The DOM element to append the chart
 * @param {boolean}     props.alerts - Determines if the alerts button should be on by default.
 * @param {boolean}     props.simulation - Calculate node locations automatically.
 * @param {boolean}     props.draggable - Determines if the nodes should be draggable.
 * @param {number}      props.zoom - The initial zoom level.
 * @param {number}      props.maxZoom - The max zoom amount.
 * @param {number}      props.minZoom - The min zoom amount.
 * @param {string}      props.grouping - Set the hover group method.
 */var LogicalViewChart=/*#__PURE__*/function(){function LogicalViewChart(props){var _this134=this;_classCallCheck(this,LogicalViewChart);this.element=props.element;this.height=props.height||500;this.data=JSON.parse(JSON.stringify(props.data));this.onSelect=props.onSelect;this.onMove=props.onMove;this.innerCircleRadius=16;this.outerCircleRadius=20;this.lineCircleRadius=10;this.circleFontSize=14;this.isProcessed=false;this.connectionMap={};this.showAlerts=props.alerts||false;this.simulation=props.simulation||false;this.draggable=props.draggable||false;this.zoom=props.zoom||1;this.minZoom=props.minZoom||0.5;this.maxZoom=props.maxZoom||2.0;this.grouping=props.grouping||'neighbour';this.properties={scale:function scale(){return 1/_this134.zoom;},lineDashArray:function lineDashArray(d){switch(d.type){case'dashed':return 4/_this134.zoom;case'solid':default:return null;}},mouseAreaClass:function mouseAreaClass(d){return d.alerts&&d.alerts.length>0||d.descriptions&&d.descriptions.length>0;},innerCircleRadius:function innerCircleRadius(){return _this134.innerCircleRadius;},outerCircleRadius:function outerCircleRadius(){return _this134.outerCircleRadius;},textPositionY:function textPositionY(){return _this134.outerCircleRadius+4;},alertsPositionY:function alertsPositionY(){return _this134.properties.textPositionY()+_this134.circleFontSize+4;},lineNodeGeometry:function lineNodeGeometry(d){var round=function round(e){return Math.round(e*100)/100;};var triangle=[[round(Math.cos(Math.PI/6+Math.PI*2/3*0)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI*2/3*0)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI/6+Math.PI*2/3*1)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI*2/3*1)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI/6+Math.PI*2/3*2)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI*2/3*2)*_this134.lineCircleRadius)]];var square=[[round(1/Math.sqrt(2)*_this134.lineCircleRadius),round(1/Math.sqrt(2)*_this134.lineCircleRadius)],[-round(1/Math.sqrt(2)*_this134.lineCircleRadius),round(1/Math.sqrt(2)*_this134.lineCircleRadius)],[-round(1/Math.sqrt(2)*_this134.lineCircleRadius),-round(1/Math.sqrt(2)*_this134.lineCircleRadius)],[round(1/Math.sqrt(2)*_this134.lineCircleRadius),-round(1/Math.sqrt(2)*_this134.lineCircleRadius)]];var pentagon=[[round(Math.cos(Math.PI*3/2+Math.PI*2/5*0)*_this134.lineCircleRadius),round(Math.sin(Math.PI*3/2+Math.PI*2/5*0)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI*3/2+Math.PI*2/5*1)*_this134.lineCircleRadius),round(Math.sin(Math.PI*3/2+Math.PI*2/5*1)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI*3/2+Math.PI*2/5*2)*_this134.lineCircleRadius),round(Math.sin(Math.PI*3/2+Math.PI*2/5*2)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI*3/2+Math.PI*2/5*3)*_this134.lineCircleRadius),round(Math.sin(Math.PI*3/2+Math.PI*2/5*3)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI*3/2+Math.PI*2/5*4)*_this134.lineCircleRadius),round(Math.sin(Math.PI*3/2+Math.PI*2/5*4)*_this134.lineCircleRadius)]];var hexagon=[[round(Math.cos(Math.PI/6+Math.PI/3*0)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI/3*0)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI/6+Math.PI/3*1)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI/3*1)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI/6+Math.PI/3*2)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI/3*2)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI/6+Math.PI/3*3)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI/3*3)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI/6+Math.PI/3*4)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI/3*4)*_this134.lineCircleRadius)],[round(Math.cos(Math.PI/6+Math.PI/3*5)*_this134.lineCircleRadius),round(Math.sin(Math.PI/6+Math.PI/3*5)*_this134.lineCircleRadius)]];if(d.shape==='hexagon'){return"\n            M".concat(hexagon[0][0]," ").concat(hexagon[0][1],"\n            L").concat(hexagon[1][0]," ").concat(hexagon[1][1],"\n            L").concat(hexagon[2][0]," ").concat(hexagon[2][1],"\n            L").concat(hexagon[3][0]," ").concat(hexagon[3][1],"\n            L").concat(hexagon[4][0]," ").concat(hexagon[4][1],"\n            L").concat(hexagon[5][0]," ").concat(hexagon[5][1]," Z");}else if(d.shape==='pentagon'){return"\n            M".concat(pentagon[0][0]," ").concat(pentagon[0][1],"\n            L").concat(pentagon[1][0]," ").concat(pentagon[1][1],"\n            L").concat(pentagon[2][0]," ").concat(pentagon[2][1],"\n            L").concat(pentagon[3][0]," ").concat(pentagon[3][1],"\n            L").concat(pentagon[4][0]," ").concat(pentagon[4][1]," Z");}else if(d.shape==='square'){return"\n            M".concat(square[0][0]," ").concat(square[0][1],"\n            L").concat(square[1][0]," ").concat(square[1][1],"\n            L").concat(square[2][0]," ").concat(square[2][1],"\n            L").concat(square[3][0]," ").concat(square[3][1]," Z");}return"\n          M".concat(triangle[0][0]," ").concat(triangle[0][1],"\n          L").concat(triangle[1][0]," ").concat(triangle[1][1],"\n          L").concat(triangle[2][0]," ").concat(triangle[2][1]," Z");}};}/**
   * Initialize the chart
   */_createClass(LogicalViewChart,[{key:"init",value:function init(){var _this135=this;var _this=this;this.element.classList.add('logical-view-chart');// Toggles.
this.legendAlerts=d3.select(this.element).append('div');this.labelAlerts=this.legendAlerts.append('label').classed('switch',true);this.legendAlertsInput=this.labelAlerts.append('input').attr('type','checkbox').attr('checked',this.showAlerts===true?true:null).on('click',function(){_this.showAlerts=this.checked;_this.canvas.selectAll('g.alerts').classed('hidden',!_this.showAlerts);});this.labelAlerts.append('i').classed('ball',true);this.labelAlerts.append('span').attr('data-enabled','Alerts on').attr('data-disabled','Alerts off');// Color scale.
this.colorScale=new ColorScale({});this.colorScale.init();if(this.data.alerts&&this.data.alerts.length>0){this.colorScale.set(d3.scaleOrdinal().domain(this.data.alerts.map(function(d){return d.name;})).range(['color-red icon icon-severity-critical','color-orange icon icon-severity-major','color-blue icon icon-severity-warning','color-yellow icon icon-severity-minor','color-gray icon icon-severity-indeterminate','color-green icon icon-severity-cleared']));}// Stage.
this.stage=new Stage({element:this.element,margin:{bottom:0,left:0,right:0,top:0},height:this.height});this.stage.init();this.stage.onResize(this.draw.bind(this));// Tooltip.
this.tooltipBox=new Tooltip({element:this.element,colorScale:this.colorScale,rawMode:true,data:{common:[],series:this.data.alerts||[]},hoverClass:'mouse-area'});this.tooltipBox.init();this.canvas=this.stage.getCanvas();this.svg=d3.select(this.canvas.node().parentNode);var zoom=d3.zoom().scaleExtent([this.minZoom,this.maxZoom]).on('zoom',function(){_this135.zoom=d3.event.transform.k;_this135.canvas.attr('transform',d3.event.transform);_this135.canvas.selectAll('g.container').attr('transform',"scale(".concat(_this135.properties.scale(),")"));_this135.canvas.selectAll('line').style('stroke-width',_this135.properties.scale).style('stroke-dasharray',_this135.properties.lineDashArray);});this.svg.call(zoom).call(zoom.transform,d3.zoomIdentity.scale(this.zoom));// Labels.
var labelGroup=this.svg.select('g.labels').empty()?this.svg.append('g').classed('labels',true):this.svg.select('g.labels');labelGroup.attr('transform','translate(0,20)');var labels=labelGroup.selectAll('g.label').data(this.data.labels||[]).enter().append('g').classed('label',true).attr('transform',function(d,i){return"translate(0,".concat(_this135.lineCircleRadius*2.5*i+10,")");});labels.selectAll('path.line-node').data(function(d){return[d];}).enter().append('path').classed('line-node',true).attr('d',this.properties.lineNodeGeometry).attr('transform',"translate(".concat(this.lineCircleRadius,",").concat(this.lineCircleRadius,")"));labels.selectAll('text.label').data(function(d){return[d];}).enter().append('text').classed('label',true).attr('dominant-baseline','middle').attr('transform',"translate(".concat(this.lineCircleRadius*2+8,",").concat(this.lineCircleRadius,")")).text(function(d){return d.name;});// Render.
this.draw(this.data);}/**
   * Draws the new data to canvas.
   */},{key:"draw",value:function draw(data){var _this136=this;var _this=this;if(data){this.isProcessed=false;this.data=JSON.parse(JSON.stringify(data));this.connectionMap={};this.data.links.forEach(function(d){if(_this136.connectionMap[d.source]){_this136.connectionMap[d.source].push(d.target);}else{_this136.connectionMap[d.source]=[d.target];}if(_this136.connectionMap[d.target]){_this136.connectionMap[d.target].push(d.source);}else{_this136.connectionMap[d.target]=[d.source];}});var disableAlerts=true;this.data.nodes.forEach(function(node){if(node.alerts&&node.alerts.length>0){disableAlerts=false;}});if(disableAlerts===true){this.legendAlertsInput.attr('disabled',true);}else{this.legendAlertsInput.attr('disabled',null);}}this.width=this.stage.getCanvasWidth();// Center group.
var centerGroup=this.canvas.select('g.center').empty()?this.canvas.append('g').classed('center',true):this.canvas.select('g.center');centerGroup.attr('transform',"translate(".concat(this.width/2.0,",").concat(this.height/2.0,")"));// Links.
var linksUpdate=centerGroup.selectAll('line').data(this.data.links).style('stroke-width',this.properties.scale).style('stroke-dasharray',this.properties.lineDashArray);linksUpdate.exit().remove();var linksEnter=linksUpdate.enter().append('line').style('stroke-width',this.properties.scale).style('stroke-dasharray',this.properties.lineDashArray);var linkNodesUpdate=centerGroup.selectAll('g.line-node').data(this.data.links.filter(function(d){return d.data!==undefined;}));var linkNodesEnter=linkNodesUpdate.enter().append('g').classed('line-node',true);linkNodesUpdate.exit().remove();var linkNodes=linkNodesUpdate.merge(linkNodesEnter);var linkNodesContainerUpdate=linkNodes.selectAll('g.container').data(function(d){return[d];});linkNodesContainerUpdate.exit().remove();var linkNodesContainerEnter=linkNodesContainerUpdate.enter().append('g').classed('container',true);var linkNodesContainers=linkNodesContainerUpdate.merge(linkNodesContainerEnter);var linkNodesCircleUpdate=linkNodesContainers.selectAll('path.line-node').data(function(d){return[d.data];}).attr('d',this.properties.lineNodeGeometry);linkNodesCircleUpdate.exit().remove();linkNodesCircleUpdate.enter().append('path').classed('line-node',true).attr('d',this.properties.lineNodeGeometry);// Nodes.
var nodesUpdate=centerGroup.selectAll('g.circle').data(this.data.nodes);nodesUpdate.exit().remove();var nodesEnter=nodesUpdate.enter().append('g').classed('circle',true);this._nodes=nodesEnter.merge(nodesUpdate);this._links=linksEnter.merge(linksUpdate);this._linkNodes=linkNodes;// Setup click and mouse hover state.
this._nodes.on('click',function(){if(this.classList.contains('selected')){this.classList.remove('selected');}else{this.classList.add('selected');}var selected=[];_this._nodes.each(function(d){if(this.classList.contains('selected')){selected.push(d);}});if(_this.onSelect){_this.onSelect(selected);}}).on('touchmove mousemove',function(d1){// Node grouping.
_this._nodes.style('opacity',function(d2){if(d1===d2){return'1';}// Grouping methods.
switch(_this136.grouping){case'type':if(d1.group===d2.group){return'1';}else{return'0.2';}case'neighbour':default:if(_this136.connectionMap[d1.key]&&_this136.connectionMap[d1.key].indexOf(d2.key)!==-1||_this136.connectionMap[d2.key]&&_this136.connectionMap[d2.key].indexOf(d1.key)!==-1){return'1';}return'0.2';}});// Tooltip.
var series=[];if(d1.descriptions&&d1.descriptions.length>0){series=series.concat(d1.descriptions.map(function(e){return{name:e};}));}if(d1.alerts&&d1.alerts.length>0){series=series.concat(d1.alerts.map(function(e){return{name:"".concat(e.name," (").concat(e.value,")")};}));}_this136.tooltipBox.update(0,{common:[d1.name],series:series});}).on('touchend mouseleave',function(){_this._nodes.style('opacity',null);});// Setup draggable state.
if(this.draggable===true){this._nodes.call(function(){function dragged(){d3.event.subject.x=d3.event.x;d3.event.subject.y=d3.event.y;if(_this._simulation)_this._simulation.stop();_this._updatePositions();}function dragend(){d3.event.subject.x=d3.event.x;d3.event.subject.y=d3.event.y;if(_this.onMove)_this.onMove(d3.event.subject);_this._updatePositions();}return d3.drag().on('drag',dragged).on('end',dragend);}());}// Node container.
var nodesContainerUpdate=this._nodes.selectAll('g.container').data(function(d){return[d];}).attr('class',function(d){var ret=['container'];var maxAlert;if(d.alerts&&d.alerts.length>0){maxAlert=d.alerts[0];d.alerts.forEach(function(e){maxAlert=e.value>maxAlert.value?e:maxAlert;});var classes=_this136.colorScale.get()(maxAlert.name);var colorClass=classes.split(' ')[0];ret.push(colorClass);}return ret.join(' ');});nodesContainerUpdate.exit().remove();var nodesContainerEnter=nodesContainerUpdate.enter().append('g').attr('class',function(d){var ret=['container'];var maxAlert;if(d.alerts&&d.alerts.length>0){maxAlert=d.alerts[0];d.alerts.forEach(function(e){maxAlert=e.value>maxAlert.value?e:maxAlert;});var classes=_this136.colorScale.get()(maxAlert.name);var colorClass=classes.split(' ')[0];ret.push(colorClass);}return ret.join(' ');});var containers=nodesContainerUpdate.merge(nodesContainerEnter).attr('scale',"scale(".concat(this.properties.scale(),")"));// Root circle.
var rootUpdate=containers.selectAll('circle.outer').data(function(d){return[d];}).attr('r',this.properties.outerCircleRadius).style('stroke-width',1).classed('mouse-area',this.properties.mouseAreaClass);rootUpdate.enter().append('circle').classed('outer',true).attr('r',this.properties.outerCircleRadius).style('stroke-width',1).classed('mouse-area',this.properties.mouseAreaClass);rootUpdate.exit().remove();// Inner circle.
var circleUpdate=containers.selectAll('circle.circle').data(function(d){return[d];}).attr('r',this.properties.innerCircleRadius).classed('mouse-area',this.properties.mouseAreaClass);circleUpdate.enter().append('circle').classed('circle',true).attr('r',this.properties.innerCircleRadius).classed('mouse-area',this.properties.mouseAreaClass);circleUpdate.exit().remove();// Icon update.
var iconUpdate=containers.selectAll('text.icon').data(function(d){return[d];}).attr('class',function(d){return"icon ".concat(d.icon);}).classed('mouse-area',this.properties.mouseAreaClass);var iconEnter=iconUpdate.enter().append('text').attr('text-anchor','middle').attr('dominant-baseline','middle').attr('class',function(d){return"icon ".concat(d.icon);}).classed('mouse-area',this.properties.mouseAreaClass);iconUpdate.exit().remove();var icons=iconUpdate.merge(iconEnter);icons.text(function(){return getComputedStyle(this,':before').content.slice(1,-1);});// Text section.
var textUpdate=containers.selectAll('text.text').data(function(d){return[d];}).text(function(d){return d.name;}).attr('y',this.properties.textPositionY).classed('mouse-area',this.properties.mouseAreaClass);textUpdate.exit().remove();textUpdate.enter().append('text').classed('text',true).attr('text-anchor','middle').attr('dominant-baseline','hanging').attr('y',this.properties.textPositionY).classed('mouse-area',this.properties.mouseAreaClass).text(function(d){return d.name;});// Alert icons.
containers.filter(function(d){return!d.alerts||d.alerts.length===0;}).selectAll('g.alerts').remove();var alertsUpdate=containers.filter(function(d){return d.alerts&&d.alerts.length>0;}).selectAll('g.alerts').data(function(d){return[d];}).classed('hidden',!this.showAlerts).attr('transform',"translate(0,".concat(this.properties.alertsPositionY(),")"));var alertsEnter=alertsUpdate.enter().append('g').classed('alerts',true).classed('hidden',!this.showAlerts).attr('transform',"translate(0,".concat(this.properties.alertsPositionY(),")"));var alerts=alertsUpdate.merge(alertsEnter);var alertTextUpdate=alerts.selectAll('text.alert.text').data(function(d){return d.alerts;}).attr('alignment-baseline','hanging').attr('text-anchor','start').classed('mouse-area',true).text(function(d){return d.value;});alertTextUpdate.exit().remove();alertTextUpdate.enter().append('text').classed('alert',true).classed('text',true).attr('alignment-baseline','hanging').attr('text-anchor','start').classed('mouse-area',true).text(function(d){return d.value;});var alertsIconUpdate=alerts.selectAll('text.alert.icon').data(function(d){return d.alerts;}).attr('class',function(d){return"alert ".concat(_this136.colorScale.get()(d.name));}).classed('mouse-area',true);alertsIconUpdate.exit().remove();var alertsIconEnter=alertsIconUpdate.enter().append('text').attr('class',function(d){return"alert ".concat(_this136.colorScale.get()(d.name));}).classed('mouse-area',true);alertsIconUpdate.merge(alertsIconEnter).attr('alignment-baseline','hanging').attr('text-anchor','end').text(function(){return getComputedStyle(this,':before').content.slice(1,-1);});// Calculate alert positions.
alerts.each(function(){var maxLength=0;d3.select(this).selectAll('text.text').each(function(){maxLength=Math.max(this.getComputedTextLength(),maxLength);}).attr('transform',function(d,i){return"translate(".concat(-maxLength/2+14/2,", ").concat(i*16,")");});d3.select(this).selectAll('text.icon').attr('transform',function(d,i){return"translate(".concat(-maxLength/2+6/2,", ").concat(i*16,")");});});if(this.simulation===false){if(this.isProcessed===false){var keyNodeMap={};this.data.nodes.forEach(function(node){keyNodeMap[node.key]=node;});this.data.links.forEach(function(link){link.source=keyNodeMap[link.source];link.target=keyNodeMap[link.target];});}this.isProcessed=true;this._updatePositions();}else{// Start a simulation.
if(this.isProcessed!==true){if(this._simulation){this._simulation.stop();this._simulation=undefined;}this._simulation=d3.forceSimulation(this.data.nodes).force('link',d3.forceLink().id(function(d){return d.key;}).links(this.data.links)).force('charge',d3.forceManyBody().strength(-5000)).force('centerX',d3.forceX(0).strength(0.2)).force('centerY',d3.forceY(0).strength(0.2)).on('tick',this._updatePositions.bind(this));this.isProcessed=true;}}}/**
   * Update node locations from computed input.
   */},{key:"_updatePositions",value:function _updatePositions(){var links=this._links;var nodes=this._nodes;var linkNodes=this._linkNodes;links.attr('x1',function(d){return d.source.x;}).attr('y1',function(d){return d.source.y;}).attr('x2',function(d){return d.target.x;}).attr('y2',function(d){return d.target.y;});nodes.attr('transform',function(d){return"translate(".concat(d.x,",").concat(d.y,")");});linkNodes.attr('transform',function(d){var x=(d.source.x+d.target.x)/2.0;var y=(d.source.y+d.target.y)/2.0;return"translate(".concat(x,",").concat(y,")");});}/**
   * Destroy method
   */},{key:"destroy",value:function destroy(){this.element.innerHTML='';}}]);return LogicalViewChart;}();/**
 * Setup chart properties.
 * @param {Object}      props - The properties to initialize the stage
 * @param {Object}      props.data - The data necessary to draw the chart
 * @param {HTMLElement} props.element - The DOM element to append the chart
 * @param {boolean}     props.compact - If to initialize the chart in compact mode
 * @param {boolean}     props.alerts - If to initialize the chart in alert mode
 * @param {boolean}     props.horizontal - If to draw the chart in horizontal mode
 * @param {Function}    props.onDropdownClick - A callback to react to dropdown click events
 */var HierarchyChart=/*#__PURE__*/function(){function HierarchyChart(props){var _this137=this;_classCallCheck(this,HierarchyChart);this.element=props.element;this.height=props.height||1000;this.horizontal=props.horizontal||false;this.data=props.data;this.dropdowns=[];this.compactView=props.compact===true?true:false;this.showValues=props.alerts===true?true:false;this.onDropdownClick=props.onDropdownClick;this.listeners={onDropdownClick:function onDropdownClick(d){if(_this137.onDropdownClick){_this137.onDropdownClick(d);}}};}_createClass(HierarchyChart,[{key:"init",value:function init(){var _this=this;this.canvas=d3.select(this.element);this.canvas.classed('hierarchy-chart',true);// Color scale.
this.colorScale=new ColorScale({});this.colorScale.init();if(this.data.alerts&&this.data.alerts.length>0){this.colorScale.set(d3.scaleOrdinal().domain(this.data.alerts.map(function(d){return d.name;})).range(['icon icon-severity-critical color-red','icon icon-severity-major color-orange','icon icon-severity-minor color-yellow','icon icon-severity-warning color-blue','icon icon-severity-indeterminate color-gray','icon icon-severity-cleared color-green']));}// Add switches.
this.legendCompact=this.canvas.append('div');this.labelCompact=this.legendCompact.append('label').classed('switch',true);var inputCheckboxCompact=this.labelCompact.append('input').attr('type','checkbox').on('click',function(){_this.compactView=this.checked;_this.canvas.select('.root-container').classed('compact',_this.compactView);});if(this.compactView){inputCheckboxCompact.attr('checked',true);}this.labelCompact.append('i').classed('ball',true);this.labelCompact.append('span').attr('data-enabled','Compact view on').attr('data-disabled','Compact view off');this.legendAlerts=this.canvas.append('div');this.labelAlerts=this.legendAlerts.append('label').classed('switch',true);this.inputCheckboxAlerts=this.labelAlerts.append('input').attr('type','checkbox').on('click',function(){_this.showValues=this.checked;_this.canvas.selectAll('.alerts').classed('hidden',!_this.showValues);});if(this.showValues){this.inputCheckboxAlerts.attr('checked',true);}this.labelAlerts.append('i').classed('ball',true);this.labelAlerts.append('span').attr('data-enabled','Alerts on').attr('data-disabled','Alerts off');// Diagram container.
this.rootContainer=this.canvas.append('div').classed('root-container',true).style('max-height',"".concat(this.height,"px")).classed('compact',this.compactView).classed('horizontal',this.horizontal);this.draw(this.data);}},{key:"draw",value:function draw(data){if(data){this.data=data;}this.dropdowns.forEach(function(dropdown){return dropdown.destroy();});this.dropdowns=[];this.rootContainer.text('');if(this._hasAlerts(this.data.nodes)){this.inputCheckboxAlerts.property('disabled',false);}else{this.inputCheckboxAlerts.property('disabled',true);}var rootNode=this.rootContainer.append('table').classed('root-table',true);var rootCellContainer=rootNode.append('tr');var subTreeTables=rootCellContainer.selectAll('td').data(data.nodes,function(d){return d.key;}).enter().append('td').classed('root-td',true);if(this.horizontal!==true){this._renderVerticalSubTree(subTreeTables,0);}else{this._renderHorizontalSubTree(subTreeTables,0);}}},{key:"_hasAlerts",value:function _hasAlerts(nodes){if(nodes&&nodes.length===0){return false;}for(var i=0;i<nodes.length;i+=1){if(nodes[i].alerts&&nodes[i].alerts.length>0){return true;}else if(nodes[i].children&&nodes[i].children.length>0){if(this._hasAlerts(nodes[i].children)){return true;}}}return false;}},{key:"_renderCellData",value:function _renderCellData(container){var _this138=this;var card=container.append('div').attr('class',function(d){var classes=['card'];if(d.alerts&&d.alerts.length>0){classes.push('alert');}else{classes.push('normal');}return classes.join(' ');}).on('click',function(d){var dropdown=this.querySelector('.dropdown');var table=this.closest('.child-table');var target=d3.event.target?d3.event.target:d3.event.srcElement;if(dropdown&&dropdown===target||dropdown&&dropdown.contains(target)){return;}if(table&&table.classList.contains('closed')){d.open=true;table.classList.remove('closed');}else{d.open=false;table.classList.add('closed');}});// Setup elements.
card.append('span').classed('key',true).text(function(d){return d.key;});card.filter(function(d){return d.hasSibling;}).append('span').classed('sibling',true).on('touchmove mousemove',function(d){_this138.canvas.selectAll('.card').each(function(a){if(d===a){this.classList.add('marked');}else if(a.children&&a.children.indexOf(d)!==-1){this.classList.add('marked');}else{this.classList.remove('marked');}});}).on('touchend mouseleave',function(){_this138.canvas.selectAll('.card').each(function(){this.classList.remove('marked');});});var header=card.append('div').classed('header',true);var headerLeft=header.append('div').classed('left',true);var headerRight=header.append('div').classed('right',true);var content=card.append('div').classed('content',true);headerLeft.filter(function(d){return d.title?d.title.length>0:false;}).append('div').classed('title',true).text(function(d){return d.title;});headerLeft.filter(function(d){return d.subtitle?d.subtitle.length>0:false;}).append('span').classed('subtitle',true).text(function(d){return d.subtitle;});content.selectAll('p.description').data(function(d){return d.descriptions?d.descriptions:[];}).enter().append('p').classed('description',true).text(function(d){return d;});// Setup dropdown.
var more=headerRight.filter(function(d){return d.menus?d.menus.length>0:false;}).append('div').classed('action',true).append('div').classed('dropdown',true).classed('more',true).attr('data-type','click');var button=more.append('button').classed('btn',true).classed('clickable',true);button.append('i').classed('icon',true).classed('icon-more',true);var menu=more.append('div').classed('menu',true).classed('right',true);menu.selectAll('div.item').data(function(d){return d.menus?d.menus:[];}).enter().append('div').classed('item',true).text(function(d){return d.title;}).on('click',this.listeners.onDropdownClick);more.nodes().forEach(function(node){var dropdown=new Dropdown(node);dropdown.init();_this138.dropdowns.push(dropdown);});// Setup value icons.
var values=card.filter(function(d){return d.alerts&&d.alerts.length>0;}).append('div').classed('alerts',true).classed('hidden',!this.showValues).selectAll('div.value').data(function(d){return d.alerts;}).enter().append('div').classed('value',true).on('touchmove mousemove',function(){_this138.canvas.selectAll('.card.normal').style('opacity','0.2');if(_this138.horizontal===true){_this138.canvas.selectAll('.line-horizontal-bottom').style('opacity','0.2');_this138.canvas.selectAll('.line-horizontal-left').style('opacity','0.2');_this138.canvas.selectAll('.line-horizontal-right').style('opacity','0.2');}else{_this138.canvas.selectAll('.line-vertical-left').style('opacity','0.2');_this138.canvas.selectAll('.line-vertical-top').style('opacity','0.2');_this138.canvas.selectAll('.line-vertical-down').style('opacity','0.2');}}).on('touchend mouseleave',function(){_this138.canvas.selectAll('.card.normal').style('opacity','');if(_this138.horizontal===true){_this138.canvas.selectAll('.line-horizontal-bottom').style('opacity','');_this138.canvas.selectAll('.line-horizontal-left').style('opacity','');_this138.canvas.selectAll('.line-horizontal-right').style('opacity','');}else{_this138.canvas.selectAll('.line-vertical-left').style('opacity','');_this138.canvas.selectAll('.line-vertical-top').style('opacity','');_this138.canvas.selectAll('.line-vertical-down').style('opacity','');}});var tooltips=values.classed('tooltip',true).append('div').classed('message bottom white',true);tooltips.append('p').classed('title',true).text(function(d){return"".concat(d.name," (").concat(d.value,")");});tooltips.selectAll('p.description').data(function(d){return d&&d.descriptions?d.descriptions:[];}).enter().append('p').classed('description',true).text(function(d){return d;});values.append('i').attr('class',function(d){return _this138.colorScale.get()(d.name);}).classed('icon',true);values.append('p').text(function(d){return d.value;});}},{key:"_renderVerticalSubTree",value:function _renderVerticalSubTree(nodeRows,depth){if(nodeRows.data().length===0){return;}var tables=nodeRows.append('table').attr('class',function(d){var classes=['child-table'];if(d.open===false||d.open===undefined&&depth>=2){d.open=false;classes.push('closed');}else{d.open=true;}return classes.join(' ');});var tablesWithChildren=tables.filter(function(d){return d.children&&d.children.length>0;});// Cell container.
var cellContainer=tables.append('tr').classed('tr-node',true).append('td').attr('colspan',function(d){return d.children?d.children.length*2:'';}).append('div').classed('node-container',true);// Line down.
tablesWithChildren.append('tr').classed('tr-line',true).append('td').attr('colspan',function(d){return d.children.length*2;}).append('div').classed('line-vertical-down',true);// Line connections.
tablesWithChildren.append('tr').classed('tr-line',true).each(function(d){var row=d3.select(this);var numberOfChildren=d.children.length;d.children.forEach(function(child,i){var left=row.append('td');var right=row.append('td');left.classed('line-vertical-right',true);right.classed('line-vertical-left',true);if(i!==0){left.classed('line-vertical-top',true);}if(i!==numberOfChildren-1){right.classed('line-vertical-top',true);}});});var nextNodeRows=tablesWithChildren.append('tr').classed('tr-child',true);var nextNodeCells=nextNodeRows.selectAll('td').data(function(d){return d.children;}).enter().append('td').attr('colspan',2);this._renderCellData(cellContainer);this._renderVerticalSubTree(nextNodeCells,depth+1);}},{key:"_renderHorizontalSubTree",value:function _renderHorizontalSubTree(nodeRows,depth){if(nodeRows.data().length===0){return;}var tables=nodeRows.append('table').attr('class',function(d){var classes=['child-table','horizontal'];if(d.open===false||d.open!==true&&depth>=2){d.open=false;classes.push('closed');}else{d.open=true;}return classes.join(' ');});var tablesWithoutChildren=tables.filter(function(d){return!(d.children&&d.children.length>0);});var tablesWithChildren=tables.filter(function(d){return d.children&&d.children.length>0;});// cell container.
var cellsWithoutChildrenContainer=tablesWithoutChildren.append('tr').classed('tr-node',true).append('td').append('div').classed('node-container',true).classed('horizontal',true);var rowWithChildren=tablesWithChildren.append('tr').classed('tr-node',true);var cellsWithChildrenContainer=rowWithChildren.append('td').attr('rowspan',function(d){return d.children?d.children.length*2:'';}).append('div').classed('node-container',true).classed('horizontal',true);// Line right.
rowWithChildren.append('td').attr('rowspan',function(d){return d.children?d.children.length*2:'';}).classed('line-horizontal-right-container',true).append('div').classed('line-horizontal-right',true);// Line connections and nodes.
rowWithChildren.append('td').classed('line-horizontal-bottom',true);var children=rowWithChildren.append('td').classed('td-child',true).attr('rowspan',2);tablesWithChildren.each(function(d){var element=d3.select(this);var numberOfChildren=d.children.length;d.children.forEach(function(_,i){var top=element.append('tr').append('td').classed('line-horizontal-top',true);if(i!==numberOfChildren-1){top.classed('line-horizontal-left',true);}if(i!==numberOfChildren-1){var row=element.append('tr');row.append('td').classed('line-horizontal-bottom',true).classed('line-horizontal-left',true);children=children.merge(row.append('td').classed('td-child',true).attr('rowspan',2));}});});var nextNodeCells=tablesWithChildren.selectAll('td.td-child').data(function(d){return d.children;});this._renderCellData(cellsWithoutChildrenContainer);this._renderCellData(cellsWithChildrenContainer);this._renderHorizontalSubTree(nextNodeCells,depth+1);}},{key:"destroy",value:function destroy(){this.dropdowns.forEach(function(dropdown){dropdown.destroy();});this.element.innerText='';}}]);return HierarchyChart;}();/**
 * @file Component to create line chart
 */var StackedAreaChart=/*#__PURE__*/function(){/**
   * Setup chart properties
   * @param {Object} props - The properties to initialize the stage
   * @param {Object} props.data - The data necessary to draw the chart
   * @param {HTMLElement} props.element - The DOM element to append the chart
   * @param {number} [props.height] - The height of the chart
   * @param {Object} [props.margin] - The top, right, bottom and left margins
   * @param {number} [props.margin.top] - The top margin
   * @param {number} [props.margin.right] - The right margin
   * @param {number} [props.margin.bottom] - The bottom margin
   * @param {number} [props.margin.left] - The left margin
   * @param {Object} [props.y] - Y axis properties
   * @param {boolean} [props.y.isPercentage] - If Y axis is in percentage
   * @param {string} [props.y.unit] - The Y axis unit
   * @param {number} [props.y.decimalOffset] - Adjust the decimal position of the units
   * @param {string} [props.y.tickFormat] - The Y axis tick format
   * @param {Object} [props.x] - X axis properties
   * @param {boolean} [props.x.scaleType] - The type of scale used for the x-axis
   * @param {string} [props.x.unit] - The X axis unit
   * @param {string} [props.x.tickFormat] - The X axis tick format
   * @param {Object} [props.format] - Format used for line chart data manipulation
   * @param {string} [props.format.input] - Format used to parse the data input
   * @param {Object} [props.tooltip] - Tooltip properties
   * @param {boolean} [props.tooltip.isHidden] - Hide the tooltip
   * @param {Object} [props.tooltip.format] - Format necessary for representing data
   * @param {string} [props.tooltip.format.title] - Time specific format (see D3 formats)
   * @param {string} [props.tooltip.format.value] - Number specific format (see D3 formats)
   */function StackedAreaChart(props){_classCallCheck(this,StackedAreaChart);this.data=props.data;this.element=props.element;this.height=props.height||250;this.showTotal=props.showTotal||true;this.format=_objectSpread({input:'%Y-%m-%d'},props.format);this.margin=_objectSpread({top:25,bottom:35,right:25,left:35},props.margin);this.tooltip=_objectSpread({format:{title:null,value:'.2f'},isHidden:false},props.tooltip);this.y=_objectSpread({isPercentage:false,unit:null,decimalOffset:0},props.y);this.x=_objectSpread({scaleType:'time',unit:''},props.x);// params
this.animationSpeed=980;this.axisPadding=8;this.fontSize=14;this.id=Date.now();if(this.y.unit||this._showPercentage()){this.margin.top+=this.fontSize+this.axisPadding;}if(this.x.unit){this.margin.bottom+=this.fontSize+this.axisPadding;}this.isNegative=true;}/**
   * Determine whether percentage units should be shown
   * @return {boolean} - A boolean representing whether percentage units should be shown
   * @private
   */_createClass(StackedAreaChart,[{key:"_showPercentage",value:function _showPercentage(){return this.y.unit===null&&this.y.isPercentage;}/**
   * Initialize the chart
   * @public
   */},{key:"init",value:function init(){this._parseData();this._createCommonComponents();this.element.classList.add('stacked-area-container');this.stage.onResize(this._render.bind(this));this.canvas=this.stage.getCanvas();this._render();}/**
   * Filter and format data, set instance variables
   * @param {Object} data - The data to be parsed
   * @private
   */},{key:"_parseData",value:function _parseData(data){this.data=data||this.data;this._parseDates();this._sortCommonData(this.data.common,this.x.scaleType);this.isNegative=this._isNegative();this.stackedData=this._stackData(this.data);this.stackedData.summary=this._getSummary(this.stackedData);}/**
   * Format and parse time data if necessary
   * @private
   */},{key:"_parseDates",value:function _parseDates(){var _this139=this;if(this.x.scaleType==='time'){this.data.common.forEach(function(date,i){if(!(date instanceof Date)){var formatedDate=Format.formatTime(_this139.format.input)(new Date(date));_this139.data.common[i]=d3.timeParse(_this139.format.input)(formatedDate);}});}}/**
   * Sorts the common data in ascending order (date or numerical)
   * @param {array} commonData - array of common continuous data
   * @param {boolean} isDate - specifies if the chart uses Date values
   * @private
   */},{key:"_sortCommonData",value:function _sortCommonData(commonData,scaleType){// Note: to perform the bisection correctly, the array must be ordered
if(scaleType==='time'){commonData.sort(function(a,b){return new Date(a)-new Date(b);});}else if(scaleType==='linear'){commonData.sort(function(a,b){return a-b;});}}/**
   * Determine whether the chart is negative or not
   * @return {boolean} - A boolean representing whether the chart is negative or not
   * @private
   */},{key:"_isNegative",value:function _isNegative(){var _this140=this;if(this.y.isPercentage){return false;}var extreme=this.data.common.map(function(_,i){return _this140._addColumn(_this140.data.series,i);}).reduce(function(a,b){return _this140._mostExtreme(a,b);});return extreme<0;}/**
   * Determine the most extreme (i.e. most negative or positive) of two values
   * @param {number} a - The first value
   * @param {number} b - The second value
   * @return {number} - The most extreme of the two values
   * @private
   */},{key:"_mostExtreme",value:function _mostExtreme(a,b){if(Math.abs(a)>Math.abs(b)){return a;}return b;}/**
   * Generate a copy of the data with a stack of the values in each series
   * @param {Object} data - The data to be copied and stacked
   * @return {Object} - The stacked data
   * @private
   */},{key:"_stackData",value:function _stackData(data){var _this141=this;var stackedData={};stackedData.series=data.series.map(function(series,i){return _this141._stackSeries(series,i);});stackedData.common=data.common;return stackedData;}/**
   * Generate a copy of a series with a stack of the values in each series
   * @param {Object} series - The series to be copied and stacked
   * @param {number} i - The index of the series to be copied and stacked
   * @return {Object} - The stacked series
   * @private
   */},{key:"_stackSeries",value:function _stackSeries(series,i){var _this142=this;var stackedSeries={};stackedSeries.name=series.name;stackedSeries.values=[];stackedSeries.stack=series.values.map(function(v,j){var colSum=_this142._addColumn(_this142.data.series,j,i);var value=_this142._transform(v,j);var start=_this142._transform(colSum,j);var end=value+start;stackedSeries.values[j]=value;return[start,end];});return stackedSeries;}/**
   * Add all values that occupy the same position in each series
   * @param {array} seriesArray - An array representing the series
   * @param {number} column - A number representing the index of the column to be added
   * @param {number} limit - A number representing the index of the last series to be added
   * @return {number} - The sum of all values occupying the same position in each series
   * @private
   */},{key:"_addColumn",value:function _addColumn(seriesArray,column,limit){var _this143=this;return seriesArray.map(function(series){return series.values[column];}).filter(function(_,i){return _this143._shouldBeAdded(i,limit,seriesArray.length);}).reduce(function(accumulator,value){return accumulator+Number(value);},0);}/**
   * Determine wheter an entry should be added to the sum of columns
   * @param {number} i - A number representing the index of the entry to be added
   * @param {number} limit - A number representing the index of the last entry to be added
   * @param {number} defaultLimit - A number representing a default limit for negative values
   * @return {boolean} - A boolean representing whether an entry should be added to the sum of columns
   * @private
   */},{key:"_shouldBeAdded",value:function _shouldBeAdded(i,limit,defaultLimit){if(this.isNegative){return i<this._useDefault(limit,defaultLimit);}return i>this._useDefault(limit,-1);}/**
   * Use the default value when value is undefined
   * @param {number} value - The value to use if not undefined
   * @param {number} defaultValue - The value to use if value is undefined
   * @return {number} - The value of the defualt value, if value is undefined
   * @private
   */},{key:"_useDefault",value:function _useDefault(value,defaultVal){return value===undefined?defaultVal:value;}/**
   * Apply transformations to the data based on passed parameters
   * @param {number} value - The value to be transformed
   * @param {number} i - The index of the column that the value belongs to
   * @return {number} - A number, transformed according to parameters
   * @private
   */},{key:"_transform",value:function _transform(v,i){var value=Number(v);if(this.y.isPercentage){return this._toPercent(value,i);}if(this.y.decimalOffset!==0){return this._decimalOffset(value);}return value;}/**
   * Convert values to percentages if this.y.isPercentage attribute is true
   * @param {number} value - The value to be converted to percentage
   * @param {number} column - A number representing the index of the column of the value
   * @return {number} - The value converted to a percentage of the max amount in the column provided
   * @private
   */},{key:"_toPercent",value:function _toPercent(value,column){return value*100/this._addColumn(this.data.series,column);}/**
   * Change the order of magnitude of the value by the amount in this.y.decimalOffset
   * @param {number} value - The value to be converted to percentage
   * @return {number} - The value converted to the magnitude indicated by this.y.decimalOffset
   * @private
   */},{key:"_decimalOffset",value:function _decimalOffset(value){return value*Math.pow(10,this.y.decimalOffset);}/**
   * Generate the summary data (total, average, etc.)
   * @param {Object} data - The data from which to generate the summary
   * @return {Object} - The summary of the data
   * @private
   */},{key:"_getSummary",value:function _getSummary(data){var summary=[];if(this.showTotal){summary.push(this._getTotal(data));}return summary;}/**
   * Generate the entry for the total
   * @param {Object} data - The data from which to generate the total
   * @return {Object} - An object containing the total amounts
   * @private
   */},{key:"_getTotal",value:function _getTotal(data){return{name:'Total',values:this._getTotalValues(data)};}/**
   * Get the sum of all values for each point in the common
   * @param {Object} data - The data from which to generate the total
   * @return {Array} - An array containing the sum of all values for each point in the commmon
   * @private
   */},{key:"_getTotalValues",value:function _getTotalValues(data){var _this144=this;return data.series.length>0?data.common.map(function(_,i){return _this144._addColumn(data.series,i);}):[];}/**
   * Create all the common components
   * @private
   */},{key:"_createCommonComponents",value:function _createCommonComponents(){this.legend=this._createNewLegend();this.legend.init();this.stage=this._createNewStage();this.stage.init();this.colorScale=this._createNewColorScale();this.colorScale.init();this.tooltipBox=this._createNewTooltipBox();this.tooltipBox.init();}/**
   * Create a new legend
   * @return {Legend} - A Legend instance
   * @private
   */},{key:"_createNewLegend",value:function _createNewLegend(){return new Legend({element:this.element,data:this.data,draw:this.draw.bind(this),highlight:this._highlight.bind(this),margin:_objectSpread({},this.margin,{left:0})});}/**
   * Highlight one common element in all series
   * @param {String} key - The key matching the common element
   * @private
   */},{key:"_highlight",value:function _highlight(key){var series=this.canvas.selectAll('.series');if(key){series.classed('dim',function(d){return d.name!==key;});}else{series.classed('dim',false);}}/**
   * Create a new stage
   * @return {Stage} - A Stage instance
   * @private
   */},{key:"_createNewStage",value:function _createNewStage(){return new Stage({element:this.element,margin:this.margin,height:this.height});}/**
   * Create a new color scale
   * @return {ColorScale} - A ColorScale instance
   * @private
   */},{key:"_createNewColorScale",value:function _createNewColorScale(){return new ColorScale({length:this.data.series.length});}/**
   * Create a new tooltip
   * @return {Tooltip} - A Tooltip instance
   * @private
   */},{key:"_createNewTooltipBox",value:function _createNewTooltipBox(){return new Tooltip({element:this.element,data:this.stackedData,hoverClass:'mouse-area',showSummary:true,format:this.tooltip.format,isTime:this.x.scaleType==='time',unit:{value:this._showPercentage()?'%':this._showUnits(),title:this.x.unit}});}/**
   * Determine whether units should be shown or not
   * @return {boolean} - A boolean representing whether units should be shown or not
   * @private
   */},{key:"_showUnits",value:function _showUnits(){return this.y.unit?this.y.unit:'';}/**
   * Draw the chart based on data
   * @param {Object} data - The data necessary to draw the chart
   * @public
   */},{key:"_render",value:function _render(){this.width=this.stage.getCanvasWidth();/**
     * X axis
     */this.xScale=this._getXScale();var xAxis=this._getXAxis();xAxis.init();/**
     * Y axis
     */this.yScale=this._getYScale();var yAxis=this._getYAxis();yAxis.init();var seriesGroup=this._getSeriesGroup();// Enter
var enter=seriesGroup.enter();var series=this._appendSeries(enter);this._appendPath(series,'fill');this._appendPath(series,'line');seriesGroup.merge(series).select('.fill');seriesGroup.merge(series).select('.line');// Update
this._update();// Exit
seriesGroup.exit().remove();/**
     * Tooltip & hovering
     */this._initTooltip();}/**
   * Get x-axis scaling function
   * @return {function} - A d3 scaling function for the x axis
   * @private
   */},{key:"_getXScale",value:function _getXScale(){switch(this.x.scaleType){case'linear':return d3.scaleLinear().domain(d3.extent(this.data.common)).range([0,this.width]);case'point':return d3.scalePoint().domain(this.data.common).range([0,this.width]);default:return d3.scaleTime().domain(d3.extent(this.data.common)).range([0,this.width]);}}/**
   * Generate x-axis
   * @return {Axis} - An Axis instance for the x-axis
   * @private
   */},{key:"_getXAxis",value:function _getXAxis(){return new Axis({position:'bottom',canvas:this.canvas,x:this.xScale,width:this.width,height:this.height,margin:this.margin,fontSize:14,axisPadding:8,hasDomain:true,unit:this.x.unit,tickFormat:this._getXTickFormat(),animationSpeed:this.animationSpeed});}/**
   * Get x-axis tick format
   * @return {function} - A d3 formating function for the x-axis
   * @private
   */},{key:"_getXTickFormat",value:function _getXTickFormat(){if(this.x.tickFormat){if(this.x.scaleType==='time'){return d3.timeFormat(this.x.tickFormat);}return d3.format(this.x.tickFormat);}}/**
   * Get y-axis scaling function
   * @return {function} - A d3 scaling function for the y-axis
   * @private
   */},{key:"_getYScale",value:function _getYScale(){return d3.scaleLinear().domain([this._getMin(),this._getMax()]).nice().range([this.height,0]);}/**
   * Get minimum value for the y-axis
   * @private
   */},{key:"_getMin",value:function _getMin(){var min=d3.min(this.stackedData.series,function(d){return d3.min(d.stack,function(value){return Math.min(value[0],value[1]);});});return min;}/**
   * Get maximum value for the y-axis
   * @return {number} - The maximum value in the stack
   * @private
   */},{key:"_getMax",value:function _getMax(){return d3.max(this.stackedData.series,function(d){return d3.max(d.stack,function(value){return Math.max(value[0],value[1]);});});}/**
   * Generate y-axis
   * @return {Axis} - An Axis instance for the y-axis
   * @private
   */},{key:"_getYAxis",value:function _getYAxis(){return new Axis({position:'left',canvas:this.canvas,y:this.yScale,width:this.width,height:this.height,margin:this.margin,fontSize:14,axisPadding:10,hasDomain:false,ticks:this.height/60,tickFormat:this._getYTickFormat(),unit:this._showPercentage()?'Percent (%)':this.y.unit});}/**
   * Get y-axis tick format
   * @return {function} - A d3 formating function for the y-axis
   * @private
   */},{key:"_getYTickFormat",value:function _getYTickFormat(){if(this.y.tickFormat){return d3.format(this.y.tickFormat);}}/**
   * Select or generate series group and select all series
   * @return {Object} - A d3 selection containing the series-group
   * @private
   */},{key:"_getSeriesGroup",value:function _getSeriesGroup(){var stackedAreaChart=this.canvas.classed('stacked-area-chart',true);return this._selectOrAppend(stackedAreaChart,'series-group','g',{'clip-path':"url(#".concat(this.id,")")}).selectAll('.series').data(this.stackedData.series,function(d){return d.name;});}/**
   * Select an element or append it if it does not exist
   * @param {Object} element - A d3 selection containing the parent of the element to select or append
   * @param {string} className - The class name of the element to select or append
   * @param {string} type - The type of element to append if it is not found. Defaults to "g".
   * @param {Object} attributes - Any additional attributes to append to the element if it is not found
   * @return {Object} - A d3 selection containing the element to be selected or appended
   * @private
   */},{key:"_selectOrAppend",value:function _selectOrAppend(element,className){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'g';var attributes=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(element.select(".".concat(className)).empty()){return this._attrs(element.append(type).classed(className,true),attributes);}return element.select(".".concat(className));}/**
   * Add attributes to an element and return the element
   * @param {Object} element - A d3 selection containing the element which the attributes will be appended to
   * @param {Object} attributes - An object representing the attributes to append
   * @return {Object} - A d3 selection containing the element with the appended attributes
   * @private
   */},{key:"_attrs",value:function _attrs(element,attributes){for(var key in attributes){if(attributes.hasOwnProperty(key)){element.attr(key,attributes[key]);}}return element;}/**
   * Append the series group
   * @param {Element} seriesGroup - An element representing the series group
   * @return {Object} - A d3 selection containing an SVG group for a series
   * @private
   */},{key:"_appendSeries",value:function _appendSeries(seriesGroup){return seriesGroup.append('g').classed('series',true).attr('name',function(d){return d.name;});}/**
   * Append a path to the series
   * @param {Object} series - An element representing a series
   * @param {string} type - A string representing the type of path
   * @return {Object} - A d3 selection containing a path
   * @private
   */},{key:"_appendPath",value:function _appendPath(series,type){return this._addDataAndClass(series.append('path'),type);}/**
   * Add data and class to a path based on the type
   * @param {Element} path - A path to which the data and class should be added
   * @param {string} type - A string representing the type of path
   * @private
   */},{key:"_addDataAndClass",value:function _addDataAndClass(path,type){var _this145=this;var dataFunction=this._getDataFunction(type);path.attr('d',function(d){return dataFunction(d.stack);}).attr('class',function(d){return"".concat(type," ").concat(_this145.colorScale.get()(d.name));});}/**
   * Retrieve the data function according to the type of path
   * @param {string} type - A string representing the type of path
   * @return {function} - A d3 function to convert data into SVG paths
   * @private
   */},{key:"_getDataFunction",value:function _getDataFunction(type){var dataFunction=type==='fill'?this._area:this._line;return dataFunction.bind(this)();}/**
   * Generate area function
   * @return {function} - A d3 area function
   * @private
   */},{key:"_area",value:function _area(){var _this146=this;return d3.area().x(function(_,i){return _this146.xScale(_this146.data.common[i]);}).y0(function(d){return _this146.yScale(d[0]);}).y1(function(d){return _this146.yScale(d[1]);});}/**
   * Generate line function
   * @return {function} - A d3 line function
   * @private
   */},{key:"_line",value:function _line(){var _this147=this;return d3.line().defined(function(d){return!isNaN(d[1]);}).x(function(_,i){return _this147.xScale(_this147.data.common[i]);}).y(function(d){return _this147.yScale(d[1]);});}/**
   * Update fills and strokes
   * @private
   */},{key:"_update",value:function _update(){if(this.data.series.length>0){this._transitionAndUpdate('fill');this._transitionAndUpdate('line');}}/**
   * Add transition and update data of elements
   * @param {string} type - A string representing the type of element
   * @private
   */},{key:"_transitionAndUpdate",value:function _transitionAndUpdate(type){this._addDataAndClass(this.canvas.selectAll(".series .".concat(type)).transition().duration(this.animationSpeed),type);}/**
   * Initialize the tooltip
   * @private
   */},{key:"_initTooltip",value:function _initTooltip(){if(!this.tooltip.isHidden){this.xCommon=this._getXCommon();this.midpoints=this._getMidpoints(this.xCommon);this.tooltipLine=this._selectOrAppend(this.canvas,'tooltip-line','path');var tooltipCirclesGroup=this._appendCirclesGroup();var mouseArea=this._appendMouseArea();this._addMouseEvents(mouseArea);var chartParentD3=d3.select("#".concat(this.element.id));this.chartTooltip=chartParentD3.select('.chart-tooltip');tooltipCirclesGroup.exit().remove();}}/**
   * Calculate the pixel position of the points in the common
   * @return {Array} - An array containing the SVG x-position of each point in the common
   * @private
   */},{key:"_getXCommon",value:function _getXCommon(){var _this148=this;return this.data.common.map(function(element){return _this148.xScale(element);});}/**
   * Calculate the location of the points between each point of the x-axis
   * @param {Array} xCommon - An array containing the SVG x-position of each point in the common
   * @return {Array} - An array contianing the SVG x-position of each point between the points in the common
   * @private
   */},{key:"_getMidpoints",value:function _getMidpoints(xCommon){return xCommon.map(function(v,i){if(i-1>=0){var result=v-(v-xCommon[i-1])/2;return result;}return v;});}/**
   * Append the circles that will mark the point positions
   * @param {Object} container - A d3 selection representing the container for the circles
   * @return {Object} - A d3 selection containing the circles that mark each data point
   * @private
   */},{key:"_appendCirclesGroup",value:function _appendCirclesGroup(){var _this149=this;var container=this._selectOrAppend(this.canvas,'circles');return container.selectAll('.tooltip-circle').data(this.stackedData.series,function(d){return d.name;}).enter().append('circle').attr('r',3).attr('opacity',0).attr('class',function(d){return"tooltip-circle ".concat(_this149.colorScale.get()(d.name));});}/**
   * Append a rectangle to the chart to catch mouse events
   * @return {Object} - A d3 selection containing the mouse area element
   * @private
   */},{key:"_appendMouseArea",value:function _appendMouseArea(){var mouseArea=this._selectOrAppend(this.canvas,'mouse-area','svg:rect');return mouseArea.attr('width',this.width).attr('height',this.height).attr('fill','blue').attr('opacity',0).attr('pointer-events','all');}/**
   * Add the mouse events to the mouse area
   * @param {Element} mouseArea - An element representing the mouse area
   * @private
   */},{key:"_addMouseEvents",value:function _addMouseEvents(mouseArea){var _this=this;mouseArea.on('touchmove mousemove',function(){_this._interruptTransition();_this.coord=d3.mouse(this);_this.showTooltip();},{passive:true});mouseArea.on('touchend mouseleave',function(){_this.coord=null;_this.hideTooltip();},{passive:true});}/**
   * Interrupt the transition of the tooltip circles and line
   * @private
   */},{key:"_interruptTransition",value:function _interruptTransition(){this.canvas.selectAll('.tooltip-circle').interrupt();this.tooltipLine.interrupt();}/**
   * Toggle the visibility of the tooltip elements and position them
   * @param {boolean} isSmooth - If set to true the positioning will have a smooth transition
   * @public
   */},{key:"showTooltip",value:function showTooltip(isSmooth){if(!this.coord){return;}var commonIndex=this._getCommonIndex();this.xPosition=this._getXPosition(commonIndex);if(commonIndex>-1){this._positionTooltipCircles(commonIndex,isSmooth);this._positionTooltipLine(isSmooth);this.tooltipBox.update(commonIndex,this.stackedData);}this.chartTooltip.style('opacity',this.data.series.length>0?1:0);}/**
   * Get the index of the closest common based on mouse position
   * @return {number} - The index of the closest common entry
   * @private
   */},{key:"_getCommonIndex",value:function _getCommonIndex(){return d3.bisect(this.midpoints,this.coord[0])-1;}/**
   * Get the position on the x-axis for a given index of a point in the common
   * @param {number} commonIndex - The index of the point in the common
   * @return {number} - The x-position of the common entry referenced by the index
   * @private
   */},{key:"_getXPosition",value:function _getXPosition(commonIndex){return this.xCommon[commonIndex]||0;}/**
   * Position the tooltip circles based on the closest point in the common
   * @param {number} commonIndex - The index of the closest point in the common
   * @param {boolean} isSmooth - If set to true the positioning will have a smooth transition
   * @return {Object} - A d3 selection containing the circles that mark each data point
   * @private
   */},{key:"_positionTooltipCircles",value:function _positionTooltipCircles(commonIndex,isSmooth){var _this150=this;return this._isTransition(this.canvas.selectAll('.tooltip-circle').attr('opacity',function(d){return _this150._isVisible(_this150.data.series,d);}),isSmooth).attr('cx',this.xPosition).attr('cy',function(d){return _this150.yScale(d.stack[commonIndex][1]);});}/**
   * Add a transition to an element if isSmooth is set to true and return said element
   * @param {Object} element - A d3 selection containing the element to add the transition to
   * @param {boolean} isSmooth - Determines whether to add the transition or not
   * @return {Object} - A d3 selection containing the element the transition was added to
   * @private
   */},{key:"_isTransition",value:function _isTransition(element,isSmooth){if(isSmooth){return element.transition(this._getTransition());}return element;}/**
   * Get the transition function
   * @return {function} - A d3 transition function
   * @private
   */},{key:"_getTransition",value:function _getTransition(){return d3.transition().duration(this.animationSpeed);}/**
   * Determine if a circle should be visible based on whether its series is active
   * @param {Array} series - A collection of the currently active series
   * @param {Object} data - An object representing the current data point
   * @return {number} - A number representing the visibility of a DOM element
   * @private
   */},{key:"_isVisible",value:function _isVisible(series,data){return series.filter(function(serie){return serie.name===data.name;}).length<1?0:1;}/**
   * Position the tooltip line based on the closest point in the common
   * @param {boolean} isSmooth - If set to true the positioning will have a smooth transition
   * @return {Onject[]} - A d3 selection containing the positioned tooltip line
   * @private
   */},{key:"_positionTooltipLine",value:function _positionTooltipLine(isSmooth){return this._isTransition(this.tooltipLine.attr('opacity',1).attr('d',"M0,".concat(0,"L0,",this.height)),isSmooth).attr('transform',"translate(".concat(this.xPosition,",0)"));}/**
   * Hide all tooltip elements
   * @public
   */},{key:"hideTooltip",value:function hideTooltip(){this.tooltipLine.attr('opacity',0);this.canvas.selectAll('.tooltip-circle').attr('opacity',0);this.chartTooltip.style('opacity',0);}/**
   * Parse and render the chart with updated data
   * @return {data} - New data to be parsed and rendered
   * @ublic
   */},{key:"draw",value:function draw(data){this._parseData(data);this._render();}/**
   * Update method
   * @public
   */},{key:"update",value:function update(props){this._setProps(props);this._parseData();this._render();}/**
   * Set properties after initialisation
   * @param {Object} props - An object containing the properties to set
   * @private
   */},{key:"_setProps",value:function _setProps(props){for(var prop in props){if(this.hasOwnProperty(prop)&&prop!=='data'){this[prop]=props[prop];}}}/**
   * Destroy method
   * @public
   */},{key:"destroy",value:function destroy(){this.stage.destroy();}}]);return StackedAreaChart;}();/**
 * @file Module to describe model of table's data.
 */ /**
 * Class representing data model.
 */var TableModel=/*#__PURE__*/function(){function TableModel(table,data){_classCallCheck(this,TableModel);this.component=table;this.setData(data);}_createClass(TableModel,[{key:"setData",value:function setData(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];this.initialData=data;this.data=this._processData(this.initialData);this.setDisplayedData();}},{key:"addData",value:function addData(newData){if(newData){this.data.push(_objectSpread({},newData,{selected:newData.selected||false,indexOriginal:this.data.length}));}}},{key:"deleteByIndex",value:function deleteByIndex(index){this.data.splice(index,1);this.setDisplayedData();}},{key:"selectByIndex",value:function selectByIndex(index){this.data[index].selected=true;}},{key:"deselectByIndex",value:function deselectByIndex(index){this.data[index].selected=false;}},{key:"selectAll",value:function selectAll(){this.data.forEach(function(item){return item.selected=true;});}},{key:"deselectAll",value:function deselectAll(){this.data.forEach(function(item){return item.selected=false;});}},{key:"sort",value:function sort(key){var direction=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'asc';// Reset sort to make sure previous sorting does not affect new order
this.resetSort();if(direction==='asc'){this._sortAsc(key);}if(direction==='desc'){this._sortDesc(key);}}},{key:"_processData",value:function _processData(data){return data.map(function(d,i){return _objectSpread({},d,{selected:d.selected||false,indexOriginal:i});});}/**
   * Subtract data to display.
   * Example. Rows per page: 10
   * 1: [0, 10) 2: [10, 20) 3: [20, 30)...
   */},{key:"setDisplayedData",value:function setDisplayedData(){if(this.component.pagination){var rowsPerPage=this.component.pagination.state.numPerPage;var currentPage=this.component.pagination.state.currentPage;// "start" included, "end" not included.
var start=rowsPerPage*(currentPage-1);var end=rowsPerPage*currentPage;this.displayedData=this.data.slice(start,end);}else{this.displayedData=this.data;}}},{key:"_sortAsc",value:function _sortAsc(key){this.data.sort(function(a,b){if(a[key]<b[key]){return-1;}if(a[key]>b[key]){return 1;}return 0;});}},{key:"_sortDesc",value:function _sortDesc(key){this.data.sort(function(a,b){if(a[key]<b[key]){return 1;}if(a[key]>b[key]){return-1;}return 0;});}},{key:"resetSort",value:function resetSort(){// this.data = [...this.initialData];
this.data.sort(function(a,b){return a.indexOriginal-b.indexOriginal;});}}]);return TableModel;}();var TableInfo=/*#__PURE__*/function(){function TableInfo(table){var _this151=this;_classCallCheck(this,TableInfo);this.component=table;this.dom=this.component.dom;this.listeners={onTableUpdate:function onTableUpdate(){return _this151.update();},onToggleSelectRow:function onToggleSelectRow(){return _this151.updateNumSelected();}};}_createClass(TableInfo,[{key:"init",value:function init(){this._render();this._addEventListeners();}},{key:"destroy",value:function destroy(){this._removeEventListeners();}},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.table.addEventListener('tableUpdate',this.listeners.onTableUpdate);this.dom.table.addEventListener('toggleSelectRow',this.listeners.onToggleSelectRow);}},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.table.removeEventListener('tableUpdate',this.listeners.onTableUpdate);this.dom.table.removeEventListener('toggleSelectRow',this.listeners.onToggleSelectRow);}},{key:"_render",value:function _render(){this.dom.tableInfo.innerHTML="<span class=\"count-show\"></span><span class=\"count-total\"></span>\n        <span class=\"count-selected\"></span>";}},{key:"update",value:function update(){this.updateNumShow();this.updateNumTotal();this.updateNumSelected();}},{key:"updateNumShow",value:function updateNumShow(){this.dom.tableInfo.querySelector('.count-show').textContent="".concat(this.showNum);}},{key:"updateNumTotal",value:function updateNumTotal(){this.dom.tableInfo.querySelector('.count-total').textContent=" of ".concat(this.totalNum," items");}},{key:"updateNumSelected",value:function updateNumSelected(){this.dom.tableInfo.querySelector('.count-selected').textContent=this.selectNum?" | ".concat(this.selectNum," selected"):'';}},{key:"totalNum",get:function get(){return this.component.model.data.length;}},{key:"showNum",get:function get(){if(this.component.model.data.length===0){return'0';}var start=1;var end=this.component.model.data.length;if(this.component.pagination){start=this.component.pagination.state.numPerPage*(this.component.pagination.state.currentPage-1)+1;end=Math.min(this.component.model.data.length,this.component.pagination.state.numPerPage*this.component.pagination.state.currentPage);}return"".concat(start," \u2013 ").concat(end);}},{key:"selectNum",get:function get(){return this.component.model.data.filter(function(d){return d.selected;}).length;}}]);return TableInfo;}();/**
 * Creates DOM Element according to markup
 * @param {string} markup.
 * @return {Node} new element.
 */var createFromMarkup=function createFromMarkup(){var markup=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var newElement=document.createElement('template');newElement.innerHTML=markup.trim();return newElement.content.firstChild;};/**
 * Debouncing (wait before running function)
 * @param {function} callback.
 * @param {number} wait Wait time in ms
 * @return {function}
 */var debounce=function debounce(callback,wait){var timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}var context=undefined;clearTimeout(timeout);timeout=setTimeout(function(){return callback.apply(context,args);},wait);};};/**
 * @file Module to describe Table Select feature.
 */ /**
 * Class representing Table Select feature.
 */var TableSelect=/*#__PURE__*/function(){function TableSelect(table){var _this152=this;_classCallCheck(this,TableSelect);this.component=table;this.dom=this.component.dom;this.listeners={clickBodyRowSingle:function clickBodyRowSingle(evt){if(evt.target.tagName==='TD'){var clickedRow=evt.target.closest('tr');if(clickedRow&&clickedRow.classList.contains('selected')){_this152._unselectRow(clickedRow);}else{// Unselect displayed rows
var selectedRow=_this152.dom.table.querySelector('tr.selected');if(selectedRow){_this152._unselectRow(selectedRow);}// Unselect all data that is not displayed
_this152.component.model.deselectAll();_this152._selectRow(clickedRow);}}},clickBodyRowMulti:function clickBodyRowMulti(evt){_this152._toggleRow(evt);_this152.setMasterCheckboxState();},clickMasterCheckbox:function clickMasterCheckbox(){_this152._toggleAllCheckboxes();_this152.setMasterCheckboxState();},clickMasterDropdown:function clickMasterDropdown(evt){if(evt.target.classList.contains('item')){var val=evt.target.dataset.value;if(val==='all'){_this152.component.model.selectAll();_this152.masterCheckbox.checked=true;}if(val==='none'){_this152.component.model.deselectAll();_this152.masterCheckbox.checked=false;}_this152._toggleAllCheckboxes();_this152.setMasterCheckboxState();}},onTableUpdate:function onTableUpdate(){return _this152.setMasterCheckboxState();}};}_createClass(TableSelect,[{key:"init",value:function init(selectType){this.selectType=selectType;if(this.selectType==='single'){this._updateSingleSelect();}if(this.selectType==='multi'){this.dom.table.classList.add('selectable');this._renderEmptyTh();this._renderRowCheckboxes();this._renderMasterCheckbox();}this._addEventListeners();}},{key:"destroy",value:function destroy(){this._removeEventListeners();}},{key:"update",value:function update(){if(this.selectType==='single'){this._updateSingleSelect();}if(this.selectType==='multi'){this._renderRowCheckboxes();this.setMasterCheckboxState();}}},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.table.addEventListener('tableUpdate',this.listeners.onTableUpdate);if(this.selectType==='single'){this.dom.table.addEventListener('click',this.listeners.clickBodyRowSingle);}// Listeners for checkboxes are added on creation to work correctly when new row is added
}},{key:"_removeEventListeners",value:function _removeEventListeners(){var _this153=this;this.dom.table.removeEventListener('tableUpdate',this.listeners.onTableUpdate);this.masterCheckbox.removeEventListener('change',this.listeners.clickMasterCheckbox);if(this.masterCheckboxDropdown){this.masterCheckboxDropdown.removeEventListener('click',this.listeners.clickMasterDropdown);}this.dom.bodyRows.forEach(function(bodyRow){var checkboxTD=bodyRow.querySelectorAll('td')[0];checkboxTD.querySelector('input').removeEventListener('change',_this153.listeners.clickBodyRowSingle);});if(this.selectType==='single'){this.dom.table.removeEventListener('click',this.listeners.clickBodyRowSingle);}}},{key:"_renderEmptyTh",value:function _renderEmptyTh(){var row=this.dom.thead.querySelector('tr');var th=document.createElement('th');row.insertBefore(th,row.firstChild);}/**
   * Create master checkbox. Click on the checkbox will toggle all rows on the current page.
   * @private
   */},{key:"_renderMasterCheckbox",value:function _renderMasterCheckbox(){var th=this.dom.thead.querySelectorAll('tr th')[0];th.classList.add('cell-select');this.masterCheckbox=document.createElement('input');this.masterCheckbox.setAttribute('type','checkbox');this.masterCheckbox.id="".concat(this.dom.table.id,"-master");var label=document.createElement('label');label.classList.add('checkbox','select-row');label.setAttribute('for',"".concat(this.dom.table.id,"-master"));th.append(this.masterCheckbox);th.append(label);if(this.dom.tablePagination){this._renderCheckboxDropdown(th);th.classList.add('wide');}this.masterCheckbox.addEventListener('change',this.listeners.clickMasterCheckbox);this.setMasterCheckboxState();}/**
   * Create dropdown with advanced master select options.
   * @private
   * @param {HTMLElement} th
   */},{key:"_renderCheckboxDropdown",value:function _renderCheckboxDropdown(th){var markup="<div class=\"dropdown more\" data-type=\"click\">\n      <button class=\"btn clickable\"><i class=\"icon icon-more\"></i></button>\n      <div class=\"menu start\">\n        <div class=\"item\" data-value=\"all\">Select items from all pages</div>\n        <div class=\"item\" data-value=\"none\">Deselect items from all pages</div>\n      </div>\n    </div>";this.masterCheckboxDropdown=createFromMarkup(markup);th.append(this.masterCheckboxDropdown);var dropdown=new Dropdown(this.masterCheckboxDropdown);dropdown.init();this.masterCheckboxDropdown.querySelector('.menu').addEventListener('click',this.listeners.clickMasterDropdown);this._setMasterCheckboxDropdownState();}/**
   * Create checkboxes in every row.
   * @private
   */},{key:"_renderRowCheckboxes",value:function _renderRowCheckboxes(){var _this154=this;this.dom.bodyRows.forEach(function(row,index){// Skip if input already exists
if(row.querySelector('td.cell-select input')){return;}// Create td and input
var td=document.createElement('td');td.classList.add('cell-select');_this154._createCheckbox(td,"".concat(_this154.dom.table.id,"-row").concat(index));row.insertBefore(td,row.firstChild);// Pre-selected rows
if(_this154.component.model.displayedData[index].selected){_this154._selectRow(row);}if(_this154.component.features['info']){_this154.component.features['info'].updateNumSelected();}});Array.from(this.dom.tbody.querySelectorAll('tr.details-row')).forEach(function(row){var emptyTd=row.querySelector('td.cell-select');if(!emptyTd){emptyTd=document.createElement('td');emptyTd.classList.add('cell-select');row.prepend(emptyTd);}});}/**
   * Create input checkbox and label
   * @private
   * @param {HTMLElement} cell
   * @param {string} id
   */},{key:"_createCheckbox",value:function _createCheckbox(cell,id){var input=document.createElement('input');input.setAttribute('type','checkbox');input.id=id;var label=document.createElement('label');label.classList.add('checkbox','select-row');label.setAttribute('for',id);cell.append(input);cell.append(label);input.addEventListener('change',this.listeners.clickBodyRowMulti);}/**
   * Set master checkbox state.
   * @private
   */},{key:"setMasterCheckboxState",value:function setMasterCheckboxState(){if(!this.masterCheckbox)return;var numBodyRows=this._getNumberOfRows();var numCheckedRows=this._getNumberOfSelectedRows();this.masterCheckbox.checked=numCheckedRows>0;this.masterCheckbox.indeterminate=numCheckedRows>0&&numCheckedRows<numBodyRows;this.masterCheckbox.toggleAttribute('disabled',this.component.data.length===0);this._setMasterCheckboxDropdownState();}/**
   * Hide / show dropdown items depending on selected rows
   * @private
   */},{key:"_setMasterCheckboxDropdownState",value:function _setMasterCheckboxDropdownState(){if(!this.masterCheckboxDropdown)return;this.masterCheckboxDropdown.querySelector('button').toggleAttribute('disabled',this.component.data.length===0);var hideSelectAll=this.component.selected.length===this.component.data.length;var hideDeselectAll=this.component.selected.length===0;this.masterCheckboxDropdown.querySelector('.item[data-value="all"]').classList.toggle('disabled',hideSelectAll);this.masterCheckboxDropdown.querySelector('.item[data-value="none"]').classList.toggle('disabled',hideDeselectAll);}/**
   * Toggle all checkboxes.
   * @private
   */},{key:"_toggleAllCheckboxes",value:function _toggleAllCheckboxes(){var _this155=this;this.dom.bodyRows.forEach(function(row){if(_this155.masterCheckbox.checked){_this155._selectRow(row);}else{_this155._unselectRow(row);}});}/**
   * Toggle row.
   * @private
   * @param {Event} evt - Click event.
   * @param {HTMLElement} evt.target - Clicked element (tr or td with checkbox).
   */},{key:"_toggleRow",value:function _toggleRow(_ref15){var target=_ref15.target;var row=target.closest('tr');if(row.classList.contains('selected')){this._unselectRow(row);}else{this._selectRow(row);}}/**
   * Select row.
   * @private
   * @param {HTMLElement} row - table row.
   */},{key:"_selectRow",value:function _selectRow(row){row.classList.add('selected');// Check checkbox in multi select
if(row.querySelector('td.cell-select input')){row.querySelector('td.cell-select input').checked=true;}// Update data
var index=this._getRowIndex(row);this.component.model.selectByIndex(index);this.dom.table.dispatchEvent(new CustomEvent('toggleSelectRow',{detail:{row:row,data:this.component.model.data[index]}}));this.dom.table.dispatchEvent(new CustomEvent('selectRow',{detail:{row:row,data:this.component.model.data[index]}}));}/**
   * Unselect row.
   * @private
   * @param {HTMLElement} row - table row.
   */},{key:"_unselectRow",value:function _unselectRow(row){row.classList.remove('selected');// Uncheck checkbox in multi select
if(row.querySelector('td.cell-select input')){row.querySelector('td.cell-select input').checked=false;}// Update data
var index=this.component.getIndexByRow(row);this.component.model.deselectByIndex(index);this.dom.table.dispatchEvent(new CustomEvent('toggleSelectRow',{detail:{row:row,data:this.component.model.data[index]}}));this.dom.table.dispatchEvent(new CustomEvent('unselectRow',{detail:{row:row,data:this.component.model.data[index]}}));}/**
   * Get total number of rows.
   * @private
   */},{key:"_getNumberOfRows",value:function _getNumberOfRows(){return this.dom.bodyRows.length;}/**
   * Get number of selected rows.
   * @private
   */},{key:"_getNumberOfSelectedRows",value:function _getNumberOfSelectedRows(){return this.dom.table.querySelectorAll('tbody input[type="checkbox"]:checked').length;}},{key:"_updateSingleSelect",value:function _updateSingleSelect(){var _this156=this;this.dom.bodyRows.forEach(function(row,index){row.classList.toggle('selected',_this156.component.model.displayedData[index].selected);if(_this156.component.features['info']){_this156.component.features['info'].updateNumSelected();}});}/**
   * Calculate index of row in data.
   * @private
   */},{key:"_getRowIndex",value:function _getRowIndex(tr){var index=Array.from(this.dom.bodyRows).indexOf(tr);if(this.component.pagination){index=(this.component.pagination.state.currentPage-1)*this.component.pagination.state.numPerPage+index;}return index;}}]);return TableSelect;}();/**
 * @file Module to describe Table Sort feature.
 */ /**
 * Class representing Table Sort feature.
 */var TableSort=/*#__PURE__*/function(){function TableSort(table){var _this157=this;_classCallCheck(this,TableSort);this.component=table;this.dom=this.component.dom;this.sortable=this.component.sortable;this.sortBy=[];this.listeners={onTheadClick:function onTheadClick(evt){if(evt.target.classList.contains('is-sortable')){var clickedTh=evt.target;/*
           * Sorting only by single columns for now. In future should implement multi column sorting.
           * To insure backward compatibility `sortable: true` and `sortable: 'single'` should be the same.
           */_this157.sortBy=[{key:clickedTh.dataset.key,dir:_this157._getSortDirection(clickedTh)}];_this157.sort();}},onTableUpdate:function onTableUpdate(){return _this157.sort();}};}_createClass(TableSort,[{key:"init",value:function init(){this.enable();this._addEventListeners();}},{key:"destroy",value:function destroy(){this._removeEventListeners();}},{key:"_addEventListeners",value:function _addEventListeners(){this.component.dom.thead.addEventListener('click',this.listeners.onTheadClick);this.dom.table.addEventListener('tableUpdate',this.listeners.onTableUpdate);}},{key:"_removeEventListeners",value:function _removeEventListeners(){this.component.dom.thead.removeEventListener('click',this.listeners.onTheadClick);this.dom.table.removeEventListener('tableUpdate',this.listeners.onTableUpdate);}},{key:"enable",value:function enable(){var _this158=this;this.component.settings.columns.forEach(function(column){if(column.key&&column.sort){var th=_this158.dom.thead.querySelector("th[data-key=".concat(column.key,"]"));th.classList.add('is-sortable');if(column.sort!=='none'){th.classList.add(column.sort);_this158.sortBy=[{key:th.dataset.key,dir:column.sort}];_this158.sort();}}});}},{key:"_getSortDirection",value:function _getSortDirection(th){switch(true){case th.classList.contains('asc'):return'desc';case th.classList.contains('desc'):// Use `return 'none';` here if you want to change order to: Asc -> Desc -> No sorting -> Asc -> etc.
return'asc';default:th.classList.add('asc');return'asc';}}},{key:"_singleSort",value:function _singleSort(sortKey,sortDir){var _this159=this;Array.from(this.dom.thead.querySelectorAll('th.is-sortable')).forEach(function(th){if(th.dataset.key===sortKey){switch(sortDir){case'asc':th.classList.remove('desc');th.classList.add('asc');_this159.component.model.sort(sortKey,sortDir);break;case'desc':th.classList.remove('asc');th.classList.add('desc');_this159.component.model.sort(sortKey,sortDir);break;case'none':th.classList.remove('asc');th.classList.remove('desc');_this159.component.model.resetSort();break;}}else{// Remove sorting for all other columns
th.classList.remove('asc');th.classList.remove('desc');}});this.component.model.setDisplayedData();this.component.updateRows();}},{key:"_multiSort",value:function _multiSort(){}},{key:"sort",value:function sort(){if(this.sortBy.length){this._singleSort(this.sortBy[0].key,this.sortBy[0].dir);}}}]);return TableSort;}();var Editable=/*#__PURE__*/function(){function Editable(element,onEdit){var _this160=this;_classCallCheck(this,Editable);this.editable=element;this.editing=null;this.onEdit=onEdit;this.listeners={onEditableClick:function onEditableClick(evt){return _this160._onClick(evt);},onEditableSubmit:function onEditableSubmit(evt){return _this160._onSubmit(evt);},onEditableCancel:function onEditableCancel(evt){return _this160._onCancel(evt);}};this.editable.addEventListener('click',this.listeners.onEditableClick);}_createClass(Editable,[{key:"destroy",value:function destroy(){this.editable.removeEventListener('click',this.listeners.onEditableClick);if(this.editing){this._removeEditing();}}},{key:"_onClick",value:function _onClick(evt){evt.stopPropagation();this.editing=createFromMarkup(this._getMarkup(evt.target.innerText));this.editable.parentNode.replaceChild(this.editing,this.editable);this.editing.querySelector('[data-action="cancel"]').addEventListener('click',this.listeners.onEditableCancel);this.editing.querySelector('[data-action="submit"]').addEventListener('click',this.listeners.onEditableSubmit);}},{key:"_onSubmit",value:function _onSubmit(){var oldText=this.editable.innerText;var newText=this.editing.querySelector('input').value;if(newText&&oldText!==newText){this.editable.innerText=newText;this.editing.parentNode.replaceChild(this.editable,this.editing);this._removeEditing();if(this.onEdit){this.onEdit();}}else{this._onCancel();}}},{key:"_onCancel",value:function _onCancel(){if(this.editing){this.editing.parentNode.replaceChild(this.editable,this.editing);this._removeEditing();}}},{key:"_removeEditing",value:function _removeEditing(){this.editing.querySelector('[data-action="cancel"]').removeEventListener('click',this.listeners.onEditableCancel);this.editing.querySelector('[data-action="submit"]').removeEventListener('click',this.listeners.onEditableSubmit);this.editing=null;}},{key:"_getMarkup",value:function _getMarkup(text){return"<div class=\"editing\">\n      <div class=\"inline-field\">\n        <input value=\"".concat(text,"\"/>\n      </div>\n      <div class=\"inline-buttons\">\n          <button class=\"btn-icon\" data-action=\"cancel\"><i class=\"icon icon-cross\"></i></button>\n          <button class=\"btn-icon\" data-action=\"submit\"><i class=\"icon icon-check\"></i></button>\n      </div>\n    </div>");}}]);return Editable;}();var TableSettings=/*#__PURE__*/function(){function TableSettings(table){var _this161=this;_classCallCheck(this,TableSettings);this.component=table;this.dom=this.component.dom;this.dialog=null;this.dialogDOM=null;this.btnReset=null;this.btnCancel=null;this.btnApply=null;this.initialColumns=[];this.editableTitles=[];this.listeners={onResetClick:function onResetClick(evt){return _this161._onResetClick(evt);},onApplyClick:function onApplyClick(evt){return _this161._onApplyClick(evt);},onDialogClose:function onDialogClose(){return _this161._renderDropArea();}};}_createClass(TableSettings,[{key:"init",value:function init(){this.initialColumns=Array.from(this.component.settings.columns).filter(function(col){return col.title;});this._render();this._addEventListeners();}},{key:"destroy",value:function destroy(){this._removeEventListeners();this.editableTitles.forEach(function(editable){return editable.destroy();});}},{key:"_addEventListeners",value:function _addEventListeners(){this.btnReset.addEventListener('click',this.listeners.onResetClick);this.btnApply.addEventListener('click',this.listeners.onApplyClick);// Reset changes when dialog closed
this.dialogDOM.addEventListener('DialogClose',this.listeners.onDialogClose);}},{key:"_removeEventListeners",value:function _removeEventListeners(){this.btnReset.removeEventListener('click',this.listeners.onResetClick);this.btnApply.removeEventListener('click',this.listeners.onApplyClick);this.dialogDOM.removeEventListener('DialogClose',this.listeners.onDialogClose);}},{key:"_render",value:function _render(){this._renderDialog();this._renderDropArea();}},{key:"_renderDialog",value:function _renderDialog(){this.dialogDOM=createFromMarkup(this._getDialogMarkup());document.querySelector('.appbody').append(this.dialogDOM);this.dialog=new Dialog(this.dialogDOM);this.dialog.init();this.btnReset=this.dialogDOM.querySelector('[data-action="reset"]');this.btnApply=this.dialogDOM.querySelector('[data-action="apply"]');}},{key:"_renderDropArea",value:function _renderDropArea(columnsList){var _this162=this;var columns=columnsList||Array.from(this.component.settings.columns).filter(function(col){return col.title;});// Remove old editables
this.editableTitles.forEach(function(editable){return editable.destroy();});this.editableTitles.splice(0,this.editableTitles.length);this.dialogDOM.querySelector('.content > .body').replaceChild(createFromMarkup(this._getDropAreaMarkup(columns)),this.dialogDOM.querySelector('.drop-area'));this.dialogDOM.querySelectorAll('.card').forEach(function(cardDOM){var card=new Card(cardDOM);card.init();});this.dialogDOM.querySelectorAll('.title .editable').forEach(function(title){_this162.editableTitles.push(new Editable(title,function(){title.closest('.title').dataset.text=title.innerText;}));});var dropAreas=new DropAreas(Array.from(this.dialogDOM.querySelectorAll('.drop-area')));dropAreas.init();}},{key:"_getDialogMarkup",value:function _getDialogMarkup(){return"<div class=\"dialog table-settings\" data-trigger=\"#".concat(this.dom.tableSettingsIcon.id,"\" data-type=\"simple\">\n      <div class=\"content\" style=\"overflow: scroll;\">\n        <div class=\"top\">\n          <div class=\"title\">Manage columns</div>\n        </div>\n        <div class=\"body\">\n          <p>Rename, hide, rearrange columns, or freeze first column.</p>\n          <div style=\"display: flex; justify-content: flex-end; padding: 8px 16px;\">\n            <span style=\"width: 50px; text-align: center\">Freeze</span>\n            <span style=\"width: 50px; text-align: center\">Show</span>\n          </div>\n\n          <div class=\"drop-area\"></div>\n\n        </div>\n        <div class=\"bottom\" style=\"display: flex; align-items: center;\">\n          <a href=\"#\" style=\"margin-right: auto;\" data-action=\"reset\">Reset</a>\n          <button class=\"btn ghost\" data-close=\"true\">Cancel</button>\n          <button class=\"btn primary\" data-action=\"apply\">Apply</button>\n        </div>\n      </div>\n    </div>");}},{key:"_getDropAreaMarkup",value:function _getDropAreaMarkup(columns){var _this163=this;return"<div class=\"drop-area\">\n      ".concat(columns.map(function(col,index){return"<div class=\"card draggable\" data-key=\"".concat(col.key,"\">\n        <div class=\"header\">\n          <div class=\"left\">\n            <div class=\"title\" data-text=\"").concat(col.title,"\"><span class=\"editable\">").concat(col.title,"</span></div>\n          </div>\n          <div class=\"right\">\n            <span class=\"freeze-checkbox\">\n              <input type=\"checkbox\" id=\"").concat(_this163.dom.table.id,"-freeze").concat(index,"\" ").concat(col.freeze?'checked':'',">\n              <label for=\"").concat(_this163.dom.table.id,"-freeze").concat(index,"\"></label>\n            </span>\n            <span class=\"show-checkbox\">\n               <input type=\"checkbox\" id=\"").concat(_this163.dom.table.id,"-show").concat(index,"\" ").concat(col.hidden?'':'checked',">\n               <label for=\"").concat(_this163.dom.table.id,"-show").concat(index,"\"></label>\n            </span>\n          </div>\n        </div>\n      </div>");}).join(''),"\n    </div>");}},{key:"_onResetClick",value:function _onResetClick(evt){evt.preventDefault();this._renderDropArea(this.initialColumns);}},{key:"_onApplyClick",value:function _onApplyClick(evt){var _this164=this;evt.preventDefault();var newColumns=[];this.dialogDOM.querySelectorAll('.card').forEach(function(card){var column=_objectSpread({},_this164.component.settings.columns.find(function(col){return col.key===card.dataset.key;}),{title:card.querySelector('.title').dataset.text,hidden:!card.querySelector('.show-checkbox input').checked,freeze:!_this164._isHidden(card.querySelector('.freeze-checkbox'))&&card.querySelector('.freeze-checkbox input').checked});newColumns.push(column);});this.component.updateColumns(newColumns);if(this.component.features['sort']){this.component.features['sort'].enable();}this.dialog.hide();}},{key:"_isHidden",value:function _isHidden(el){var style=window.getComputedStyle(el);return style.display==='none';}}]);return TableSettings;}();/**
 * @file Module to create table component.
 */ /**
 * Class representing a dynamic table.
 */var Table=/*#__PURE__*/function(){/**
   * Setup table properties.
   * @param {HTMLElement} element - The DOM element of the table.
   * @param {Object} options - Table options.
   */function Table(element,options){var _this165=this;_classCallCheck(this,Table);this.dom={table:element,tableTop:element.parentElement.querySelector('.table-top'),tableBottom:element.parentElement.querySelector('.table-bottom'),tableButtons:element.parentElement.querySelector('.table-buttons'),tablePagination:element.parentElement.querySelector('.pagination-group'),tableSettingsIcon:element.parentElement.querySelector('.table-top .table-settings'),bodyRows:[]};this.listeners={onToggleSelectRow:function onToggleSelectRow(){/*
         * When select rows, info width can change and affect available width for table actions
         * Used _onResize() instead of CSS min-width because filters may go after table-info
         * Timeout in case buttons show/hide dynamically from outside
         */if(_this165.dom.tableButtons&&_this165.dom.tableTop.querySelector('.table-info')){setTimeout(function(){return _this165._onResize();},100);}},onScroll:function onScroll(evt){return _this165._fixTableHead(evt);},onResize:function onResize(){return _this165._onResize();},onResizeDebounce:debounce(this._onResize.bind(this),500),onPageNumChange:function onPageNumChange(){_this165.model.setDisplayedData();_this165.updateRows();_this165.dom.table.dispatchEvent(new CustomEvent('tableUpdate'));},onSelectNumChange:function onSelectNumChange(){_this165.dom.tablePagination.querySelector('input[type="number"]').value='';_this165.model.setDisplayedData();_this165._renderBodyRows();_this165.dom.table.dispatchEvent(new CustomEvent('tableUpdate'));},onExpandClick:function onExpandClick(evt){if(evt.target.closest('.expand')){_this165._toggleDetailsRow(evt.target.closest('tr'));}},onRemoveRow:function onRemoveRow(evt){evt.detail.removeEventListener('mouseover',_this165.listeners.onRowMouseOver);evt.detail.removeEventListener('mouseout',_this165.listeners.onRowMouseOut);},onRowMouseOver:function onRowMouseOver(evt){// if currentElem is set, we didn't leave the previous <tr>, ignore the event
if(_this165.currentRow)return;// ignore if we moved not into a <tr>
var target=evt.target.closest('tr');if(!target)return;// ignore if moved into <tr>, but outside of current table
if(!_this165.dom.table.contains(target))return;// entered a new <td>
_this165.currentRow=target;},onRowMouseOut:function onRowMouseOut(evt){// ignore if we're outside of any <tr>
if(!_this165.currentRow)return;// we're leaving the element. go up the parent chain and check if we're still inside the current row
var relatedTarget=evt.relatedTarget;while(relatedTarget){if(relatedTarget===_this165.currentRow)return;relatedTarget=relatedTarget.parentNode;}// we left the <tr>. close dropdowns and reset current row
_this165.currentRow.querySelectorAll('.dropdown.open').forEach(function(dd){dd.classList.remove('open');dd.querySelector('.menu').classList.remove('visible');});_this165.currentRow=null;}};this.pagination=null;this.settings={columns:options.columns||[],scroll:options.scroll,height:options.height||false,selectable:options.selectable||false,sortable:options.sortable||false,expandable:options.expandable||false,actions:options.actions||false,// If pagination doesn't include 'show entries' select, use static value
rowsPerPage:options.rowsPerPage||5,emptyState:_objectSpread({message:'No data found.'},options.emptyState)};this.callbacks={createdHeadCallback:options.onCreatedHead,createdBodyCallback:options.onCreatedBody,createdRowCallback:options.onCreatedRow,createdDetailsRowCallback:options.onCreatedDetailsRow,onCreatedActionsCell:options.onCreatedActionsCell};this.events={};this.features={};// Data model
this.model=new TableModel(this,options.data);// <tr> under the mouse right now (if any)
this.currentRow=null;}/**
   * Initialize table.
   * @public
   */_createClass(Table,[{key:"init",value:function init(){this._enablePagination();this._render();this._enableStickyHead();this._addEventListeners();}/**
   * Destroy SignIn page and associated events.
   * @public
   */},{key:"destroy",value:function destroy(){this._removeEventListeners();// Destroy features and remove event listeners
if(Object.keys(this.features).length){for(var f in this.features){this.features[f].destroy();}}}/**
   * Add event listeners.
   * @private
   */},{key:"_addEventListeners",value:function _addEventListeners(){this.dom.table.addEventListener('toggleSelectRow',this.listeners.onToggleSelectRow);if(this.dom.tableButtons){window.addEventListener('resize',this.listeners.onResize);// Run resize callback after toggle animation has finished
document.addEventListener('toggleNavigation',this.listeners.onResizeDebounce);}if(this.dom.tablePagination){this.dom.tablePagination.addEventListener('paginationChangePage',this.listeners.onPageNumChange);this.dom.tablePagination.addEventListener('paginationChangeSelect',this.listeners.onSelectNumChange);}if(this.settings.expandable){this.dom.table.addEventListener('click',this.listeners.onExpandClick);}this.dom.table.addEventListener('removeRow',this.listeners.onRemoveRow);}/**
   * Remove event listeners.
   * @private
   */},{key:"_removeEventListeners",value:function _removeEventListeners(){this.dom.table.removeEventListener('toggleSelectRow',this.listeners.onToggleSelectRow);if(this.settings.height){this.dom.table.parentElement.removeEventListener('scroll',this.listeners.onScroll);}if(this.dom.tableButtons){window.removeEventListener('resize',this.listeners.onResize);document.removeEventListener('toggleNavigation',this.listeners.onResizeDebounce);}if(this.dom.tablePagination){this.dom.tablePagination.removeEventListener('paginationChangePage',this.listeners.onPageNumChange);this.dom.tablePagination.removeEventListener('paginationChangeSelect',this.listeners.onSelectNumChange);}if(this.settings.expandable){this.dom.table.removeEventListener('click',this.listeners.onExpandClick);}}/**
   * @type {Array}
   */},{key:"_render",/**
   * Render table.
   * @private
   */value:function _render(){this._renderScrollWrapper();this._renderHead();this._renderBody();this._addFeatures();this._toggleFreeze();this._createActionsDropdown();}/**
   * Render wrapper for horizontal scroll.
   * @private
   */},{key:"_renderScrollWrapper",value:function _renderScrollWrapper(){if(this.settings.scroll||this.settings.height){var wrapper=document.createElement('div');wrapper.classList.add('table-scroll');this.dom.table.parentNode.insertBefore(wrapper,this.dom.table);wrapper.appendChild(this.dom.table);}}/**
   * Render <thead>.
   * @private
   */},{key:"_renderHead",value:function _renderHead(){var _this166=this;var thead=document.createElement('thead');var tr=document.createElement('tr');thead.append(tr);if(this.settings.expandable){this.dom.table.classList.add('expandable');var th=document.createElement('th');th.classList.add('cell-expand');tr.append(th);}this.settings.columns.forEach(function(column){var th=document.createElement('th');if(column.key){th.dataset.key=column.key;}if(column.headerClass){th.classList.add(column.headerClass);}if(column.headerStyle){th.style=column.headerStyle;}if(column.width){th.style.width=column.width;}if(column.hidden){th.classList.add('hidden');}if(column.freeze){th.classList.add('freeze');th.style.left='';}if(column.title&&column.tooltip){th.append(_this166._renderTooltip(column.title,column.tooltip));}else{th.innerHTML=column.title||'';}tr.append(th);});if(this.settings.actions){var _th=document.createElement('th');_th.classList.add('cell-actions');tr.append(_th);}this.dom.table.append(thead);this.dom.thead=this.dom.table.querySelector('thead');if(this.callbacks.createdHeadCallback){this.callbacks.createdHeadCallback(thead,this.settings.columns);}}/**
   * Render <tbody>.
   * @private
   */},{key:"_renderBody",value:function _renderBody(){this.dom.tbody=document.createElement('tbody');this.dom.table.append(this.dom.tbody);this._renderBodyRows();}/**
   * Render <tr>s.
   * @private
   */},{key:"_renderBodyRows",value:function _renderBodyRows(){var _this167=this;// Remove table body rows from DOM and variable
while(this.dom.bodyRows.length>0){var tr=this.dom.bodyRows.pop();this._removeRow(tr);}this.model.displayedData.forEach(function(dataElem,index){_this167._renderBodyRow(dataElem,index);});if(this.features['select']){this.features['select'].update();}if(this.callbacks.createdBodyCallback){this.callbacks.createdBodyCallback(this.dom.tbody,this.model.displayedData);}}/**
   * Render one <tr>.
   * @private
   * @param {Object} rowData
   */},{key:"_renderBodyRow",value:function _renderBodyRow(){var rowData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var tr=document.createElement('tr');this.dom.tbody.append(tr);if(this.settings.expandable){var td=document.createElement('td');var btn=document.createElement('button');var icon=document.createElement('i');btn.classList.add('expand','btn-icon');icon.classList.add('icon','icon-chevron-right');td.classList.add('cell-expand');btn.append(icon);td.append(btn);tr.append(td);tr.classList.add('main-row');var detailsTR=this._createDetailsRow(tr,rowData);detailsTR.classList.add('hidden');this.dom.tbody.append(detailsTR);}this.settings.columns.forEach(function(column){var td=document.createElement('td');if(column.cellClass){td.classList.add(column.cellClass);}if(column.cellStyle){td.style=column.cellStyle;}if(column.hidden){td.classList.add('hidden');}if(column.freeze){td.classList.add('freeze');td.style.left='';}if(column.width){td.style.width=column.width;}if(Array.isArray(rowData[column.key])){td.classList.add('cell-split');rowData[column.key].forEach(function(item){var div=document.createElement('div');div.innerHTML=item;td.append(div);});}else{td.innerText=rowData[column.key]||'';}tr.append(td);if(column.onCreatedCell){column.onCreatedCell(td,rowData[column.key]);}});if(this.settings.actions){var _td=document.createElement('td');_td.classList.add('cell-actions');if(this.callbacks.onCreatedActionsCell){this.callbacks.onCreatedActionsCell(_td,rowData);}tr.append(_td);if(this.settings.expandable){var emptyTD=document.createElement('td');emptyTD.classList.add('cell-actions');tr.nextSibling.append(emptyTD);}}if(this.callbacks.createdRowCallback){this.callbacks.createdRowCallback(tr,rowData);}tr.addEventListener('mouseover',this.listeners.onRowMouseOver);tr.addEventListener('mouseout',this.listeners.onRowMouseOut);this.dom.bodyRows.push(tr);}/**
   * Render tooltip in <th>.
   * @private
   */},{key:"_renderTooltip",value:function _renderTooltip(title,data){var tooltipDOM=document.createElement('span');var tooltipMessage=document.createElement('span');tooltipDOM.classList.add('tooltip','dotted');tooltipMessage.classList.add('message',data.position||'bottom');tooltipDOM.innerText=title;tooltipMessage.innerText=data.text;if(data.width){tooltipMessage.style.width=data.width;}tooltipDOM.append(tooltipMessage);return tooltipDOM;}/**
   * Render table.
   * @private
   */},{key:"_addFeatures",value:function _addFeatures(){// Table Info
if(this.dom.tableTop&&this.dom.tableTop.querySelector('.table-info')){this.dom.tableInfo=this.dom.tableTop.querySelector('.table-info');this.features['info']=new TableInfo(this);this.features['info'].init();this.features['info'].updateNumTotal();this.features['info'].updateNumShow();}// Selectable rows
if(this.settings.selectable==='multi'||this.settings.selectable==='single'){this.features['select']=new TableSelect(this);this.features['select'].init(this.settings.selectable);}// Sortable table
if(this.settings.sortable){this.dom.table.classList.add('sortable');this.features['sort']=new TableSort(this);this.features['sort'].init();}// Table settings
if(this.dom.tableSettingsIcon){this.features['settings']=new TableSettings(this);this.features['settings'].init();}}/**
   * Enable pagination feature.
   * @private
   */},{key:"_enablePagination",value:function _enablePagination(){if(this.dom.tablePagination){this.pagination=new Pagination(this.dom.tablePagination);this.pagination.state.numPerPage=this.settings.rowsPerPage;this.pagination.state.numEntries=this.model.data.length;var initNum=this.dom.tablePagination.querySelector('.actions .select')?this.pagination.state.numEntries:Math.ceil(this.pagination.state.numEntries/this.pagination.state.numPerPage);this.pagination.init(initNum);}this.model.setDisplayedData();}/**
   * Enable sticky head and vertical scroll.
   * CSS solution with workaround for IE.
   * https://stackoverflow.com/questions/21168521/table-fixed-header-and-scrollable-body
   * @private
   */},{key:"_enableStickyHead",value:function _enableStickyHead(){if(this.settings.height){this.dom.table.parentElement.style.height=this.settings.height;this.dom.table.parentElement.classList.add('sticky');// https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie
var ua=window.navigator.userAgent;var isIE=RegExp(/MSIE|Trident/).test(ua);if(isIE){this.dom.table.parentElement.addEventListener('scroll',this.listeners.onScroll);}}}/**
   * Create details row for expandable row.
   * @private
   */},{key:"_createDetailsRow",value:function _createDetailsRow(tr,rowData){var detailsTR=document.createElement('tr');var detailsTD=document.createElement('td');var emptyTd=document.createElement('td');detailsTR.classList.add('details-row');detailsTD.classList.add('cell-details');emptyTd.classList.add('cell-expand');detailsTD.setAttribute('colspan',this.settings.columns.filter(function(col){return!col.hidden;}).length);if(this.callbacks.createdDetailsRowCallback){this.callbacks.createdDetailsRowCallback(detailsTD,rowData);}detailsTR.append(emptyTd);detailsTR.append(detailsTD);return detailsTR;}/**
   * Toggle details row for expandable row.
   * @private
   */},{key:"_toggleDetailsRow",value:function _toggleDetailsRow(tr){if(tr.nextSibling&&tr.nextSibling.classList.contains('details-row')){tr.nextSibling.classList.toggle('hidden');tr.classList.toggle('expanded');tr.querySelector('.expand .icon').classList.toggle('icon-chevron-right');tr.querySelector('.expand .icon').classList.toggle('icon-chevron-down');}}/**
   * Hide details row for expandable row.
   * @private
   */},{key:"_hideDetailsRow",value:function _hideDetailsRow(tr){if(tr.nextSibling&&tr.nextSibling.classList.contains('details-row')){tr.nextSibling.classList.add('hidden');tr.classList.remove('expanded');tr.querySelector('.expand .icon').classList.add('icon-chevron-right');tr.querySelector('.expand .icon').classList.remove('icon-chevron-down');}}/**
   * Fix table head on top position.
   * Workaround for IE
   * @private
   * @param {Event} evt
   */},{key:"_fixTableHead",value:function _fixTableHead(evt){var el=evt.target;var sT=el.scrollTop;el.querySelectorAll('thead th').forEach(function(th){return th.style.transform="translateY(".concat(sT,"px)");});}/**
   * Create dropdown for actions button.
   * The Priority+ Navigation Pattern: show as many items
   * as will fit horizontally with a UI toggle to show the rest
   * @private
   */},{key:"_createActionsDropdown",value:function _createActionsDropdown(){if(!this.dom.tableButtons){return;}var actionButtons=this.dom.tableButtons.querySelectorAll('button');var dropdownMarkup="\n      <div class=\"dropdown more\" data-type=\"click\">\n        <button class=\"btn clickable\"><i class=\"icon icon-more\"></i></button>\n        <div class=\"menu right\">\n           ".concat(Array.from(actionButtons).map(function(btn){return"<div class=\"item\">".concat(btn.innerText,"</div>");}).join(''),"\n        </div>\n      </div>");var dropdownDOM=createFromMarkup(dropdownMarkup);this.dom.tableButtons.append(dropdownDOM);var dropdown=new Dropdown(dropdownDOM);dropdown.init();// By clicking on dropdown item trigger click on corresponding button
Array.from(dropdownDOM.querySelectorAll('.item')).forEach(function(item,i){item.addEventListener('click',function(){return actionButtons[i].click();});});this._onResize();}/**
   * On window resize callback.
   * Calculate available width and trigger buttons wrapping.
   * @private
   */},{key:"_onResize",value:function _onResize(){var wrapWidth=parseFloat(getComputedStyle(this.dom.tableTop).width,10);var topLeftWidth=this.dom.tableTop.querySelector('.table-top-left')?parseFloat(getComputedStyle(this.dom.tableTop.querySelector('.table-top-left')).width,10):0;var tableActionsWidth=this.dom.tableTop.querySelector('.table-actions')?parseFloat(getComputedStyle(this.dom.tableTop.querySelector('.table-actions')).width,10):0;var fixedWidth=topLeftWidth+tableActionsWidth+32;var availableWidth=Math.floor(wrapWidth-fixedWidth);this._wrapActionButtons(availableWidth);}/**
   * Wrap action buttons that do not fit.
   * Solution https://stackoverflow.com/questions/31849831/hide-menu-items-one-by-one-on-window-resize
   * @private
   * @param {Number} availableWidth
   */},{key:"_wrapActionButtons",value:function _wrapActionButtons(availableWidth){var widthSoFar=0;var actionButtons=Array.from(this.dom.tableButtons.querySelectorAll(':scope > .btn'));var dropdown=this.dom.tableButtons.querySelector('.dropdown.more');var items=Array.from(dropdown.querySelectorAll('.menu .item'));actionButtons.forEach(function(btn,i){var btnWidth;if(btn.classList.contains('hidden')){// Need to do this trick because elements width display none don't have width
btn.classList.remove('hidden');btnWidth=parseFloat(getComputedStyle(btn).width)+parseFloat(getComputedStyle(btn).marginLeft);btn.classList.add('hidden');}else{btnWidth=parseFloat(getComputedStyle(btn).width)+parseFloat(getComputedStyle(btn).marginLeft);}// Check for buttons with inline styles 'display: none'
if(isNaN(btnWidth)){btnWidth=0;}/*
       * If the menu width has already exceeded the available space,
       * or if this menu item will cause it to exceed the space
       */if(widthSoFar>availableWidth||widthSoFar+btnWidth>availableWidth){// Start hiding the menu items
btn.classList.add('hidden');items[i].classList.remove('hidden');}else{// Otherwise, show the menu item, and update the width count
btn.classList.remove('hidden');items[i].classList.add('hidden');widthSoFar+=btnWidth;}});// Hide dropdown if all buttons are visible
dropdown.style.display=actionButtons.every(function(btn){return!btn.classList.contains('hidden');})?'none':'';}/**
   * Update data and redraw table.
   * @public
   */},{key:"update",value:function update(newData){this.model.setData(newData);this.dom.table.dispatchEvent(new CustomEvent('tableUpdate'));if(this.pagination){this.pagination.update(this.model.data.length);}this.updateRows();}/**
   * Update rows with new data (on sorting, pagination, etc).
   * Used this instead of destroy all rows and render again for better performance.
   * @public
   */},{key:"updateRows",value:function updateRows(){var _this168=this;var ths=Array.from(this.dom.thead.querySelectorAll('tr th'));// Remove extra rows
while(this.dom.bodyRows.length>this.model.displayedData.length){var tr=this.dom.bodyRows.pop();this._removeRow(tr);}this.model.displayedData.forEach(function(data,index){var row=_this168.dom.bodyRows[index];// Add missing rows
if(!row){_this168._renderBodyRow(data);}else{_this168._hideDetailsRow(row);var tds=row.querySelectorAll('td');var selectTd=row.querySelector('td.cell-select');if(selectTd){selectTd.querySelector('input').checked=data.selected;row.classList.toggle('selected',data.selected);}_this168.settings.columns.forEach(function(column){if(column.key){var columnIndex=ths.findIndex(function(th){return th.dataset.key===column.key;});var td=tds[columnIndex];if(Array.isArray(data[column.key])){// Just re-render cell content as old data length and new data length can be different
td.innerHTML='';data[column.key].forEach(function(item){var div=document.createElement('div');div.innerHTML=item;td.append(div);});}else{td.classList.remove('cell-split');td.innerText=data[column.key]||'';}// Using !! in front of an expression coerces the value to a boolean
td.classList.toggle('hidden',!!column.hidden);td.classList.toggle('freeze',!!column.freeze);td.style.left='';if(column.onCreatedCell){column.onCreatedCell(td,data[column.key]);}}});if(_this168.settings.expandable){row.nextSibling.querySelector('td.cell-details').setAttribute('colspan',_this168.settings.columns.filter(function(col){return!col.hidden;}).length);}if(_this168.callbacks.createdDetailsRowCallback){_this168.callbacks.createdDetailsRowCallback(row.nextSibling.querySelector('td.cell-details'),data);}}});// Add missing inputs and update master checkbox
if(this.features['select']){this.features['select'].update();}this._toggleFreeze();this._toggleEmptyState();}/**
   * Update columns.
   * @public
   * @param {Object} newColumns
   */},{key:"updateColumns",value:function updateColumns(newColumns){var _this169=this;if(newColumns){this.settings.columns=newColumns;this.dom.thead.querySelectorAll('th[data-key]').forEach(function(th,i){var column=_this169.settings.columns[i];th.removeAttribute('class');th.removeAttribute('style');if(column.key){th.dataset.key=column.key;}if(column.headerClass){th.classList.add(column.headerClass);}if(column.headerStyle){th.style=column.headerStyle;}if(column.width){th.style.width=column.width;}if(column.hidden){th.classList.add('hidden');}if(column.freeze){th.classList.add('freeze');th.style.left='';}if(column.title&&column.tooltip){th.innerHTML='';th.append(_this169._renderTooltip(column.title,column.tooltip));}else{th.innerHTML=column.title||'';}});this._renderBodyRows();this._toggleFreeze();}}/**
   * Delete data and corresponding row.
   * @public
   */},{key:"delete",value:function _delete(toDelete){if(toDelete instanceof HTMLElement){// Remove from data by index
this.model.deleteByIndex(this.getIndexByRow(toDelete));// Remove row
this._deleteRow(toDelete);}else{var dataIndex=this.model.data.indexOf(toDelete);var trIndex=this.model.displayedData.indexOf(toDelete);// Remove from data by index
this.model.deleteByIndex(dataIndex);// If we are on the page with this row, remove it too
if(trIndex>-1){this._deleteRow(this.dom.bodyRows[trIndex]);}}if(this.pagination){this.pagination.update(this.model.data.length);this.model.setDisplayedData();this.updateRows();}else{this._toggleEmptyState();}this.dom.table.dispatchEvent(new CustomEvent('tableUpdate'));}/**
   * Remove row from DOM and refresh.
   * @public
   */},{key:"_deleteRow",value:function _deleteRow(tr){this.dom.bodyRows.splice(this.dom.bodyRows.indexOf(tr),1);this._removeRow(tr);}/**
   * Remove row from DOM and it's details row.
   * @public
   */},{key:"_removeRow",value:function _removeRow(tr){if(tr.nextSibling&&tr.nextSibling.classList.contains('details-row')){tr.nextSibling.remove();}tr.remove();this.dom.table.dispatchEvent(new CustomEvent('removeRow',{detail:tr}));}/**
   * Add new data and create row.
   * @public
   * @param {HTMLElement} newData
   */},{key:"add",value:function add(newData){// add data to model
this.model.addData(newData);this.dom.table.dispatchEvent(new CustomEvent('tableUpdate'));// update pagination
if(this.pagination){this.pagination.update(this.model.data.length);}this.updateRows();}/**
   * Get index of data item by <tr> element.
   * @public
   * @param {HTMLElement} tr
   */},{key:"getIndexByRow",value:function getIndexByRow(tr){var index=Array.from(this.dom.bodyRows).indexOf(tr);if(this.pagination){index=(this.pagination.state.currentPage-1)*this.pagination.state.numPerPage+index;}return index;}},{key:"_toggleEmptyState",value:function _toggleEmptyState(){// remove empty state
if(this.model.displayedData.length&&this.dom.table.querySelector('.no-data-row')){this.dom.table.style.height='';this.dom.table.querySelector('.no-data-row').remove();if(this.dom.tablePagination&&this.dom.tablePagination.querySelector('.actions')){this.dom.tablePagination.querySelector('input').disabled=false;this.dom.tablePagination.querySelector('.select').classList.remove('disabled');}}// add empty state
if(!this.model.displayedData.length&&!this.dom.table.querySelector('.no-data-row')){this.dom.table.style.height='100%';var tr=document.createElement('tr');var td=document.createElement('td');tr.classList.add('no-data-row');td.colSpan=this.dom.thead.querySelectorAll('th').length;td.innerText=this.settings.emptyState.message;tr.append(td);this.dom.tbody.append(tr);if(this.dom.tablePagination&&this.dom.tablePagination.querySelector('.actions')){this.dom.tablePagination.querySelector('input').disabled=true;this.dom.tablePagination.querySelector('.select').classList.add('disabled');}}}},{key:"_toggleFreeze",value:function _toggleFreeze(){var isFrozen=this.settings.columns.some(function(col){return col.freeze;});this.dom.table.querySelectorAll('tr .freeze').forEach(function(cell){cell.style.left=isFrozen?"".concat(cell.offsetLeft,"px"):'';});this.dom.table.querySelectorAll('tr:not(.details-row) .cell-expand').forEach(function(cell){cell.classList.toggle('freeze',!!isFrozen);cell.style.left=isFrozen?"".concat(cell.offsetLeft,"px"):'';});this.dom.table.querySelectorAll('tr:not(.details-row) .cell-select').forEach(function(cell){cell.classList.toggle('freeze',!!isFrozen);cell.style.left=isFrozen?"".concat(cell.offsetLeft,"px"):'';});}},{key:"selected",get:function get(){return this.model.data.filter(function(item){return item.selected;});}/**
   * @type {Array}
   */},{key:"selectedOnPage",get:function get(){return this.model.displayedData.filter(function(item){return item.selected;});}/**
   * @type {Array}
   */},{key:"data",get:function get(){return this.model.data;}/**
   * @type {Array}
   */},{key:"displayedData",get:function get(){return this.model.displayedData;}}]);return Table;}();exports.Accordion=Accordion;exports.Appbar=Appbar;exports.Appnav=Appnav;exports.Breadcrumb=Breadcrumb;exports.Calendar=Calendar;exports.Card=Card;exports.Datepicker=Datepicker;exports.Dialog=Dialog;exports.Drag=Drag;exports.DropAreas=DropAreas;exports.Dropdown=Dropdown;exports.Gauge=Gauge;exports.Donut=Donut;exports.Layout=Layout;exports.Map=Map;exports.Menu=Menu;exports.MultiPanelTile=MultiPanelTile;exports.Notification=Notification;exports.NotificationLog=NotificationLog;exports.Page=Page;exports.Tile=Tile;exports.Pagination=Pagination;exports.Pill=Pill;exports.Prefill=Prefill;exports.RangeSlider=RangeSlider;exports.Select=Select;exports.SignIn=SignIn;exports.Spinner=Spinner;exports.TabGroup=TabGroup;exports.TableSelectable=TableSelectable;exports.TimePicker=TimePicker;exports.Timeline=Timeline;exports.Tree=Tree;exports.Wizard=Wizard;exports.HorizontalBarChart=HorizontalBarChart;exports.HorizontalBarChartGrouped=HorizontalBarChartGrouped;exports.HorizontalBarChartStacked=HorizontalBarChartStacked;exports.VerticalBarChart=VerticalBarChart;exports.VerticalBarChartGrouped=VerticalBarChartGrouped;exports.VerticalBarChartStacked=VerticalBarChartStacked;exports.LineChart=LineChart;exports.Heatmap=Heatmap;exports.Histogram=Histogram;exports.ScatterPlot=ScatterPlot;exports.BubbleChart=BubbleChart;exports.RadarChart=RadarChart;exports.LogicalViewChart=LogicalViewChart;exports.HierarchyChart=HierarchyChart;exports.StackedAreaChart=StackedAreaChart;exports.Table=Table;