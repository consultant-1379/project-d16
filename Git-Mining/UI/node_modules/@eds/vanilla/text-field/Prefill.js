/**
 * @file Module to create prefilled input component.
 */

/**
 * Class representing a prefilled input.
 */
export class Prefill {

  /**
   * Setup prefilled input properties.
   * @param {HTMLElement} element - input element.
   */
  constructor(element){
    this.dom = {
      prefill: element,
      saved: element.dataset.saved
    };
    this.listeners = {
      blur: (evt) => this._checkIfChanged(evt)
    };
  }

  /**
   * Initialize prefilled input.
   * @public
   */
  init(){
    this._setSavedValue();
    this._addEventListeners();
  }

  /**
   * Destroy prefilled input and associated events.
   * @public
   */
  destroy(){
    this._removeEventListeners();
  }

  /**
   * Add event listeners.
   * @private
   */
  _addEventListeners(){
    this.dom.prefill.addEventListener('blur', this.listeners.blur);
  }

  /**
   * Remove event listeners.
   * @private
   */
  _removeEventListeners(){
    this.dom.prefill.removeEventListener('blur', this.listeners.blur);
  }

  /**
   * Set saved value.
   * @private
   */
  _setSavedValue(){
    this.dom.prefill.value = this.dom.saved;
  }

  /**
   * Check if input was changed.
   * @private
   * @param {Event} evt - Blur event.
   */
  _checkIfChanged(evt){
    if (evt.target.value !== this.dom.saved) {
      this.dom.prefill.classList.add('changed');
    } else {
      this.dom.prefill.classList.remove('changed');
    }
  }
}
