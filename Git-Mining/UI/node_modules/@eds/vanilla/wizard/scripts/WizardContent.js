/**
 * @file Module to create Wizard Content component.
 */

/**
 * Class representing a wizard content.
 */
export class WizardContent {

  /**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */
  constructor(element){
    this.dom = {
      content: element,
    };
    this.listeners = {
      showCorrectContent: (evt) => this.showCorrectContent(evt)
    };
  }

  /**
   * Create component.
   * @public
   */
  init(){
    this._addEventListeners();
  }

  /**
   * Destroy component.
   * @public
   */
  destroy(){
    this._removeEventListeners();
  }

  /**
   * Add event listeners.
   * @private
   */
  _addEventListeners(){
    window.addEventListener('wizardState', this.listeners.showCorrectContent);
  }

  /**
   * Remove event listeners.
   * @private
   */
  _removeEventListeners(){
    window.removeEventListener('wizardState', this.listeners.showCorrectContent);
  }

  showCorrectContent(evt){
    const currentStep = evt.detail.state.currentStep;
    const contents = Array.from(this.dom.content.children).filter((el) => el.classList.contains('content'));

    contents.forEach( (content,i) => {
      if(i === currentStep){
        this.showContent(content);
      }else {
        this.hideContent(content);
      }
    });
  }

  showContent(content){
    content.classList.remove('hidden');
  }

  hideContent(content){
    content.classList.add('hidden');
  }
}
