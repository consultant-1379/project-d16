/**
 * @file Module to create Application bar.
 */

/**
 * Class representing an appbar.
 */
export class Appbar {

  /**
   * Setup properties.
   * @param {HTMLElement} element - The DOM element to append the component.
   */
  constructor(element) {
    this.dom = {
      appbar: element,
      navItem: element.querySelector('.actions-left .item'),
      navToggle: element.querySelector('.actions-left .item .navigation-toggle'),
      menuAnchor: element.querySelector('.actions-left .menu-anchor'),
      title: element.querySelector('.actions-left .title'),
    };
    this.events = {
      toggleNavigation: new CustomEvent('toggleNavigation'),
      showNavigation: new CustomEvent('showNavigation'),
      hideNavigation: new CustomEvent('hideNavigation'),
    };
    this.listeners = {
      toggleNavigation: () => this._toggle(),
      hideNavigation: () => this._hide(),
      showNavigation: () => this._show(),
    };
  }

  /**
   * Create component.
   * @public
   */
  init() {
    this._addEventListeners();
  }

  /**
   * Destroy component.
   * @public
   */
  destroy() {
    this._removeEventListeners();
  }

  /**
   * Add event listeners.
   * @private
   */
  _addEventListeners() {
    this.dom.navItem.addEventListener('click', this.listeners.toggleNavigation);
    this.dom.menuAnchor.addEventListener('click', this.listeners.toggleNavigation);
    document.addEventListener('hideNavigation', this.listeners.hideNavigation);
    document.addEventListener('showNavigation', this.listeners.showNavigation);
  }

  /**
   * Remove event listeners.
   * @private
   */
  _removeEventListeners() {
    this.dom.navItem.removeEventListener('click', this.listeners.toggleNavigation);
    this.dom.menuAnchor.removeEventListener('click', this.listeners.toggleNavigation);
    document.removeEventListener('hideNavigation', this.listeners.hideNavigation);
    document.removeEventListener('showNavigation', this.listeners.showNavigation);
  }

  /**
   * Toggle application bar and dispatch event to toggle application navigation.
   * @private
   */
  _toggle() {
    if (this.dom.title.classList.contains('open-menu')) {
      this._hide();
    } else {
      this._show();
    }
    document.dispatchEvent(this.events.toggleNavigation);
  }

  /**
   * Hide application bar.
   * @private
   */
  _hide() {
    this.dom.title.classList.remove('open-menu');
    this.dom.menuAnchor.classList.remove('open-menu');
    this.dom.navToggle.classList.remove('closed');
  }

  /**
   * Show application bar.
   * @private.
   */
  _show() {
    this.dom.title.classList.add('open-menu');
    this.dom.menuAnchor.classList.add('open-menu');
    this.dom.navToggle.classList.add('closed');
  }

}
