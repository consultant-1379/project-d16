export default class TableInfo {
  constructor(table) {
    this.component = table;
    this.dom = this.component.dom;

    this.listeners = {
      onTableUpdate: () => this.update(),
      onToggleSelectRow: () => this.updateNumSelected()
    };
  }

  init() {
    this._render();
    this._addEventListeners();
  }

  destroy() {
    this._removeEventListeners();
  }

  _addEventListeners() {
    this.dom.table.addEventListener('tableUpdate', this.listeners.onTableUpdate);
    this.dom.table.addEventListener('toggleSelectRow', this.listeners.onToggleSelectRow);
  }

  _removeEventListeners() {
    this.dom.table.removeEventListener('tableUpdate', this.listeners.onTableUpdate);
    this.dom.table.removeEventListener('toggleSelectRow', this.listeners.onToggleSelectRow);
  }

  get totalNum() {
    return this.component.model.data.length;
  }

  get showNum() {
    if (this.component.model.data.length === 0) {
      return '0';
    }

    let start = 1;
    let end = this.component.model.data.length;

    if (this.component.pagination) {
      start = this.component.pagination.state.numPerPage * (this.component.pagination.state.currentPage - 1) + 1;
      end = Math.min(this.component.model.data.length,
        this.component.pagination.state.numPerPage * this.component.pagination.state.currentPage);
    }
    return `${start} â€“ ${end}`;
  }

  get selectNum() {
    return this.component.model.data.filter((d) => d.selected).length;
  }

  _render() {
    this.dom.tableInfo.innerHTML = `<span class="count-show"></span><span class="count-total"></span>
        <span class="count-selected"></span>`;
  }

  update() {
    this.updateNumShow();
    this.updateNumTotal();
    this.updateNumSelected();
  }

  updateNumShow() {
    this.dom.tableInfo.querySelector('.count-show').textContent = `${this.showNum}`;
  }

  updateNumTotal() {
    this.dom.tableInfo.querySelector('.count-total').textContent = ` of ${this.totalNum} items`;
  }

  updateNumSelected() {
    this.dom.tableInfo.querySelector('.count-selected').textContent = this.selectNum ?
      ` | ${this.selectNum} selected` : '';
  }



}
