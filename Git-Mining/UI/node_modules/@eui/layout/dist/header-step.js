import { definition, TemplateComponent } from '@eui/component';

var style = ":host {\n  position: relative;\n  text-align: center;\n  width: 100%;\n  overflow: hidden;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([current]) {\n  cursor: default;\n}\n\n:host([completed]) {\n  cursor: pointer;\n}\n\n.sphere {\n  position: relative;\n  width: 22px;\n  height: 22px;\n  border-radius: 18px;\n  border: 1px solid var(--wizard-line-not-completed, #C8C8C8);\n  margin: 0px auto;\n  background: var(--wizard-step-not-completed-background, #f2f2f2);\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([current]) .sphere,\n:host([completed]) .sphere {\n  border: 1px solid var(--wizard-step-completed-border, #242424);\n  background: var(--wizard-step-completed-background, #fff);\n}\n\n:host(:hover[completed]) .sphere {\n  border: 1px solid var(--wizard-line-completed-hover, #1174e6);\n  background: var(--wizard-step-completed-background-hover, #f2f2f2);\n}\n\n.sphere svg {\n  margin-left: -1px;\n  stroke: var(--wizard-line-completed, #242424);\n  stroke-width: var(--wizard-symbols-stroke-width, 40px);\n  width: 14px;\n  height: 14px;\n  display: none;\n}\n\n.sphere svg[name='cross'] {\n  width: 10px;\n  height: 10px;\n  margin-left: 0;\n}\n\n:host([completed][valid]) svg[name='check'] {\n  display: inline-block;\n}\n\n:host([completed]:not([valid])) svg[name='cross'] {\n  display: inline-block;\n}\n\n:host(:hover[completed]) .sphere svg {\n  stroke: var(--wizard-line-completed-hover, #1174e6) !important;\n}\n\n.prevbar,\n.nextbar {\n  position: absolute;\n  background: var(--wizard-line-not-completed, #C8C8C8);\n  width: 100%;\n  height: 1px;\n  top: 13px;\n}\n\n:host([completed]) .prevbar,\n:host([completed]) .nextbar,\n:host([current]) .prevbar {\n  background: var(--wizard-line-completed, #242424);\n}\n\n.prevbar {\n  right: 50%;\n}\n\n:host([first]) .prevbar {\n  display: none;\n}\n\n.nextbar {\n  left: 50%;\n}\n\n:host([last]) .nextbar {\n  display: none;\n}\n\n.description-container {\n  margin-top: var(--space-base, 8px);\n  color: var(--wizard-step-not-completed-description, #6a6a6a);\n  height: 17px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:host([completed]) .description-container {\n  color: var(--wizard-line-completed, #242424);\n}\n\n:host([current]) .description-container {\n  color: var(--wizard-line-completed, #242424);\n  font-weight: var(--weight-medium, 500);\n}\n\n:host(.vertical) {\n  display: flex;\n  padding-bottom: var(--space-xl, 24px);\n  width: auto;\n  min-height: fit-content;\n}\n\n:host(.vertical) .sphere {\n  margin: 0px;\n  min-width: 22px;\n}\n\n:host(.vertical) .prevbar,\n:host(.vertical) .nextbar {\n  height: 100%;\n  width: 1px;\n  left: 12px;\n}\n\n:host(.vertical) .prevbar {\n  top: unset;\n  bottom: 35px;\n}\n\n:host(.vertical) .nextbar {\n  bottom: unset;\n}\n\n:host(.vertical) .description-container {\n  margin-top: 0px;\n  padding-top: 4px;\n  padding-left: var(--space-base, 8px);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n";

var template = "<div class=\"prevbar\"></div>\n<div class=\"nextbar\"></div>\n<div class=\"sphere\">\n  <svg class=\"icon\" name=\"check\" viewBox=\"0 0 102.4 102.4\">\n    <path\n      transform=\"scale(0.1,-0.1) translate(0,-960)\"\n      d=\"M924.672 691.627l-47.808 42.368-484.224-546.816-236.096 235.968-45.184-45.12 284.096-283.968 529.216 597.568z\"\n    ></path>\n  </svg>\n  <svg class=\"icon\" name=\"cross\" viewBox=\"0 0 102.4 102.4\">\n    <path\n      transform=\"scale(0.1,-0.1) translate(0,-960)\"\n      d=\"M151.936 21.035l360.576 360.64 359.488-360.832 45.312 45.12-359.552 360.896 358.592 358.592-45.248 45.248-358.528-358.528-358.976 360.32-45.312-45.12 359.040-360.384-360.64-360.704 45.248-45.248z\"\n    ></path>\n  </svg>\n</div>\n<div class=\"description-container\">\n  <span id=\"description-content\">First step</span>\n</div>\n";

/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */

class HeaderStep extends TemplateComponent {
  /**
   * Initially setup the steps description.
   */
  didUpgrade() {
    if (this.description) {
      this._updateTitle(this.description);
    }
  }

  /**
   * Called each time a prop changes on the component
   *
   * @method didChangeProps
   * @param {Map} changedProps - Keys are the names of changed properties;
   * Values are the corresponding previous values.
   */
  didChangeProps(changedProps) {
    if (changedProps.has('description')) {
      this._updateTitle(this.description);
    }
  }

  /**
   * Updating header steps' title
   * @param {String} description
   */
  _updateTitle(description) {
    const descriptionContent = this.shadowRoot.querySelector(
      '#description-content',
    );
    descriptionContent.innerText = description;
  }
}

/**
 * @property {Boolean} completed - True if user pressed "next" button in this step
 * @property {Number} current - Step number/position
 * @property {String} description - The description of the step
 * @property {Boolean} first - Is this step first
 * @property {Boolean} hidden - the visibility of the step indicator
 * @property {Boolean} last - Is this step last
 * @property {Boolean} valid - Is this step valid
 */
definition('eui-wizard-header-step', {
  style,
  template,
  props: {
    completed: { attribute: true, type: Boolean },
    current: { attribute: true, type: Boolean },
    description: { attribute: true, type: String, default: '' },
    first: { attribute: true, type: Boolean },
    hidden: { attribute: true, type: Boolean },
    last: { attribute: true, type: Boolean },
    valid: { attribute: true, type: Boolean, default: true },
  },
})(HeaderStep);

export { HeaderStep };
