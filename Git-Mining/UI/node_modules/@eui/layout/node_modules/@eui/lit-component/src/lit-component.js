/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */
import { Stateless, Component } from '@eui/component';
import { render as litRender, html as litHtml } from 'lit-html';
import { ScopedElementsMixin } from './scoped-elements-mixin.js';

// Allow users to add the renderer mixin on top of a custom base
export const LitMixin = Base =>
  class LitComponent extends Base {
    static registerComponents(components) {
      if (super.registerComponents) {
        super.registerComponents(components);
      } else {
        /* eslint-disable-next-line no-console */
        console.error('registerComponents function not defined');
      }
    }

    constructor() {
      super();
      if (!this.shadowRoot) {
        this.attachShadow({
          mode: 'open',
          ...this.shadowRootOptions?.(),
        });
      }
      this.firstRender = true;
      if (this.constructor.style) {
        this._litStyle = litHtml`<style>${this.constructor.style}</style>`;
      }
    }

    /**
     * @protected
     * @function executeRender
     * @description Executes a render on the component using the lit renderer
     */
    executeRender() {
      if (!this.render) {
        throw new Error('render callback not found');
      }
      let result = this.render();
      if (this._litStyle) {
        result = litHtml`
          ${this._litStyle}
          ${result}
        `;
      }

      // Render into the DOM
      litRender(result, this.shadowRoot, this?.renderOptions());

      if (this.firstRender) {
        this.firstRender = false;
        this.didUpgrade();
      }
    }
  };

// Export a default stack of renderer + standard mixins
class LitStateless extends ScopedElementsMixin(LitMixin(Stateless)) {}
class LitComponent extends ScopedElementsMixin(LitMixin(Component)) {}

export { LitStateless, LitComponent };
