import { definition, LitComponent, html, ifDefined } from '@eui/lit-component';
import { Icon } from '@eui/theme/icon';

var style = ":host {\n  display:inline-block;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n}\n\nlabel {\n  display: block;\n}\n\nlabel input[type=\"file\"] {\n  display: none;\n}\n\n:host([fullwidth]),\n:host([fullwidth]) .btn{\n  display: block;\n}\n\n.btn {\n  display: flex;\n  width: 100%;\n  text-align: center;\n  flex-direction: row;\n  padding: 5px 12px 4px;\n  border-radius: var(--btn-radius, 3px);\n  outline: 0;\n  font-size: var(--btn-font-size, 14px);\n  color: var(--btn-secondary-text, #242424);\n  background-color: var(--btn-secondary-background, transparent);\n  border: 1px solid var(--btn-secondary-border, #242424);\n  line-height: 1.5;\n  box-sizing: border-box;\n  background-image: var(--btn-secondary-gradient);\n  font-family: var(--font-main, \"Ericsson Hilda\", \"Helvetica\", \"sans-serif\");\n}\n\n.with--icon {\n  margin-left: var(--space-small, 4px);\n  margin-right: 0;\n}\n\n.button__label {\n  flex: auto;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\neui-icon {\n  flex: auto;\n  text-align: right;\n  --icon-color: var(--btn-secondary-text, #242424);\n}\n\n:host(:empty) .with--icon{\n  margin-left: 0;\n}\n\n.btn:last-child {\n  margin-right: 0;\n}\n\n:host([disabled]) .btn {\n  opacity: 0.4;\n  cursor: default;\n}\n\n:host(:not([disabled])) .btn:hover {\n  color: var(--btn-secondary-hover-text, #FFF);\n  text-decoration: none;\n  background-color: var(--btn-secondary-hover, #4E4E4E);\n  border: 1px solid var(--btn-secondary-hover, #4E4E4E);\n  cursor: pointer;\n}\n\n:host(:not([disabled])) .btn:hover eui-icon {\n  --icon-color: var(--btn-secondary-hover-text, #FFF);\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:focus {\n  outline: 1px solid var(--purple, #a56ebe);\n  outline-offset: 1px;\n}\n";

/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */

/**
 * @property {String} accept - one or more unique file type specifiers describing allowed file types
 * @property {String} capture - specify what source to use for capturing image or video data
 * @property {Boolean} disabled - true disables the text-field
 * @property {Boolean} fullwidth - sets component width to 100%
 * @property {Boolean} multiple - true indicates that the user may choose more than one file
 * @property {String} name - name associated with element for the purpose of form submission.
 * @property {Boolean} required - if true, input must be filled out before submitting the form
 */

class FileInput extends LitComponent {
  static get components() {
    return {
      'eui-icon': Icon,
    };
  }

  /**
   * return DOMString that represents the path to the selected file
   * empty if no file/s selected
   *
   * @returns {string}
   */
  get value() {
    const inputElement = this.shadowRoot.querySelector('input[type="file"]');
    return inputElement.value;
  }

  /**
   * return FileList object that lists every selected file
   *
   * @returns {Object}
   */
  get files() {
    const inputElement = this.shadowRoot.querySelector('input[type="file"]');
    return inputElement.files;
  }

  /**
   * bubble up the input file event on change/input
   *
   * @method handleEvent
   * @param {Object} event
   */
  handleEvent(event) {
    event.stopPropagation();
    this.bubble(event.type);
  }

  /**
   * Render the input file component. This function is called each time a
   * prop changes.
   */
  render() {
    return html`
    <label class="btn">
      <input
        type="file"
        accept=${ifDefined(this.accept)}
        capture=${ifDefined(this.capture)}
        name=${this.name}
        ?multiple=${this.multiple}
        ?required=${this.required}
        ?disabled=${this.disabled}
        @input=${this}
        @change=${this}
      />
      <span>
        <eui-icon name="upload" size="14px"></eui-icon>
        <span class="button__label with--icon">
        <slot></slot>
      </span>
    </label>
    `;
  }
}
definition('eui-file-input', {
  style,
  props: {
    accept: { attribute: true, type: String },
    capture: { attribute: true, type: String },
    disabled: { attribute: true, type: Boolean },
    fullwidth: { attribute: true, type: Boolean },
    multiple: { attribute: true, type: Boolean },
    name: { attribute: true, type: String, default: 'file' },
    required: { attribute: true, type: Boolean },
  },
})(FileInput);

export { FileInput };
