import { definition, LitComponent, html, ifDefined } from '@eui/lit-component';
import { Icon } from '@eui/theme/icon';

var style = ":host {\n  display: inline-block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([size=\"small\"]) #loaderIcon {\n  --icon-size: 16px;\n}\n:host([size=\"medium\"]) #loaderIcon {\n  --icon-size: 32px;\n}\n:host([size=\"large\"]) #loaderIcon {\n  --icon-size: 64px;\n}\n\n@keyframes rotateAnimation {\n  0%,100% {\n    -webkit-transform: rotate(0);\n    transform: rotate(0)\n  }\n\n  25% {\n    -webkit-transform: rotate(300deg);\n    transform: rotate(300deg)\n  }\n}\n\n#loaderIcon {\n  display: inline-block;\n  animation: rotateAnimation 2s infinite ease-in-out;\n  animation-play-state: running;\n  transform-origin: 50% 50%;\n}\n\n:host([hidden]) #loaderIcon {\n  animation-play-state: paused;\n}\n";

/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */

class Loader extends LitComponent {
  static get components() {
    return {
      'eui-icon': Icon,
    };
  }

  render() {
    return html`
      <div id="divIcon">
        <eui-icon
          name="dial"
          id="loaderIcon"
          color=${ifDefined(this.color)}
        ></eui-icon>
      </div>
    `;
  }
}

definition('eui-loader', {
  style,
  props: {
    hidden: { attribute: true, type: Boolean },
    size: { attribute: true, type: String, default: 'medium' },
    color: { attribute: true, type: String },
  },
})(Loader);

export { Loader };
