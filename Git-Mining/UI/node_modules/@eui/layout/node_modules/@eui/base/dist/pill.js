import { definition, LitComponent, html, ifDefined } from '@eui/lit-component';
import { Icon } from '@eui/theme/icon';

var style = ":host {\n  box-sizing: border-box;\n  display: inline-block;\n}\n\n.pill.toggle {\n  display: inline-flex;\n  padding: 0 var(--space-base, 8px);\n  min-height: 24px;\n  border-radius: var(--space-large, 16px);\n  color: var(--pill-text, #242424);\n  background-color: var(--pill-background, #FAFAFA);\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--pill-border,#878787);\n  align-items: center;\n  user-select: none;\n  white-space: nowrap;\n}\n\n.pill.toggle:focus {\n  outline: 1px solid var(--purple, #A56EBE);\n  outline-offset: 1px;\n}\n\n.pill.toggle:hover {\n  cursor: pointer;\n  background-color: var(--pill-toggle-background-hover, #DCDCDC);\n}\n\n.pill:empty {\n  display: none;\n}\n\n:host([disabled]) {\n  opacity: .4;\n  pointer-events: none;\n  cursor: pointer;\n}\n\n/* as per EDS pill style */\n:host([removable]) .pill eui-icon:last-child {\n  margin-right: -4px;\n  margin-left: var(--space-small, 4px);\n}\n\n.pill.toggle span {\n  vertical-align: middle;\n}\n\n.pill.toggle eui-icon:first-child {\n  margin-right: var(--space-small, 4px);\n}\n\n/* as per EDS pill style */\n.pill.toggle.severity-cleared eui-icon:first-child {\n  margin-left: -4px;\n}\n\n.pill eui-icon.close {\n  cursor: pointer;\n}\n\n.pill eui-icon {\n  color: var(--pill-text, #242424);\n}\n\n:host([unselected]) .pill.toggle {\n  background-color: var(--pill-toggle-unselected-background, #FAFAFA);\n  border-color: var(--pill-toggle-unselected-border, #6A6A6A);\n  border-style: dashed;\n  color: var(--pill-toggle-unselected-text, #6A6A6A);\n}\n\n:host([unselected]) .pill.toggle:hover {\n  background-color: var(--pill-toggle-unselected-background-hover, #DCDCDC);\n  border-color: var(--pill-toggle-unselected-border-hover,#878787);\n  border-style: dashed;\n  color: var(--pill-text, #242424);\n}\n\n:host([unselected]) .pill.toggle eui-icon {\n  color: var(--pill-toggle-unselected-text, #6A6A6A);\n  opacity: 0.6;\n}\n\n:host([unselected]) .pill.toggle:hover eui-icon {\n  opacity: 1;\n}\n\n.pill.severity-critical eui-icon {\n  color: var(--red, #ED0E00);\n  --icon-color: var(--red,#ED0E00);\n}\n\n.pill.severity-major eui-icon {\n  color: var(--orange, #D46617);\n  --icon-color: var(--orange, #D46617);\n}\n\n.pill.severity-minor eui-icon {\n  color: var(--yellow, #A08209);\n  --icon-color: var(--yellow, #A08209);\n}\n\n.pill.severity-warning eui-icon {\n  color: var(--link-blue, #0069C2);\n  --icon-color: var(--link-blue, #0069C2);\n}\n\n.pill.severity-indeterminate eui-icon{\n  color: var(--gray, #878787);\n  --icon-color: var(--gray, #878787);\n}\n.pill.severity-cleared eui-icon {\n  color: var(--green, #329864);\n  --icon-color: var(--green, #329864);\n}\n";

/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */

/**
 * @property {Boolean} removable - makes the pill Removable
 * @property {Boolean} disabled - true disables the component, false enables the component
 * @property {Boolean} unselected - sets the toggle state of the pill to unselected
 * @property {String} icon - name of the icon to display in the pill
 * @property {String} severity - type of severity color to set for the pill
 * @property {String} color - color value to apply to icon inside the pill
 */

class Pill extends LitComponent {
  static get components() {
    return {
      'eui-icon': Icon,
    };
  }

  /**
   * _isIcon determines if there is an icon added to the pill.
   *
   * @function _isIcon
   * @private
   */
  _isIcon = () => this.icon && this.icon.length > 0;

  /**
   * _isSeverity determines if the pill needs to display a severity icon.
   *
   * @function _isSeverity
   * @private
   */
  _isSeverity = () => this.severity && this.severity.length > 0;

  /**
   * _withIcon renders the markup for the icon if it is added to the pill
   *
   * @function _withIcon
   * @private
   */
  _withIcon = () => {
    if (this._isSeverity()) {
      return html`<eui-icon
        name=${`severity-${this.severity}`}
        size="14px"
      ></eui-icon>`;
    }
    if (this._isIcon()) {
      return html`<eui-icon
        name=${this.icon}
        color=${ifDefined(this.color)}
        size="14px"
      ></eui-icon>`;
    }
    return null;
  };

  /**
   * Close pill via X icon
   */
  _closePill = event => {
    if (event) {
      event.stopPropagation();
    }

    const emittedEvent = this.bubble(
      'eui-pill:remove',
      {},
      { cancelable: true },
    );

    if (!emittedEvent.defaultPrevented) {
      this.parentElement.removeChild(this);
    }
  };

  /**
   * Get styles for root element
   *
   * @function _getStyles
   * @private
   */
  _getStyles = () => {
    const pillSeverity = this.severity ? `severity-${this.severity}` : '';
    return `pill toggle ${pillSeverity}`;
  };

  /**
   * Handles the state change of the pill
   */
  handleEvent(event) {
    if (event.type === 'click') {
      this.unselected = !this.unselected;
    }
  }

  /**
   * Renders the pill component. This function is called each time a
   * prop changes.
   *
   * @method render
   */
  render() {
    return html`
      <div
        tabindex="0"
        class="${this._getStyles()}"
        @click=${this}
        ?disabled=${this.disabled}
      >
        ${this._withIcon()}
        <span>
          <slot></slot>
          ${this.removable
            ? html`<eui-icon
                @click=${() => this._closePill()}
                size="10px"
                color="var(--text, #242424)"
                class="close"
                name="cross"
              ></eui-icon>`
            : ''}
        </span>
      </div>
    `;
  }
}
definition('eui-pill', {
  style,
  props: {
    removable: { attribute: true, type: Boolean },
    disabled: { attribute: true, type: Boolean },
    unselected: { attribute: true, type: Boolean },
    icon: { attribute: true, type: String },
    severity: { attribute: true, type: String },
    color: { attribute: true, type: String },
  },
})(Pill);

export { Pill };
