import { definition, LitComponent, nothing, html } from '@eui/lit-component';
import { Icon } from '@eui/theme/icon';
import { Button } from './button.js';

var style = ":host {\n  position: fixed;\n  left: 0;\n  top:0;\n  width: 100%;\n  height: 100%;\n  font-family: var(--font-main, 'Ericsson Hilda', 'Helvetica');\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  display: none;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n  background: var(--dialog-overlay, rgba(0, 0, 0, 0.3));\n}\n:host([show]) {\n  display: flex;\n  opacity: 1;\n  flex: 0 0 auto;\n}\n.dialog {\n  padding: var(--space-large, 16px);\n  background-color:var(--dialog-background, #fafafa);\n  opacity: 1;\n  display: flex;\n  flex-direction: column;\n  min-width: 340px;\n  min-height: 144px;\n  max-width: 50%;\n  max-height: 90%;\n  box-sizing: border-box;\n}\n:host([fullscreen]) .dialog {\n  width: calc(100vw - 48px);\n  overflow: hidden;\n  height: calc(100vh - 48px);\n  max-width: none;\n  max-height: none;\n}\n.dialog__top {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0;\n}\n.dialog__title {\n  color: var(--text, #242424);\n  flex: 0 0 auto;\n  font-size: 16px;\n  font-weight: var(--weight-medium, 500);\n}\n.dialog__right {\n  font-size: 16px\n}\n.dialog__body {\n  color: var(--text, #242424);\n  flex: 1;\n  padding: var(--space-xl, 24px) 0;\n  overflow-y: auto;\n}\n:host([fullscreen]) .dialog__body {\n  overflow: hidden;\n  padding: var(--space-xl, 24px) 0 0;\n}\n.dialog__bottom {\n  display: flex;\n  flex: 1;\n  align-self: flex-end;\n  height: 30px;\n  margin-top: var(--space-large, 16px);\n}\n.dialog__bottom ::slotted(*) {\n  margin-left: var(--space-base, 8px);\n  margin-right: 0;\n}\n.cross{\n  cursor: pointer;\n  opacity: 0.7;\n  --icon-color: var(--text, #242424);\n}\n.cross:hover {\n  opacity: 1;\n}";

/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */
/**
 * @property {Boolean} fullscreen - true, makes dialog to take full screen space
 * @property {String} label - sets title of dialog component
 * @property {Boolean} noCancel - true hides the "Cancel" button,
 * false shows the "Cancel" button. Defaults to false
 * @property {Boolean} show - true sets dialog component visible
 * @property {Boolean} warning - true sets dialog component as warning dialog with
 * the cancel button placed on the right
 */
class Dialog extends LitComponent {
  static get components() {
    return {
      'eui-button': Button,
      'eui-icon': Icon,
    };
  }

  /** hide the dialog
   * @method hideDialog
   *
   * @public
   *
   */
  hideDialog = () => {
    this.bubble('eui-dialog:cancel');
    this.show = false;
  };

  /** show the dialog
   * @method showDialog
   *
   * @public
   *
   */
  showDialog = () => {
    this.show = true;
  };

  /**
   * Render the dialog component. This function is called each time a
   * prop changes.
   */
  render() {
    let location;
    try {
      // TODO v1 container data structure, no longer exists
      location = window.EUI.Localizer.loc;
    } catch (error) {
      location = {};
    }

    const bottom = this.fullscreen
      ? nothing
      : html` <div class="dialog__bottom">
          ${this.noCancel
            ? nothing
            : html`
                <eui-button class="cancel" @click="${this.hideDialog}">
                  ${location.CANCEL || 'Cancel'}
                </eui-button>
              `}
          <slot name="bottom"></slot>
        </div>`;

    const right = this.fullscreen
      ? html` <div class="dialog__right">
          <eui-icon
            class="cross"
            name="cross"
            size="14px"
            @click="${this.hideDialog}"
          ></eui-icon>
        </div>`
      : nothing;

    return html` <div class="dialog">
      <div class="dialog__top">
        <div class="dialog__title">${this.label}</div>
        ${right}
      </div>
      <div class="dialog__body">
        <slot name="content"></slot>
      </div>
      ${bottom}
    </div>`;
  }
}

definition('eui-dialog', {
  style,
  props: {
    fullscreen: { attribute: true, type: Boolean },
    label: { attribute: true, type: String },
    noCancel: { attribute: true, type: Boolean },
    show: { attribute: true, type: Boolean },
    warning: { attribute: true, type: Boolean },
  },
})(Dialog);

export { Dialog };
