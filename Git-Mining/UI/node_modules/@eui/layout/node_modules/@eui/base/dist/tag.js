import { definition, LitComponent, html } from '@eui/lit-component';
import { Icon } from '@eui/theme/icon';

var style = ":host {\n  display: inline-block;\n}\n\n.tag {\n  font-weight: 400;\n  display: inline-flex;\n  color: var(--tag-text, #242424);\n  background: var(--tag-background, #ebebeb);\n  border: 1px solid var(--tag-border, #d1d1d1);\n  border-radius: 3px;\n  font-size: 12px;\n  min-height: 14px;\n  padding: 0px var(--space-base, 8px);\n}\n\n:host([size=\"large\"]) .tag {\n  border-radius: 7px;\n  font-size: 14px;\n  min-height: 17px;\n  padding: 3px var(--space-base, 8px) 2px;\n}\n\n.blue {\n  background-color: var(--tag-blue, #e9f0f9);\n  border-color: var(--tag-blue-border, #1174e6);\n}\n\n.red {\n  background-color: var(--tag-red, #f9e2e1);\n  border-color: var(--tag-red-border, #ed0e00);\n}\n\n.green {\n  background-color: var(--tag-green, #e6f1eb);\n  border-color: var(--tag-green-border, #329864);\n}\n\n.purple {\n  background-color: var(--tag-purple, #f2ecf5);\n  border-color: var(--tag-purple-border, #a56ebe);\n}\n\n.orange {\n  background-color: var(--tag-orange, #f7ebe3);\n  border-color: var(--tag-orange-border, #d46617);\n}\n\n.yellow {\n  background-color: var(--tag-yellow, #f1eee1);\n  border-color: var(--tag-yellow-border, #a08209);\n}\n\n.tag eui-icon {\n  vertical-align: middle;\n  margin-right: var(--space-small, 4px);\n  padding-top: 1px;\n  --icon-size: 12px;\n}\n\n:host([size=\"large\"]) .tag eui-icon {\n  --icon-size: 16px;\n}\n\n.severity-critical eui-icon[name=\"severity-critical\"] {\n  color: var(--red, #ed0e00);\n  --icon-color: var(--red, #ed0e00);\n}\n\n.severity-major eui-icon[name=\"severity-major\"] {\n  color: var(--orange, #d46617);\n  --icon-color: var(--orange, #d46617);\n}\n\n.severity-minor eui-icon[name=\"severity-minor\"] {\n  color: var(--yellow, #a08209);\n  --icon-color: var(--yellow, #a08209);\n}\n\n.severity-warning eui-icon[name=\"severity-warning\"] {\n  color: var(--link-blue, #0069c2);\n  --icon-color: var(--link-blue, #0069c2);\n}\n\n.severity-indeterminate eui-icon[name=\"severity-indeterminate\"] {\n  color: var(--gray, #878787);\n  --icon-color: var(--gray, #878787);\n}\n\n.severity-cleared eui-icon[name=\"severity-cleared\"] {\n  color: var(--green, #329864);\n  --icon-color: var(--green, #329864);\n}\n";

/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */

/**
 * @property {String} color -  name of the background color of the tag
 * @property {String} icon - name of the icon to display in the tag
 * @property {String} severity -  name of the severity icon to display in the tag
 * @property {String} size - sets the size of the tag
 */

class Tag extends LitComponent {
  static get components() {
    return {
      'eui-icon': Icon,
    };
  }

  /**
   * _isIcon determines if there is an icon added to the tag.
   *
   * @function _isIcon
   * @private
   */
  _isIcon = () => this.icon && this.icon.length > 0;

  /**
   * _isSeverity determines if the tag needs to display a severity icon.
   *
   * @function _isSeverity
   * @private
   */
  _isSeverity = () => this.severity && this.severity.length > 0;

  /**
   * _getSeverityIcon renders the markup for the severity icon if it is added to the tag
   *
   * @function _getSeverityIcon
   * @private
   */
  _getSeverityIcon = () => {
    if (this._isSeverity()) {
      return html`<eui-icon name=${`severity-${this.severity}`}></eui-icon>`;
    }
    return null;
  };

  /**
   * _getStandardIcon renders the markup for the generic icon if it is added to the tag
   *
   * @function _getStandardIcon
   * @private
   */
  _getStandardIcon = () => {
    if (this._isIcon()) {
      return html`<eui-icon name=${this.icon}></eui-icon>`;
    }
    return null;
  };

  /**
   * Get styles for root element
   *
   * @function _getStyles
   * @private
   */
  _getStyles = () => {
    const tagSeverity = this.severity ? `severity-${this.severity}` : '';
    const tagSize = this.size === 'large' ? 'large' : 'small';
    const tagColor = this.color ? `${this.color}` : '';
    return `tag ${tagSize} ${tagColor} ${tagSeverity}`;
  };

  /**
   * Renders the tag component. This function is called each time a
   * prop changes.
   *
   * @method render
   */
  render() {
    return html`
      <span class="${this._getStyles()}">
        ${this._getSeverityIcon()} ${this._getStandardIcon()}
        <slot></slot>
      </span>
    `;
  }
}
definition('eui-tag', {
  style,
  props: {
    color: { attribute: true, type: String },
    icon: { attribute: true, type: String },
    severity: { attribute: true, type: String },
    size: { attribute: true, type: String },
  },
})(Tag);

export { Tag };
