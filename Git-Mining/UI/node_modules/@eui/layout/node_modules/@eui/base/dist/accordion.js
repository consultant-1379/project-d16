import { definition, LitComponent, html } from '@eui/lit-component';
import { Icon } from '@eui/theme/icon';

var style = ":host {\n  display: block;\n  box-sizing: border-box;\n  font-family: var(--font-main, 'Ericsson Hilda', 'Helvetica', 'sans-serif');\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n}\n\n:host([line]) .accordion__item {\n  border-top: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  border-color: var(--accordion-border-color, #878787);\n}\n\n.accordion {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  opacity: 1;\n}\n\n.accordion__item {\n  padding: 0;\n  -webkit-user-select: none;\n  user-select: none;\n  position: relative;\n  border-width: 1px 0;\n}\n\n.accordion__item--sibling {\n  margin: -1px 0 0 0;\n}\n\n.accordion__item--closed {\n  color: var(--text, #242424);\n}\n\n.accordion__item--closed .accordion__item__content {\n  display: none;\n  padding-bottom: 0;\n}\n\n.accordion__item__content {\n  padding: 16px 24px;\n  padding-top: 0;\n  user-select: text;\n}\n\n.accordion__item--opened .accordion__item__title {\n  font-weight: 400;\n}\n\n.accordion__item__title {\n  display: flex;\n  align-items: center;\n  padding: 9px 8px 10px;\n  line-height: 1.5;\n}\n\n.accordion__item__title:hover {\n  background: var(--table-hover, #dcdcdc);\n  cursor: pointer;\n}\n\n.left-slot,\n.right-slot {\n  flex: none;\n  display: flex;\n  align-items: center;\n}\n\n#accordion-chevron {\n  margin-left: var(--space-base, 8px);\n}\n\nslot[name='right']::slotted(*) {\n  margin-left: var(--space-base, 8px);\n}\n\nslot[name='left']::slotted(*) {\n  margin-right: var(--space-base, 8px);\n}\n\n.title {\n  flex: auto;\n}\n\n:focus {\n  outline: 1px solid var(--purple, #a56ebe);\n}\n";

/**
 * @license
 * COPYRIGHT Ericsson 2022
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 */

/**
 * @property {Boolean} line - true adds a line above and below the accordion
 * @property {String} categoryTitle - the title of the accordion
 * @property {Boolean} open - true opens the accordion, false closes the accordion
 */
class Accordion extends LitComponent {
  static get components() {
    return {
      'eui-icon': Icon,
    };
  }

  /**
   * handle a click on the accordion title.
   * @method _handleAccordionClick
   *
   * @private
   */
  _handleAccordionClick = () => {
    this.open = !this.open;
  };

  /**
   * If the accordion is part of a group of accordions then the margin must be different
   * depending on the line set to true/false. If the line is set to display, then it
   * must adjust it's margin so two stacked accordions look like there is only a line
   * of 1px between them and not a line of 2px.
   *
   * @function _previousSibling
   * @private
   */
  _previousSibling = () => {
    if (
      this.previousElementSibling &&
      this.previousElementSibling.localName === 'eui-accordion'
    ) {
      if (this.line) {
        return 'accordion__item--sibling';
      }
    }
    return '';
  };

  /**
   * Render the <eui-accordion> component. This function is called each time a
   * prop changes.
   *
   * @method render
   */
  render() {
    const divTitle = html` <div
      class="accordion__item__title"
      @click=${this._handleAccordionClick}
    >
      <div class="left-slot">
        <slot name="left"></slot>
      </div>
      <span class="title">${this.categoryTitle}</span>
      <div class="right-slot">
        <slot name="right"></slot>
        <eui-icon
          id="accordion-chevron"
          name=${this.open ? 'chevron-up' : 'chevron-down'}
          size="16px"
        ></eui-icon>
      </div>
    </div>`;

    const divContent = html` <div
      part="content"
      class="accordion__item__content"
    >
      <slot></slot>
    </div>`;

    return html` <div class="accordion" tabindex="0">
      <div
        class="accordion__item ${this._previousSibling()} ${this.open
          ? 'accordion__item--opened'
          : 'accordion__item--closed'}"
      >
        ${divTitle} ${divContent}
      </div>
    </div>`;
  }
}
definition('eui-accordion', {
  style,
  props: {
    categoryTitle: { attribute: true, type: String, default: 'Title' },
    line: { attribute: true, type: Boolean },
    open: { attribute: true, type: Boolean },
  },
})(Accordion);

export { Accordion };
